{"version":3,"sources":["src/utils/Logger.ts","src/context/HTMLRenderEngineProvider.tsx","src/utils/updater.common.ts","src/utils/updater.web.ts","src/components/modals/ModalBase.tsx","src/components/modals/BaseActionConfirmModal.tsx","src/screens/Updater.web.tsx","src/ui/Filters.tsx","src/ui/NoContent.tsx","src/ui/VideoCard.tsx","src/ui/CourseVideos.tsx","src/styles.ts","src/components/AnimatedLiveCircle.tsx","src/components/widgets/WidgetBase.tsx","src/components/widgets/LiveWidget.tsx","src/ui/Section.tsx","src/utils/getFileIcon.tsx","src/ui/DirectoryItem.tsx","src/utils/html.ts","src/ui/Notification.tsx","src/ui/CourseOverview.tsx","src/utils/material.ts","src/ui/DirectoryItemRecursive.tsx","src/ui/MaterialExplorer.tsx","src/ui/CourseAlerts.tsx","src/ui/core/BadgeContainer.tsx","src/ui/Header.tsx","src/ui/Tabs.tsx","src/screens/Course.tsx","src/components/modals/ListSelectorModal.tsx","src/screens/Search.tsx","src/ui/VideoPlayer.web.tsx","src/screens/Video.tsx","src/screens/Home.tsx","src/screens/Email.tsx","src/ui/SettingsItem.tsx","src/components/modals/SettingsEnableLoggingModal.tsx","src/screens/Settings.tsx","src/screens/Material.tsx","src/sections.ts","src/ui/Drawer.tsx","src/ui/core/PressableCard.tsx","src/screens/Bookings.tsx","src/components/loaders/AnimatedGradientBase.web.tsx","src/components/loaders/LoaderBase.tsx","src/components/loaders/TimetableDayLoader.tsx","src/components/modals/TimetableEventModal.tsx","src/components/timetable/TimetableEvent.tsx","src/components/timetable/TimetableDay.tsx","src/components/timetable/TimetableSlots.tsx","src/components/timetable/TimetableGrid.tsx","src/ui/HorizontalIconSelector.tsx","src/components/ListRank.tsx","src/components/modals/TimetableOptionsModal.tsx","src/components/timetable/TimetableHeader.tsx","src/screens/Timetable.tsx","src/ui/ProgressCircle.tsx","src/components/exams/Progress.tsx","src/screens/Exams.tsx","src/components/modals/ExamsBookExamModal.tsx","src/components/modals/ExamsCancelExamModal.tsx","src/screens/ExamSessions.tsx","src/screens/Maps.tsx","src/screens/Classrooms.tsx","src/screens/People.tsx","src/screens/Courses.tsx","src/ui/core/Checkbox.tsx","src/screens/Notifications.tsx","src/utils/native-modules.ts","src/routes/HomeRouter.tsx","src/routes/AppStackNavigator.tsx","src/routes/Router.tsx"],"names":["Logger","entry","appendFile","logFilePath","JSON","stringify","catch","err","console","log","hasLoggedBasicDeviceInfo","type","appBuildNumber","DeviceInfo","getBuildNumber","appBuildVariant","Config","VARIANT","appVersion","version","appVersionBinary","getVersion","osApiLevel","getApiLevelSync","osName","getSystemName","getBaseOsSync","osVersion","getSystemVersion","theme","store","getState","session","config","writeToFile","logBasicDeviceInfo","parseInt","ENABLE_DEBUG_OPTIONS","endpoint","includes","logRequest","error","logsDirectoryPath","getDocumentsPath","moment","format","HTMLRenderEngineProvider","children","dark","useContext","DeviceContext","color","useMemo","colors","gray200","undefined","tagsStyles","p","marginVertical","isGitHubOnline","fetch","status","fetchReleaseJson","json","checkForUpdates","tag","headers","Accept","Platform","OS","from","genericPlatform","find","r","versionCode","e","updateCleanup","ModalBase","title","actions","dismissable","onDismiss","icon","accentColor","size","ModalContext","visible","hideModal","useState","internalVisible","setInternalVisible","dismiss","useCallback","setTimeout","offset","useSharedValue","animStyle","useAnimatedStyle","backgroundColor","value","opacity","transform","scale","useEffect","withTiming","duration","Modal","transparent","animationType","statusBarTranslucent","onRequestClose","View","style","flex","TouchableOpacity","activeOpacity","onPress","alignItems","justifyContent","width","DeviceSize","lg","maxHeight","gray700","borderRadius","marginHorizontal","ScrollView","paddingVertical","paddingHorizontal","flexDirection","name","Text","s","w","c","gray100","gray800","marginTop","paddingBottom","map","action","i","marginLeft","Button","accent300","secondary","text","label","onSelect","then","BaseActionConfirmModal","onConfirm","onCancel","customLabels","t","useTranslation","cancel","confirm","Updater","Filters","items","onChange","length","selected","setSelected","item","borderWidth","borderColor","marginRight","NoContent","VideoCard","setWidth","hours","minsString","res","Math","ceil","floor","toString","lengthString","PressableBase","onLayout","nativeEvent","layout","android_ripple","lightGray","height","Image","source","uri","cover_url","resizeMode","position","right","bottom","padding","numberOfLines","date","CourseVideosHeader","courseData","onYearChange","Object","keys","extendedInfo","vc_recordings","sort","a","b","key","y","CourseVideos","courseId","refreshControl","navigation","useNavigation","selectedYear","setSelectedYear","useSelector","state","courses","course","basicInfo","code","videos","current","FlatList","data","ListEmptyComponent","ListHeaderComponent","renderItem","navigate","video","styles","StyleSheet","create","blackText","black","whiteText","white","grayText","gray","textRegular","fontFamily","textMedium","textBold","textExtraSmall","fontSize","textSmall","textNormal","textMediumSize","textLarge","textExtraLarge","textTitleLarge","withHorizontalPadding","withRoundedBorder","safePaddingTop","paddingTop","container","alignContent","paddingFromHeader","titleBar","tabNavigator","tabBarActiveTintColor","elevated","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","elevatedSmooth","border","AnimatedLiveCircle","coeff","useRef","Animated","Value","loop","timing","toValue","useNativeDriver","start","subtract","left","top","WidgetBase","compact","withButton","withPadding","fullHeight","Pressable","LiveWidget","liveClass","courseName","device","mounted","setMounted","setTime","intervalID","calculateTime","utc","Date","now","diff","setInterval","clearInterval","openURL","getLessonURL","url","LinearGradient","x","end","Section","FILE_TYPES","colorLight","extensions","gradient1","red","orange","green","sizes","downloadFile","getDownloadURL","DirectoryItem","relativeDate","sizeLabel","_size","index","min","log10","toFixed","iconComponent","filename","ext","split","pop","toLowerCase","gray500","getFileIcon","parentStyle","overflow","gray300","creation_date","fromNow","gray600","htmlTags","isCourseAlert","n","topic","NotificationComponent","notification","read","NotificationType","TEST","DIRECT","NOTICE","MATERIAL","input","decode","replace","body","dateString","time","course_name","html","CourseOverview","tree","changeTab","materialTree","material","buildField","marginBottom","fields","professor","surname","num_credits","degree_year","year_period","STATUS","PENDING","ActivityIndicator","slice","field","live_lessons","meeting_id","getMaterialList","flatMap","concat","filter","file","notices","Notification","course_code","DirectoryItemRecursive","opened","setOpened","MaterialExplorer","CourseAlerts","alerts","_styles","initialNumToRender","keyExtractor","alert","id","HEADER_TYPE","badge","BadgeContainer","number","badgeText","Header","headerType","notifications","user","dispatch","useDispatch","notificationCount","is_read","themeToggleIconName","toggleTheme","setConfig","header","headerSection","headerMiddle","headerEnd","MAIN","DrawerActions","toggleDrawer","SECONDARY","goBack","Tabs","adjusted","defaultIndex","selectedIndex","setSelectedIndex","tab","selectedIndicator","contentContainerStyle","horizontal","showsHorizontalScrollIndicator","Course","route","params","courseCode","currentTab","setCurrentTab","tabs","SUCCESS","loadCourse","basicCourseInfo","refresh","refreshing","section","RefreshControl","onRefresh","Screen","ListSelectorModal","_onSelect","Search","setModal","query","setQuery","results","setResults","searchFilter","setSearchFilter","quickLoad","setQuickLoad","searchTimer","setSearchTimer","loadTimer","setLoadTimer","handleNewSearch","txt","_query","trim","clearTimeout","searchMaterial","findFiles","_items","_results","forEach","push","_course","TextInput","initiallyFocused","placeholder","autoFocus","onChangeText","flexGrow","maxToRenderPerBatch","ListFooterComponent","VideoPlayer","src","controls","autoPlay","VideoInfo","VideoPlayerWrapper","currentVideo","windowWidth","windowHeight","RecommendedFlatList","relatedVideos","setCurrentVideo","Video","useWindowDimensions","memoizedVideoPlayer","sectionsData","sectionColors","Home","recentMaterial","loadExtendedCourseInfoStatus","latestAlert","notice","topSections","topSection","topSectionInner","topSectionText","editable","btn","getWebMailUrl","emailUrl","Email","loaded","setLoaded","setWebViewRef","webMailUrl","setWebMailUrl","getUnreadEmailCount","href","ref","onNavigationStateChange","loading","SettingsItem","description","disabled","settingsFunction","toggle","toggleValue","textContainer","Switch","SettingsEnableLoggingModal","logging","setToast","message","path","Settings","debugSettingsItems","resetConfig","sendTestPushNotification","buildSettingsItem","Material","getRecentMaterialStatus","selectedTab","setSelectedTab","materialLoaded","setMaterialLoaded","setAllLoaded","_materialLoaded","getRecentMaterial","sections","isSectionUnavailable","orderedSections","sec","Drawer","props","deviceContext","userInfo","shortDegreeName","degreeType","degree_type","degreeName","degree_name","toUpperCase","setCurrent","handleLogout","logout","drawerScrollView","drawer","hr","category","DrawerContentScrollView","screen","charAt","accent100","PressableCard","expanded","sideElement","expandedElement","rotation","sideElementOpacity","computedHeight","setComputedHeight","expandedElementHeight","expandedElementOpacity","animCardStyle","expandedToRender","setExpandedToRender","result","onExpandedElementLayout","condition","animChevronStyle","rotate","expandedElementStyle","sideElementStyle","button","paddingLeft","paddingRight","gray400","BookingSubctx","ctxId","subctx","language","slots","setState","prev","ita","eng","BookingCtx","ctx","setExpanded","subcontexts","BookingCard","booking","barcodeUrl","start_time","end_time","course_id","subcontext_name","context_name","aspectRatio","Bookings","getBookingsStatus","getBookingContextsStatus","bookings","bookingContexts","getMyBookings","getBookingContexts","barcode_url","current_id","context_id","subcontext_id","i18next","AnimatedGradientBase","LoaderBase","setVisible","translateY","translateX","TimetableDayLoader","h","random","Array","_","yPositions","rx","ry","TimetableEventModal","slot","room","TimetableEvent","overlapGroup","courseNames","textOpacity","animTextSectionStyle","set","m","as","courseColors","findIndex","val","gray50","TimetableDay","fake","day","setW","sortedByPriority","timetablePriority","indexOf","overlapping","timetableOverlap","_overlapping","add","_localOverlapping","event","toDate","getTime","zIndex","_group","group","findOverlapGroup","_index","_slot","TimetableSlots","timetableDays","selectedDay","Dimensions","get","setCourseNames","days","_courseNames","_list","changed","TimetableGrid","showLine","currentTime","setCurrentTime","updateTimeout","borderBottomWidth","borderTopColor","borderBottomColor","borderTopWidth","HorizontalIconSelector","onValueChange","defaultValue","setValue","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ListRank","callback","setData","onDragEnd","drag","onLongPress","onPressIn","TimetableOptionsModal","showListRank","setShowListRank","rankItems","toggleOverlapMode","mode","timetableOptionsItems","d","TimetableHeader","weekStartDate","onLayoutChanged","onDayChanged","onWeekStartDateChanged","_onWeekStartDateChanged","withSequence","headerTitle","weekStartMoment","weekEndMoment","startOf","small","DateTimePickerAndroid","open","timestamp","_onLayoutChanged","Timetable","setWeekStartDate","setSlots","_timetableDays","setLayout","setSelectedDay","fetchTimer","setFetchTimer","doUpdate","setDoUpdate","controlTransition","direction","getTimetable","ProgressCircle","max","radius","strokeWidth","circ","PI","_value","fill","stroke","cx","cy","strokeDasharray","strokeDashoffset","Progress","marks","chartWidth","sorted_marks","mark","asDays","mark1","mark2","avgs","_avgs","weights","labels","datasets","legend","LineChart","yAxisInterval","chartConfig","backgroundGradientFrom","gray900","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","AvgWidget","avg","MarkWidget","provisional","getFields","failed","absent","icons","values","Exams","setTab","filteredMarks","permanent","_marks","total_credits","reduce","acc","parseFloat","get_avg","list","idx","ItemSeparatorComponent","ExamsBookExamModal","examSession","success","bookExamSession","session_id","bookExamSync","exam_name","rooms","ExamsCancelExamModal","cancelExamSession","cancelExamSync","isExamBooked","user_is_signed_up","isExamAvailable","ExamSessions","exams","getExamsStatus","errorMsgLanguage","setErrorMsgLanguage","IDLE","ERROR","getExams","getLanguageCode","filteredSessions","examSessionCard","accent200","signup_deadline","join","Maps","Classrooms","People","Courses","gotoCourse","isMain","mainCourse","secondaryCourse","Checkbox","_SelectableNotification","handlePress","selecting","setSelecting","onSelectionChange","animStyleCheckbox","onHandlerStateChange","State","ACTIVE","sel","Notifications","notificationTypes","getNotificationsStatus","selectedCategory","setSelectedCategory","setRefreshing","refreshNotifications","getNotificationList","markNotificationRead","copy","setNotifications","tabOffset","onHardwareBackButtonPressed","BackHandler","addEventListener","removeEventListener","deleting","setDeleting","areAllSelected","allSelected","selectionOptions","deleteNotification","opt","id_incarico","handleSelectionChange","_UpdaterModule","NativeModules","UpdaterModule","_NotificationModule","NotificationModule","getNativeFunction","module","Error","DrawerStack","createDrawerNavigator","HomeRouter","loginStatus","loadCoursesStatus","login","method","loadCoursesData","FCMToken","getToken","registerPushNotifications","setLoadExtendedCourseInfoStatus","pendingStatus","allLoaded","successStatus","getDrawerComponent","Navigator","screenOptions","headerShown","drawerType","useLegacyImplementation","drawerContent","component","AppStack","createNativeStackNavigator","AppStackNavigator","NavigationContainer","Router","setMomentLocale","checked","acceptedUpdate","updaterState","setUpdaterState","releaseData","exit","_globalTauri","process","locale","getLocales","languageCode","notes","content","note","authStatus","setMessage","buildMessage","AUTH_STATUS","NOT_VALID"],"mappings":"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","file":"static/js/4.b3917f5d.chunk.js","sourcesContent":["import moment from 'moment';\nimport {Entry} from 'open-polito-api/lib/device';\nimport Config from 'react-native-config';\nimport DeviceInfo from 'react-native-device-info';\nimport store from '../store/store';\nimport version from '../../version.json';\nimport {appendFile, getDocumentsPath} from './fs';\n\nexport type BasicDeviceInfoLogEntry = {\n  type: 'DEVICE_INFO';\n  appBuildNumber: string;\n  appBuildVariant: string;\n  appVersion: string;\n  appVersionBinary: string;\n  osApiLevel: number;\n  osName: string;\n  osVersion: string;\n  theme: 'light' | 'dark' | 'system';\n};\n\nexport type RequestLogEntry = Entry & {\n  type: 'REQUEST';\n};\n\nexport type ErrorLogEntry = Error & {\n  type: 'ERROR';\n};\n\nexport type LogEntry =\n  | BasicDeviceInfoLogEntry\n  | RequestLogEntry\n  | ErrorLogEntry;\n\nexport default class Logger {\n  public static logsDirectoryPath = getDocumentsPath();\n\n  public static logFilePath =\n    Logger.logsDirectoryPath +\n    '/' +\n    'request_log-' +\n    moment().format('YYYY-MM-DD-THHmmssSSS') +\n    '.txt';\n\n  public static hasLoggedBasicDeviceInfo: boolean = false;\n\n  /**\n   * Writes log entry to log file\n   * @param entry\n   *\n   * @remarks\n   * Uses ExternalDirectoryPath (/storage/emulated/0/Android/data/org.openpolito.app/files/) on Android,\n   * DocumentDirectoryPath on iOS\n   */\n  static async writeToFile(entry: LogEntry) {\n    await appendFile(Logger.logFilePath, JSON.stringify(entry) + '\\n').catch(\n      err => console.log(err),\n    );\n  }\n\n  /**\n   * Logs basic device info\n   */\n  static async logBasicDeviceInfo() {\n    if (Logger.hasLoggedBasicDeviceInfo) return;\n    const entry: BasicDeviceInfoLogEntry = {\n      type: 'DEVICE_INFO',\n      appBuildNumber: DeviceInfo.getBuildNumber(),\n      appBuildVariant: Config.VARIANT || '',\n      appVersion: version.version,\n      appVersionBinary: DeviceInfo.getVersion(),\n      osApiLevel: DeviceInfo.getApiLevelSync(),\n      osName: DeviceInfo.getSystemName() || DeviceInfo.getBaseOsSync(),\n      osVersion: DeviceInfo.getSystemVersion(),\n      theme: store.getState().session.config.theme,\n    };\n    await Logger.writeToFile(entry);\n    Logger.hasLoggedBasicDeviceInfo = true;\n  }\n\n  /**\n   * Logs a network request\n   *\n   * @remarks See {@link Entry}\n   * @param entry\n   */\n  static async logRequest(entry: Entry) {\n    await Logger.logBasicDeviceInfo();\n    // Don't log if debug options not enabled\n    if (!parseInt(Config.ENABLE_DEBUG_OPTIONS!, 10)) return;\n    // Don't log if login endpoint\n    if (entry.endpoint.includes('login')) return;\n    await Logger.writeToFile({\n      type: 'REQUEST',\n      ...entry,\n    });\n  }\n\n  /**\n   * Like {@link logRequest}, but called synchronously\n   * @param entry\n   */\n  static logRequestSync(entry: Entry) {\n    (async () => {\n      await Logger.logBasicDeviceInfo();\n      await Logger.logRequest(entry);\n    })();\n  }\n\n  /**\n   * Logs an error's name, message, and stack trace\n   * @param error\n   */\n  static async logError(error: Error) {\n    await Logger.logBasicDeviceInfo();\n    await Logger.writeToFile({\n      type: 'ERROR',\n      ...error,\n    });\n  }\n}\n","import React, {ReactNode, useContext, useMemo} from 'react';\nimport {\n  MixedStyleDeclaration,\n  RenderHTMLConfigProvider,\n  TRenderEngineProvider,\n} from 'react-native-render-html';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport {DeviceContext} from './Device';\n\nconst HTMLRenderEngineProvider = ({children}: {children: ReactNode}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const color = useMemo<Color | undefined>(\n    () => (dark ? colors.gray200 : undefined),\n    [dark],\n  );\n\n  const tagsStyles = useMemo<Readonly<Record<string, MixedStyleDeclaration>>>(\n    () => ({\n      p: {\n        marginVertical: 4 * p,\n        color,\n      },\n    }),\n    [color],\n  );\n\n  return (\n    <TRenderEngineProvider tagsStyles={tagsStyles}>\n      <RenderHTMLConfigProvider>{children}</RenderHTMLConfigProvider>\n    </TRenderEngineProvider>\n  );\n};\n\nexport default HTMLRenderEngineProvider;\n","import {Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport version from '../../version.json';\nimport {genericPlatform} from './platform';\n\n/**\n * Structure of one array item found in \"release.json\",\n * found in the root directory of the repo.\n */\nexport type ReleaseJsonEntry = {\n  type: 'release' | 'beta' | 'dev';\n  tag: string;\n  versionCode: number;\n  format: 'text' | 'html';\n  notes: {\n    language: 'it' | 'en';\n    content: string[];\n  }[];\n};\n\n/**\n * Structure of one array item found in \"assets.json\",\n * found for each GitHub release.\n */\nexport type AssetsJsonEntry = {\n  os: string;\n  arch: string;\n  name: string;\n  sha256: string;\n};\n\n/**\n * Structure of the portion we need from GitHub's response json\n * when fetching release data.\n */\nexport type PartialGitHubReleaseResponse = {\n  assets: {\n    name: string;\n    browser_download_url: string;\n    size: number; // in bytes\n  }[];\n};\n\nexport const isGitHubOnline = async (): Promise<boolean> => {\n  const statusCode = (await fetch('https://api.github.com')).status;\n  return statusCode === 200;\n};\n\n/**\n * Returns the release.json contents\n * @returns\n */\nexport const fetchReleaseJson = async (): Promise<ReleaseJsonEntry[]> => {\n  return (await (\n    await fetch(\n      'https://raw.githubusercontent.com/open-polito/open-polito/master/release.json',\n    )\n  ).json()) as ReleaseJsonEntry[];\n};\n\n/**\n * Return release data by tag\n * @param tag The release tag\n */\nexport const fetchReleaseByTag = async (\n  tag: string,\n): Promise<PartialGitHubReleaseResponse> => {\n  return (await (\n    await fetch(\n      `https://api.github.com/repos/open-polito/open-polito/releases/tags/${tag}`,\n      {\n        headers: {Accept: 'application/vnd.github+json'},\n      },\n    )\n  ).json()) as PartialGitHubReleaseResponse;\n};\n\n/**\n * Check for updates, if and only if the following are all true:\n * - The OS is Android\n * - The app was not installed from PLAY_STORE (see {@link version})\n * - The device is online (can reach GitHub API)\n */\nexport const checkForUpdates = async (): Promise<\n  ReleaseJsonEntry | undefined\n> => {\n  if (\n    (Platform.OS === 'android' && !['PLAY_STORE'].includes(version.from)) ||\n    genericPlatform === 'desktop'\n  ) {\n    const reachable = await isGitHubOnline();\n    if (!reachable) {\n      return undefined;\n    }\n    try {\n      const releaseData = (await fetchReleaseJson()).find(\n        r =>\n          (Config.VARIANT === undefined ? true : r.type === Config.VARIANT) &&\n          r.versionCode > version.versionCode,\n      );\n      return releaseData;\n    } catch (e) {}\n  }\n  return undefined;\n};\n","export * from './updater.common';\n\nconst updateCleanup = async () => {};\nconst getUpdateDestinationFilePath = async () => {};\nconst checkFileMatchesSHA256 = async () => {};\n\nexport {updateCleanup, getUpdateDestinationFilePath, checkFileMatchesSHA256};\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport {Modal, ScrollView, TouchableOpacity, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors, {Color} from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport {DeviceSize} from '../../types';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport Text from '../../ui/core/Text';\n\nexport interface ModalAction {\n  type: 'colored' | 'main' | 'secondary';\n  label: string;\n  value: string;\n  onSelect: (value: string) => Promise<any>;\n  dismiss: boolean; // Whether to dismiss the modal when action executed\n}\n\nexport interface ModalBaseProps {\n  title: string;\n  actions?: ModalAction[];\n  dismissable?: boolean;\n  onDismiss?: () => any;\n  children: ReactNode;\n  icon?: string;\n  accentColor?: Color;\n}\n\nconst ModalBase: FC<ModalBaseProps> = ({\n  title,\n  actions,\n  dismissable = true,\n  onDismiss = () => {},\n  children,\n  icon,\n  accentColor,\n}) => {\n  const {dark, size} = useContext(DeviceContext);\n  const {visible, hideModal} = useContext(ModalContext);\n\n  const [internalVisible, setInternalVisible] = useState(true);\n\n  const dismiss = useCallback(() => {\n    if (dismissable) {\n      setTimeout(() => setInternalVisible(false), 200);\n      hideModal();\n      onDismiss();\n    }\n  }, [hideModal, dismissable, onDismiss]);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: `rgba(0, 0, 0, ${offset.value / 2})`,\n      opacity: offset.value,\n      transform: [\n        {\n          scale: 1.1 - 0.1 * offset.value,\n        },\n      ],\n    };\n  });\n\n  useEffect(() => {\n    offset.value = withTiming(visible ? 1 : 0, {duration: 200});\n  }, [visible, offset]);\n\n  return (\n    <Modal\n      transparent={true}\n      visible={internalVisible}\n      animationType=\"none\"\n      statusBarTranslucent={true}\n      onRequestClose={dismiss}>\n      <Animated.View\n        style={[\n          animStyle,\n          {\n            flex: 1,\n          },\n        ]}>\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={dismiss}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <TouchableOpacity\n            activeOpacity={1}\n            style={[\n              {\n                width: size >= DeviceSize.lg ? '50%' : '90%',\n                maxHeight: '80%',\n                backgroundColor: dark ? colors.gray700 : colors.gray200,\n                borderRadius: 4 * p,\n                marginHorizontal: 16 * p,\n              },\n            ]}>\n            <ScrollView>\n              <View\n                style={{\n                  paddingVertical: 24 * p,\n                  paddingHorizontal: 16 * p,\n                }}>\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                  }}>\n                  {icon && (\n                    <>\n                      <TablerIcon\n                        name={icon}\n                        color={accentColor}\n                        size={24 * p}\n                      />\n                      <View style={{width: 16 * p}} />\n                    </>\n                  )}\n                  <Text s={16} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n                    {title}\n                  </Text>\n                </View>\n                <View\n                  style={{\n                    marginTop: 16 * p,\n                  }}>\n                  {children}\n                </View>\n              </View>\n            </ScrollView>\n            {actions && (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  paddingBottom: 24 * p,\n                  paddingHorizontal: 16 * p,\n                }}>\n                {actions.map((action, i) => (\n                  <View\n                    key={action.value}\n                    style={[\n                      {\n                        flex: 1,\n                      },\n                      i !== 0\n                        ? {\n                            marginLeft: 32 * p,\n                          }\n                        : {},\n                    ]}>\n                    <Button\n                      color={\n                        action.type === 'colored'\n                          ? accentColor\n                          : colors.accent300\n                      }\n                      secondary={action.type === 'secondary'}\n                      text={action.label}\n                      onPress={() => {\n                        action.onSelect(action.value).then(() => {\n                          action.dismiss && dismiss();\n                        });\n                      }}\n                    />\n                  </View>\n                ))}\n              </View>\n            )}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Animated.View>\n    </Modal>\n  );\n};\n\nexport default ModalBase;\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Color} from '../../colors';\nimport {ModalContext} from '../../context/ModalProvider';\nimport ModalBase, {ModalAction} from './ModalBase';\n\nexport interface BaseActionConfirmModalProps {\n  title: string;\n  onConfirm?: () => any;\n  onCancel?: () => any;\n  icon?: string;\n  accentColor?: Color;\n  customLabels?: {\n    cancel: string;\n    confirm: string;\n  };\n  children: ReactNode;\n}\n\nconst BaseActionConfirmModal: FC<BaseActionConfirmModalProps> = ({\n  title,\n  children,\n  onConfirm = () => {},\n  onCancel = () => {},\n  icon,\n  accentColor,\n  customLabels,\n}) => {\n  const {hideModal} = useContext(ModalContext);\n  const {t} = useTranslation();\n\n  const actions = useMemo<ModalAction[]>(() => {\n    return [\n      {\n        type: 'secondary',\n        label: customLabels ? customLabels.cancel : t('cancel'),\n        value: 'cancel',\n        onSelect: async () => {\n          onCancel();\n          hideModal();\n        },\n        dismiss: true,\n      },\n      {\n        type: 'colored',\n        label: customLabels ? customLabels.confirm : t('confirm'),\n        value: 'confirm',\n        onSelect: async () => {\n          onConfirm();\n          hideModal();\n        },\n        dismiss: true,\n      },\n    ];\n  }, [hideModal, onCancel, onConfirm, t, customLabels]);\n\n  return (\n    <ModalBase\n      icon={icon}\n      accentColor={accentColor}\n      title={title}\n      actions={actions}>\n      {children}\n    </ModalBase>\n  );\n};\n\nexport default BaseActionConfirmModal;\n","const Updater = () => {\n  return <div>Updater for web not implemented yet</div>;\n};\n\nexport default Updater;\n","import React, {useState} from 'react';\nimport {TouchableOpacity, View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst Filters = ({\n  items,\n  onChange,\n}: {\n  items: {label: string; value: string}[];\n  onChange: (arg0: string) => any;\n}) => {\n  const [selected, setSelected] = useState<string>(\n    items && items.length > 0 ? items[0].value : '',\n  );\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      {items.map(item => (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              onChange(item.value);\n              setSelected(item.value);\n            }}>\n            <View\n              style={{\n                paddingHorizontal: 8 * p,\n                paddingVertical: 4 * p,\n                borderWidth: 1 * p,\n                borderRadius: 16 * p,\n                borderColor:\n                  item.value === selected ? colors.accent300 : colors.gray200,\n                marginRight: 8 * p,\n              }}>\n              <Text\n                s={10 * p}\n                w=\"r\"\n                c={item.value === selected ? colors.accent300 : colors.gray200}>\n                {item.label}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Filters;\n","import React, {useContext} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport Text from './core/Text';\n\nexport default function NoContent() {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n\n  return (\n    <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center'}}>\n      <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n        {t('noContent')}\n      </Text>\n    </View>\n  );\n}\n","import {useNavigation} from '@react-navigation/native';\nimport moment from 'moment';\nimport {Recording} from 'open-polito-api/lib/course';\nimport React, {useMemo, useState} from 'react';\nimport {Dimensions, Image, View} from 'react-native';\nimport Animated, {useAnimatedStyle, withTiming} from 'react-native-reanimated';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\nconst VideoCard = ({\n  item,\n  onPress,\n  dark,\n}: {\n  item: Recording;\n  onPress: () => any;\n  dark: boolean;\n}) => {\n  const [width, setWidth] = useState<number>(0);\n\n  const hours = useMemo(() => item.length / 60, [item.length]);\n\n  const minsString = useMemo(() => {\n    let res = Math.ceil((hours - Math.floor(hours)) * 60).toString();\n    if (res.length === 1) {\n      res = '0' + res;\n    }\n    return res;\n  }, [hours]);\n\n  /**\n   * Only show element when image width has been computed\n   */\n  const animStyle = useAnimatedStyle(() => ({\n    opacity: withTiming(width === 0 ? 0 : 1, {duration: 200}),\n  }));\n\n  const lengthString = Math.floor(hours) + ':' + minsString + ':00';\n  return (\n    <Animated.View style={[animStyle]}>\n      <PressableBase\n        onLayout={e => setWidth(e.nativeEvent.layout.width)}\n        onPress={onPress}\n        android_ripple={{color: colors.lightGray}}\n        key={item.date + item.title}\n        style={[\n          {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            paddingVertical: 12 * p,\n            paddingHorizontal: 16 * p,\n          },\n        ]}>\n        <View\n          style={{\n            width: width * 0.4,\n            height: width * 0.23,\n          }}>\n          <Image\n            source={{\n              uri: item.cover_url.length !== 0 ? item.cover_url : undefined,\n            }}\n            style={{\n              width: '100%',\n              height: '100%',\n              backgroundColor: '#000',\n            }}\n            resizeMode=\"contain\"\n          />\n          <View\n            style={{\n              position: 'absolute',\n              right: 0,\n              bottom: 0,\n              padding: 4 * p,\n              backgroundColor: '#000',\n            }}>\n            <Text s={10 * p} w=\"m\" c={colors.gray100}>\n              {lengthString}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            marginLeft: 16 * p,\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n          }}>\n          <View>\n            <Text\n              w=\"m\"\n              s={12 * p}\n              c={dark ? colors.gray100 : colors.gray800}\n              numberOfLines={2}>\n              {item.title}\n            </Text>\n            <Text\n              w=\"r\"\n              s={10 * p}\n              c={dark ? colors.gray200 : colors.gray700}\n              numberOfLines={1}\n              style={{marginVertical: 8 * p}}>\n              {moment(item.date).format('ll')}\n            </Text>\n          </View>\n          {/* TODO video downloader */}\n          {/* <View style={{flexDirection: 'row', alignItems: 'center'}}>\n                <TablerIcon\n                  name=\"download\"\n                  size={16 * p}\n                  color={colors.accent300}\n                  style={{marginRight: 4 * p}}\n                />\n                <Text\n                  w=\"r\"\n                  s={10 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  numberOfLines={1}>\n                  {item.url}\n                </Text>\n              </View> */}\n        </View>\n      </PressableBase>\n    </Animated.View>\n  );\n};\n\nexport default VideoCard;\n","import {useNavigation} from '@react-navigation/core';\nimport React, {ReactElement, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {p} from '../scaling';\nimport {CourseState} from '../store/coursesSlice';\nimport {RootState} from '../store/store';\nimport Filters from './Filters';\nimport NoContent from './NoContent';\nimport VideoCard from './VideoCard';\n\nconst CourseVideos = ({\n  courseId,\n  dark,\n  refreshControl,\n}: {\n  courseId: string;\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const {t} = useTranslation();\n  const navigation = useNavigation();\n\n  const [selectedYear, setSelectedYear] = useState('current');\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == courseId,\n    ),\n  );\n\n  const videos = useMemo(() => {\n    if (selectedYear === 'current') {\n      return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n        (a, b) => b.date - a.date,\n      );\n    }\n    return [\n      ...(courseData?.extendedInfo?.vc_recordings[parseInt(selectedYear, 10)] ||\n        []),\n    ].sort((a, b) => b.date - a.date);\n  }, [courseData, selectedYear]);\n\n  return (\n    <View style={{flex: 1}}>\n      <FlatList\n        data={videos}\n        ListEmptyComponent={<NoContent />}\n        refreshControl={refreshControl}\n        ListHeaderComponent={\n          <CourseVideosHeader\n            courseData={courseData}\n            onYearChange={y => setSelectedYear(y)}\n          />\n        }\n        renderItem={({item}) => (\n          <VideoCard\n            item={item}\n            dark={dark}\n            onPress={() => {\n              navigation.navigate('Video', {\n                video: item,\n                courseId: courseId,\n              });\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nconst CourseVideosHeader = ({\n  courseData,\n  onYearChange,\n}: {\n  courseData: CourseState | undefined;\n  onYearChange: (arg0: string) => any;\n}) => {\n  return (\n    <View style={{marginLeft: 16 * p}}>\n      <View style={{height: 16 * p}} />\n      <Filters\n        items={Object.keys(courseData?.extendedInfo?.vc_recordings || {})\n          .sort((a, b) => (a < b ? 1 : -1))\n          .map(key => ({label: key, value: key}))}\n        onChange={y => onYearChange(y)}\n      />\n      <View style={{height: 8 * p}} />\n    </View>\n  );\n};\n\nexport default CourseVideos;\n","import {StyleSheet} from 'react-native';\nimport colors from './colors';\n\nconst styles = StyleSheet.create({\n  // Text color varieties\n  blackText: {\n    color: colors.black,\n  },\n  whiteText: {\n    color: colors.white,\n  },\n  grayText: {\n    color: colors.gray,\n  },\n  // Text font weights\n  textRegular: {\n    fontFamily: 'Inter-Regular',\n  },\n  textMedium: {\n    fontFamily: 'Inter-Medium',\n  },\n  textBold: {\n    fontFamily: 'Inter-Bold',\n  },\n  // Text sizes\n  textExtraSmall: {\n    fontSize: 10,\n  },\n  textSmall: {\n    fontSize: 12,\n  },\n  textNormal: {\n    fontSize: 16,\n  },\n  textMediumSize: {\n    fontSize: 20,\n  },\n  textLarge: {\n    fontSize: 24,\n  },\n  textExtraLarge: {\n    fontSize: 32,\n  },\n  textTitleLarge: {\n    fontSize: 42,\n  },\n\n  // General styles\n  withHorizontalPadding: {\n    paddingHorizontal: 24,\n  },\n  withRoundedBorder: {\n    borderRadius: 4,\n  },\n  safePaddingTop: {\n    paddingTop: 40,\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignContent: 'space-between',\n  },\n  paddingFromHeader: {\n    paddingTop: 32,\n  },\n  titleBar: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  tabNavigator: {\n    backgroundColor: colors.white,\n    height: 60,\n    tabBarActiveTintColor: colors.white,\n    paddingBottom: 8,\n  },\n  elevated: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n\n    elevation: 4,\n  },\n  elevatedSmooth: {\n    shadowColor: '#bbb',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.0,\n\n    elevation: 24,\n  },\n  border: {\n    borderRadius: 8,\n    borderColor: colors.lightGray,\n    borderWidth: 0.5,\n  },\n});\n\nexport default styles;\n","import React, {useEffect, useRef} from 'react';\nimport {Animated, View} from 'react-native';\nimport colors from '../colors';\n\nexport default function AnimatedLiveCircle({width}: {width: number}) {\n  const coeff = useRef(new Animated.Value(0)).current;\n\n  const animate = () => {\n    Animated.loop(\n      Animated.timing(coeff, {\n        toValue: 1.5,\n        duration: 2000,\n        useNativeDriver: true,\n      }),\n    ).start();\n  };\n\n  useEffect(animate, []);\n\n  return (\n    <View\n      style={{\n        width: width,\n        height: width,\n        borderRadius: width / 2,\n      }}>\n      <Animated.View\n        style={[\n          {\n            backgroundColor: colors.white,\n            width: width,\n            height: width,\n            borderRadius: width / 2,\n            opacity: Animated.subtract(1.5, coeff),\n          },\n          {transform: [{scale: coeff}]},\n        ]}></Animated.View>\n      <View\n        style={{\n          position: 'absolute',\n          left: width / 4,\n          top: width / 4,\n          width: width / 2,\n          height: width / 2,\n          borderRadius: width / 4,\n          backgroundColor: colors.white,\n        }}></View>\n    </View>\n  );\n}\n","import React, {FC, ReactNode} from 'react';\nimport {Pressable, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport styles from '../../styles';\nimport {useTranslation} from 'react-i18next';\nimport Text from '../../ui/core/Text';\nimport {p} from '../../scaling';\n\nexport type WidgetBaseProps = {\n  name?: string;\n  action?: Function;\n  compact?: boolean;\n  withButton?: boolean;\n  withPadding?: boolean;\n  fullHeight?: boolean;\n  style?: ViewStyle;\n  dark?: boolean;\n  children: ReactNode;\n};\n\nconst WidgetBase: FC<WidgetBaseProps> = ({\n  name = '',\n  action = () => {},\n  compact = false,\n  withButton = true,\n  withPadding = true,\n  fullHeight = false,\n  children,\n  dark,\n  style,\n}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        ...styles.elevatedSmooth,\n        ...styles.border,\n        backgroundColor: colors.white,\n        width: compact ? '48%' : '100%',\n        flex: 0,\n        ...style,\n      }}>\n      <Pressable\n        style={{\n          paddingHorizontal: withPadding ? 12 : 0,\n          paddingVertical: withPadding ? 8 : 0,\n          flex: fullHeight ? 1 : 0,\n        }}\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          action();\n        }}>\n        <View\n          style={{\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n            flex: 1,\n          }}>\n          {name ? (\n            <Text w=\"m\" s={12 * p} c={dark ? colors.gray100 : colors.gray800}>\n              {name}\n            </Text>\n          ) : null}\n          {children}\n\n          {withButton && (\n            <View\n              style={{\n                backgroundColor: colors.lightGray,\n                padding: 8,\n                borderRadius: 8,\n                marginVertical: 4,\n                width: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n              }}>\n              <Text w=\"m\" s={10 * p} c={dark ? colors.gray100 : colors.gray800}>\n                {t('open')}\n              </Text>\n            </View>\n          )}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nexport default WidgetBase;\n","import moment from 'moment';\nimport {getLessonURL, LiveLesson} from 'open-polito-api/lib/course';\nimport {Device} from 'open-polito-api/lib/device';\nimport React, {FC, useEffect, useRef, useState} from 'react';\nimport {View} from 'react-native';\nimport {LinearGradient} from 'expo-linear-gradient';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport styles from '../../styles';\nimport Text from '../../ui/core/Text';\nimport AnimatedLiveCircle from '../AnimatedLiveCircle';\nimport WidgetBase from './WidgetBase';\nimport openURL from '../../utils/openUrl';\n\nexport type LiveWidgetProps = {\n  liveClass: LiveLesson;\n  courseName: string;\n  device: Device;\n};\n\nconst LiveWidget: FC<LiveWidgetProps> = ({liveClass, courseName, device}) => {\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [time, setTime] = useState<number | string>(0);\n  let intervalID = useRef<any>();\n\n  const calculateTime = () => {\n    return moment\n      .utc(moment(Date.now()).diff(moment(liveClass.date)))\n      .format('HH:mm:ss');\n  };\n\n  const gotoLiveClass = () => {\n    (async () => {\n      await openURL((await getLessonURL(device, liveClass)).url || '');\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      intervalID.current = setInterval(() => {\n        mounted && setTime(calculateTime());\n      }, 1000);\n    })();\n    return () => {\n      clearInterval(intervalID.current);\n      setMounted(false);\n    };\n  }, []);\n\n  return (\n    <WidgetBase withButton={false} withPadding={false} action={gotoLiveClass}>\n      <LinearGradient\n        start={{x: 0.2, y: 0.1}}\n        end={{x: 0.7, y: 0.9}}\n        colors={['#EA0000', '#C30000']}\n        style={{\n          paddingVertical: 16,\n          paddingHorizontal: 24,\n          ...styles.elevatedSmooth,\n          ...styles.border,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginLeft: -styles.withHorizontalPadding.paddingHorizontal / 2,\n          }}>\n          <View style={{marginRight: 8}}>\n            <AnimatedLiveCircle width={40}></AnimatedLiveCircle>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n            }}>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              LIVE\n            </Text>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              {calculateTime()}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n          }}>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {liveClass.title}\n          </Text>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {courseName}\n          </Text>\n        </View>\n      </LinearGradient>\n    </WidgetBase>\n  );\n};\n\nexport default LiveWidget;\n","import React, {FC, ReactNode} from 'react';\nimport {View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nexport type SectionParams = {\n  title: string;\n  dark: boolean;\n  style?: ViewStyle;\n  children: ReactNode;\n};\n\nconst Section = ({title, dark, style = {}, children}: SectionParams) => {\n  return (\n    <View style={{...style}}>\n      <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n        {title}\n      </Text>\n      <View style={{marginTop: 16 * p}}>{children}</View>\n    </View>\n  );\n};\n\nexport default Section;\n","import React from 'react';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\n\nconst FILE_TYPES = [\n  {\n    icon: 'file-text',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['csv', 'log', 'md', 'txt'],\n  },\n  {\n    icon: 'archive',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['7z', 'bz', 'gz', 'rar', 'tar', 'zip', 'xz'],\n  },\n  {\n    icon: 'file-code',\n    color: colors.black,\n    extensions: [\n      'asm',\n      'c',\n      'cpp',\n      'cs',\n      'css',\n      'go',\n      'h',\n      'hpp',\n      'htm',\n      'html',\n      'java',\n      'js',\n      'json',\n      'jsx',\n      'ts',\n      'tsx',\n      'php',\n      'py',\n      'rs',\n      'xml',\n    ],\n  },\n  {\n    icon: 'photo',\n    color: colors.gradient1,\n    extensions: ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'svg', 'tiff'],\n  },\n  {\n    icon: 'movie',\n    color: colors.gradient1,\n    extensions: ['flv', 'mkv', 'mp4', 'mov', 'wmv', 'avi', 'webm'],\n  },\n  {\n    icon: 'headphones',\n    color: colors.red,\n    extensions: ['aac', 'alac', 'flac', 'm4a', 'mp3', 'ogg', 'wav', 'wma'],\n  },\n  {\n    icon: 'file-text',\n    color: colors.gradient1,\n    extensions: ['doc', 'docm', 'docx', 'odt'],\n  },\n  {\n    icon: 'file-text',\n    color: '#ff3848',\n    extensions: ['pdf'],\n  },\n  {\n    icon: 'presentation',\n    color: colors.orange,\n    extensions: ['odp', 'ppt', 'pptm', 'pptx'],\n  },\n  {\n    icon: 'table',\n    color: colors.green,\n    extensions: ['ods', 'xls', 'xlsm', 'xlsx'],\n  },\n];\n\nexport default function getFileIcon(filename: string, dark: boolean) {\n  const ext = filename.split('.').pop()!.toLowerCase();\n  for (let i = 0; i < FILE_TYPES.length; i++) {\n    const {icon, extensions} = FILE_TYPES[i];\n    if (extensions.includes(ext)) {\n      const color = !dark\n        ? FILE_TYPES[i].colorLight || FILE_TYPES[i].color\n        : FILE_TYPES[i].color;\n      return <TablerIcon name={icon} color={color} size={24 * p} />;\n    }\n  }\n  return (\n    <TablerIcon name=\"file-unknown\" color={colors.gray500} size={24 * p} />\n  );\n}\n","import moment from 'moment';\nimport {File, getDownloadURL, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport getFileIcon from '../utils/getFileIcon';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport Text from './core/Text';\nimport PressableBase from './core/PressableBase';\nimport {Device} from 'open-polito-api/lib/device';\nimport openURL from '../utils/openUrl';\nimport {genericPlatform} from '../utils/platform';\n\nexport type DirectoryItemProps = {\n  item: MaterialItem;\n  relativeDate?: boolean;\n  dark: boolean;\n  course?: string;\n  onPress?: Function;\n  children?: ReactNode;\n};\n\nconst sizes = ['B', 'kB', 'MB', 'GB', 'TB'];\n\nexport const computeSizeLabel = (size: number) => {\n  const _size = Math.floor(size);\n  const index = Math.min(\n    _size > 0 ? Math.floor(Math.floor(Math.log10(_size)) / 3) : 0,\n    sizes.length - 1,\n  );\n  return `${(_size / 10 ** (index === 0 ? 1 : 3 * index)).toFixed(2)} ${\n    sizes[index]\n  }`;\n};\n\nconst downloadFile = (device: Device, item: File) => {\n  getDownloadURL(device, item).then(url => openURL(url));\n};\n\nconst DirectoryItem: FC<DirectoryItemProps> = ({\n  item,\n  relativeDate = false, // show as \"X days/hours ago instead of plain date\"\n  dark,\n  course = '',\n  onPress = () => {},\n  children,\n}) => {\n  const sizeLabel = useMemo(() => {\n    return item.type === 'file' ? computeSizeLabel(item.size * 1000) : '';\n  }, [item]);\n\n  const {device} = useContext(DeviceContext);\n\n  const iconComponent = useMemo(() => {\n    return item.type === 'file' ? (\n      getFileIcon(item.filename, dark)\n    ) : (\n      <TablerIcon\n        name=\"folder\"\n        color={dark ? colors.gray200 : colors.gray700}\n        size={24 * p}\n      />\n    );\n  }, [item, dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n      }}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 8,\n          flex: 1,\n        }}>\n        <PressableBase\n          parentStyle={[\n            {\n              flexDirection: 'row',\n              marginRight: 0 * p,\n            },\n            genericPlatform === 'mobile' && {flex: 1},\n          ]}\n          onPress={() => {\n            item.type === 'file' ? downloadFile(device, item) : onPress();\n          }} // download file if file, otherwise use onPress prop\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}>\n          {iconComponent}\n          <View\n            style={{\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginLeft: 10 * p,\n              flex: 1,\n            }}>\n            <View style={{marginRight: 10 * p, overflow: 'hidden'}}>\n              <Text\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"m\"\n                s={12 * p}\n                numberOfLines={1}>\n                {item.name}\n              </Text>\n            </View>\n            {item.type === 'file' && (\n              <View style={{flexDirection: 'column', flex: 1}}>\n                <Text numberOfLines={1} w=\"r\" s={10 * p} c={colors.gray300}>\n                  {sizeLabel + ' · '}\n                  {relativeDate\n                    ? moment(item.creation_date).fromNow()\n                    : moment(item.creation_date).format('ll')}\n                  {course ? ` · ${course}` : ''}\n                </Text>\n              </View>\n            )}\n          </View>\n        </PressableBase>\n\n        {item.type === 'file' ? (\n          <PressableBase\n            android_ripple={{color: colors.lightGray}}\n            onPress={() => downloadFile(device, item)}>\n            <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={colors.accent300}\n            />\n          </PressableBase>\n        ) : null}\n      </View>\n      {item.type === 'dir' ? (\n        <View style={{flexDirection: 'row'}}>\n          <View\n            style={{\n              width: 16 * p,\n              alignItems: 'flex-start',\n            }}>\n            <View\n              style={{\n                flex: 1,\n                marginLeft: 4 * p,\n                width: 2 * p,\n                backgroundColor: dark ? colors.gray600 : colors.gray300,\n              }}\n            />\n          </View>\n          <View style={{flex: 1}}>{children}</View>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default DirectoryItem;\n","import {decode} from 'html-entities';\n\nexport const htmlTags = /<\\/?\\w+[^>]*>/g;\n\nexport const stripHTML = (input: string): string => {\n  return decode(input).replace(htmlTags, '');\n};\n","import moment from 'moment';\nimport {Notification} from 'open-polito-api/lib/notifications';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport React, {FC, useEffect, useMemo} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\nimport {stripHTML} from '../utils/html';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type NotificationParams = {\n  type: NotificationType | string;\n  notification: ExtendedAlert | Notification; // TODO add support for generic notifications (Notification type in API code)\n  dark: boolean;\n  read?: boolean;\n  courseName?: string;\n};\n\nconst isCourseAlert = (n: ExtendedAlert | Notification): n is ExtendedAlert => {\n  return (n as Notification).topic === undefined;\n};\n\nconst NotificationComponent: FC<NotificationParams> = ({\n  type,\n  notification,\n  dark,\n  read = true,\n  courseName = '',\n}) => {\n  const icon = useMemo(() => {\n    switch (type) {\n      case NotificationType.TEST:\n        return 'test-pipe';\n      case NotificationType.DIRECT:\n        return 'message-dots';\n      case NotificationType.NOTICE:\n        return 'bell';\n      case NotificationType.MATERIAL:\n        return 'files';\n      default:\n        return 'bell';\n    }\n  }, [type]);\n\n  const title = useMemo<string>(\n    () =>\n      isCourseAlert(notification)\n        ? stripHTML(notification.text)\n        : notification.title,\n    [notification],\n  );\n\n  const body = useMemo<string | null>(\n    () => (isCourseAlert(notification) ? notification.text : notification.body),\n    [notification],\n  );\n\n  const dateString = useMemo(() => {\n    return moment(\n      isCourseAlert(notification) ? notification.date : notification.time,\n    ).format('ll');\n  }, [notification]);\n\n  const offset = useSharedValue(read ? 0 : 1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 8 * p * offset.value,\n    height: 8 * p * offset.value,\n    backgroundColor: colors.red,\n    borderRadius: 8 * p,\n  }));\n\n  /**\n   * If read, hide red badge\n   */\n  useEffect(() => {\n    if (!read) return;\n    offset.value = withTiming(0, {duration: 200});\n  }, [read]);\n\n  return (\n    <View style={{flexDirection: 'column'}}>\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        <View\n          style={{\n            width: 32 * p,\n            height: 32 * p,\n            borderRadius: 4 * p,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginRight: 16 * p,\n          }}>\n          <View\n            style={{\n              position: 'absolute',\n              justifyContent: 'center',\n              alignItems: 'center',\n              top: -4 * p,\n              right: -4 * p,\n              width: 8 * p,\n              height: 8 * p,\n            }}>\n            <Animated.View style={[animStyle]} />\n          </View>\n          <TablerIcon name={icon} color={colors.accent300} size={16 * p} />\n        </View>\n        <View style={{flexDirection: 'column', flex: 1}}>\n          <Text\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            w=\"r\"\n            numberOfLines={isCourseAlert(notification) ? 1 : 2}>\n            {title}\n          </Text>\n          <Text\n            s={10 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            w=\"r\"\n            numberOfLines={2}>\n            {dateString}\n            {isCourseAlert(notification)\n              ? notification.course_name && ' · ' + notification.course_name\n              : courseName && ' · ' + courseName}\n          </Text>\n        </View>\n      </View>\n      {!!body && (\n        <View\n          style={{\n            marginTop: 12 * p,\n            padding: 16 * p,\n            borderRadius: 4 * p,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n          }}>\n          <RenderHTMLSource\n            source={{\n              html: body,\n            }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default NotificationComponent;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {getRecentCourseMaterial} from '../utils/material';\nimport LiveWidget from '../components/widgets/LiveWidget';\nimport {CourseState} from '../store/coursesSlice';\nimport Section from './Section';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {STATUS} from '../store/status';\nimport DirectoryItem from './DirectoryItem';\nimport Notification from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\n\n// TODO \"Exam is taken?\" feature\n\nconst CourseOverview: FC<{\n  code: string;\n  changeTab: Function;\n}> = ({code, changeTab}) => {\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const materialTree = courseData?.extendedInfo?.material || [];\n\n  const buildField = (name: string, icon: string, index: number) => {\n    return (\n      <View\n        key={icon}\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: (index + 1) % 3 == 0 ? 0 : 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n        />\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}\n          style={{marginLeft: 8 * p}}>\n          {name}\n        </Text>\n      </View>\n    );\n  };\n\n  const fields = useMemo(() => {\n    return [\n      {\n        name:\n          courseData?.extendedInfo?.professor.surname +\n          ' ' +\n          courseData?.extendedInfo?.professor.name,\n        icon: 'user-circle',\n      },\n      {\n        name: courseData?.basicInfo.num_credits + ' ' + t('credits'),\n        icon: 'north-star',\n      },\n      {\n        name: courseData?.basicInfo.code,\n        icon: 'grid-pattern',\n      },\n      {\n        name:\n          t('year') +\n            ' ' +\n            (courseData?.extendedInfo?.degree_year || '') +\n            ', ' +\n            t('period') +\n            ' ' +\n            courseData?.extendedInfo?.year_period || '',\n        icon: 'calendar-time',\n      },\n      // {\n      //   name: '(feature coming soon)',\n      //   icon: 'writing',\n      // },\n    ];\n  }, [courseData]);\n\n  return (\n    <View>\n      {/* Summary */}\n      <Section dark={dark} title={t('summary')}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (\n          <View style={{flexDirection: 'row'}}>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(0, 2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n          </View>\n        )}\n      </Section>\n      {courseData?.extendedInfo?.live_lessons.map(liveClass => (\n        <LiveWidget\n          key={liveClass.meeting_id}\n          liveClass={liveClass}\n          courseName={courseData.basicInfo.name}\n          device={device}\n        />\n      )) || null}\n      {/* Latest files */}\n      <Section dark={dark} title={t('latestFiles')} style={{marginTop: 24}}>\n        <View style={{marginTop: -8}}>\n          {courseData?.status.code == STATUS.PENDING ? (\n            <ActivityIndicator />\n          ) : (\n            getRecentCourseMaterial(materialTree || []).map(file => (\n              <DirectoryItem item={file} dark={dark} />\n            ))\n          )}\n        </View>\n      </Section>\n      {/* Latest alert */}\n      <Section dark={dark} title={t('latestAlert')} style={{marginTop: 16}}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (courseData?.extendedInfo?.notices || []).length > 0 ? (\n          <Notification\n            notification={{\n              ...courseData?.extendedInfo?.notices[0]!,\n              course_code: courseData?.basicInfo.code || '',\n              course_name: courseData?.basicInfo.name || '',\n            }}\n            type={NotificationType.NOTICE}\n            dark={dark}\n          />\n        ) : null}\n      </Section>\n    </View>\n  );\n};\n\nexport default CourseOverview;\n","import {File, MaterialItem} from 'open-polito-api/lib/material';\n\n/**\n * Returns all files from the current directory level only\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getLevelMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree.filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns all files from the whole material tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree\n    .flatMap(item =>\n      item.type == 'file'\n        ? [item]\n        : [item as MaterialItem].concat(getMaterialList(item.children)),\n    )\n    .filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns 3 most recent files from tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getRecentCourseMaterial = (\n  tree: MaterialItem[] | undefined,\n): File[] => {\n  return getMaterialList(tree || [])\n    .sort((a, b) => b.creation_date - a.creation_date)\n    .slice(0, 3);\n};\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport DirectoryItem from './DirectoryItem';\nimport {MaterialItem} from 'open-polito-api/lib/material';\n\nexport default function DirectoryItemRecursive({\n  dark,\n  item,\n}: {\n  dark: boolean;\n  item: MaterialItem;\n}) {\n  const [opened, setOpened] = useState(false);\n\n  return (\n    <View>\n      {item.type == 'file' ? (\n        <DirectoryItem dark={dark} item={item} />\n      ) : (\n        <View>\n          <DirectoryItem\n            dark={dark}\n            item={item}\n            onPress={() => {\n              setOpened(!opened);\n            }}>\n            {opened\n              ? item.children.map(item => (\n                  <DirectoryItemRecursive\n                    dark={dark}\n                    key={item.code}\n                    item={item}\n                  />\n                ))\n              : []}\n          </DirectoryItem>\n        </View>\n      )}\n    </View>\n  );\n}\n","import {Directory, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport DirectoryItemRecursive from './DirectoryItemRecursive';\nimport NoContent from './NoContent';\nimport {CoursesState, CourseState} from '../store/coursesSlice';\nimport DirectoryItem from './DirectoryItem';\n\ntype MaterialDict = {[code: string]: MaterialItem};\n\nexport default function MaterialExplorer({\n  courseId,\n  dark,\n}: {\n  courseId: string; // Set to \"all\" to show all courses\n  dark: boolean;\n}) {\n  const {courses} = useSelector<RootState, CoursesState>(\n    state => state.courses,\n  );\n\n  return (\n    <View>\n      {courseId == 'all'\n        ? courses.map(course => (\n            <DirectoryItemRecursive\n              item={{\n                type: 'dir',\n                code: course.basicInfo.code + course.basicInfo.name,\n                name: course.basicInfo.name,\n                children: course.extendedInfo?.material || [],\n              }}\n              key={course.basicInfo.code + course.basicInfo.name}\n              dark={dark}\n            />\n          ))\n        : (\n            courses.find(\n              course =>\n                course.basicInfo.code + course.basicInfo.name == courseId,\n            )?.extendedInfo?.material || []\n          ).map(item => (\n            <DirectoryItemRecursive item={item} key={item.code} dark={dark} />\n          ))}\n    </View>\n  );\n}\n","import React, {ReactElement, useEffect, useMemo} from 'react';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport NoContent from './NoContent';\nimport NotificationComponent from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\n\nconst CourseAlerts = ({\n  alerts,\n  dark,\n  refreshControl,\n}: {\n  alerts: ExtendedAlert[];\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n        flex: 1,\n      }}>\n      <FlatList\n        style={_styles.container}\n        ListEmptyComponent={<NoContent />}\n        ListHeaderComponent={() => <View style={{height: 24 * p}} />}\n        refreshControl={refreshControl}\n        data={alerts}\n        initialNumToRender={1}\n        keyExtractor={alert => alert.id + alert.date + alert.text.slice(0, 10)}\n        renderItem={a => (\n          <View style={{marginBottom: 24 * p}}>\n            <NotificationComponent\n              type={NotificationType.NOTICE}\n              notification={a.item}\n              dark={dark}\n            />\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default CourseAlerts;\n","import React, {FC, ReactNode, useMemo} from 'react';\nimport {StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from './Text';\n\n/**\n * Wraps a component inside a view showing a badge.\n *\n * The badge is hidden if the number is 0.\n *\n * @param param0\n * @returns\n */\nconst BadgeContainer: FC<{\n  children: ReactNode;\n  style?: ViewStyle;\n  number: number | string;\n}> = ({children, style = {}, number}) => {\n  const badgeText = useMemo(() => {\n    return typeof number === 'string' ? number : number > 99 ? '99+' : number;\n  }, [number]);\n\n  return (\n    <View style={{...style}}>\n      {children}\n      {badgeText !== 0 ? (\n        <View style={_styles.badge}>\n          <Text w=\"r\" s={10 * p} c={colors.gray100}>\n            {badgeText}\n          </Text>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst _styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    width: 20 * p,\n    height: 20 * p,\n    borderRadius: 20 * p,\n    backgroundColor: colors.red,\n    right: -10 * p,\n    top: -10 * p,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default BadgeContainer;\n","import {useNavigation} from '@react-navigation/native';\nimport {Notification} from 'open-polito-api/lib/notifications';\nimport React, {FC, useCallback, useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {AppDispatch, RootState} from '../store/store';\nimport BadgeContainer from './core/BadgeContainer';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\nimport {DrawerActions} from '@react-navigation/native';\nimport {genericPlatform} from '../utils/platform';\nimport {setConfig} from '../store/sessionSlice';\nimport {Configuration} from '../defaultConfig';\n\n// TODO navigation to downloads\n\nexport enum HEADER_TYPE {\n  MAIN = 0,\n  SECONDARY = 1,\n}\n\nexport type HeaderParams = {\n  title: string;\n  headerType: HEADER_TYPE;\n};\n\nconst Header: FC<HeaderParams> = ({title, headerType}) => {\n  const {dark} = useContext(DeviceContext);\n  const notifications = useSelector<RootState, Notification[]>(\n    state => state.user.notifications,\n  );\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationCount = useMemo<number>(() => {\n    return notifications.filter(n => !n.is_read).length;\n  }, [notifications]);\n\n  const navigation = useNavigation();\n\n  const themeToggleIconName = useMemo(\n    () => (dark ? 'moon-stars' : 'sun'),\n    [dark],\n  );\n\n  const toggleTheme = useCallback(() => {\n    dispatch(setConfig({...config, theme: dark ? 'light' : 'dark'}));\n  }, [dark, config, dispatch]);\n\n  // TODO drawer notification count\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      header: {\n        flexDirection: 'row',\n        marginHorizontal: 12 * p,\n        marginVertical: 16 * p,\n        alignItems: 'center',\n      },\n      headerSection: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      headerMiddle: {\n        flex: 2,\n        flexDirection: 'row',\n        justifyContent: 'center',\n      },\n      headerEnd: {\n        justifyContent: 'flex-end',\n      },\n    });\n  }, []);\n\n  return (\n    <View style={_styles.header}>\n      {headerType === HEADER_TYPE.MAIN ? (\n        <>\n          <View style={_styles.headerSection}>\n            {/* TODO add logic for badge number*/}\n            <PressableBase\n              onPress={() => {\n                navigation.dispatch(DrawerActions.toggleDrawer());\n              }}>\n              <BadgeContainer number={0} style={{marginRight: 16 * p}}>\n                <TablerIcon\n                  name=\"menu-2\"\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                />\n              </BadgeContainer>\n            </PressableBase>\n            {/* TODO download manager */}\n            {/* <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            /> */}\n          </View>\n          <View\n            style={{\n              ..._styles.headerSection,\n              ..._styles.headerMiddle,\n            }}>\n            <Text\n              c={dark ? colors.gray100 : colors.gray800}\n              w=\"m\"\n              s={16 * p}\n              numberOfLines={1}>\n              {title}\n            </Text>\n          </View>\n          <View style={{..._styles.headerSection, ..._styles.headerEnd}}>\n            {genericPlatform !== 'mobile' && (\n              <PressableBase onPress={toggleTheme}>\n                <TablerIcon\n                  name={themeToggleIconName}\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                  style={{marginRight: 16 * p}}\n                />\n              </PressableBase>\n            )}\n            <PressableBase onPress={() => navigation.navigate('Search')}>\n              <TablerIcon\n                name=\"search\"\n                size={24 * p}\n                color={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}\n              />\n            </PressableBase>\n            <PressableBase onPress={() => navigation.navigate('Notifications')}>\n              <BadgeContainer number={notificationCount}>\n                <TablerIcon\n                  name=\"bell\"\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                />\n              </BadgeContainer>\n            </PressableBase>\n          </View>\n        </>\n      ) : headerType === HEADER_TYPE.SECONDARY ? (\n        <>\n          <PressableBase onPress={navigation.goBack}>\n            <TablerIcon\n              name=\"arrow-left\"\n              size={24 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n            />\n          </PressableBase>\n          <Text\n            s={16 * p}\n            w=\"m\"\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginLeft: 16 * p}}>\n            {title}\n          </Text>\n        </>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Header;\n","import React, {FC, useMemo, useState} from 'react';\nimport {ScrollView, StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\n// TODO animation\n\nexport type TabsParams = {\n  adjusted?: boolean; // Proper margins\n  items: {label: string; value: string}[];\n  onChange: (i: number) => any;\n  defaultIndex?: number;\n  dark: boolean;\n  style?: ViewStyle;\n};\n\nconst Tabs: FC<TabsParams> = ({\n  adjusted = false,\n  items,\n  onChange,\n  defaultIndex = 0,\n  dark,\n  style = {},\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n  const select = (index: number) => {\n    setSelectedIndex(index);\n    onChange(index);\n  };\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {},\n      adjusted: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n      },\n      tab: {},\n      selectedIndicator: {\n        marginTop: 4 * p,\n        height: 2 * p,\n        backgroundColor: colors.accent300,\n      },\n    });\n  }, [dark, adjusted]);\n\n  return (\n    <View>\n      <ScrollView\n        contentContainerStyle={{\n          ..._styles.container,\n          ...style,\n          ...(adjusted ? _styles.adjusted : {}),\n        }}\n        horizontal\n        showsHorizontalScrollIndicator={false}>\n        {items.map((tab, i) => (\n          <View style={_styles.tab} key={tab.value}>\n            <PressableBase\n              style={{marginRight: 24 * p}}\n              onPress={() => select(i)}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={\n                  i == selectedIndex\n                    ? colors.accent300\n                    : dark\n                    ? colors.gray100\n                    : colors.gray800\n                }>\n                {tab.label}\n              </Text>\n              {i == selectedIndex ? (\n                <View style={_styles.selectedIndicator} />\n              ) : null}\n            </PressableBase>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {RefreshControl, ScrollView, StyleSheet, View} from 'react-native';\nimport CourseVideos from '../ui/CourseVideos';\nimport {useTranslation} from 'react-i18next';\nimport CourseOverview from '../ui/CourseOverview';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport CourseAlerts from '../ui/CourseAlerts';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState, loadCourse} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\n\nexport default function Course({navigation, route}) {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const code = route.params.courseCode;\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const tabs = useMemo(() => {\n    return ['overview', 'material', 'alerts', 'videos'];\n  }, []);\n\n  // Populate course data if empty\n  useEffect(() => {\n    if (\n      courseData &&\n      courseData?.status.code !== STATUS.PENDING &&\n      courseData?.status.code !== STATUS.SUCCESS\n    ) {\n      dispatch(\n        loadCourse({\n          basicCourseInfo: courseData.basicInfo,\n          device: device,\n        }),\n      );\n    }\n  }, [courseData, device, dispatch]);\n\n  const refresh = useCallback(() => {\n    dispatch(\n      loadCourse({\n        basicCourseInfo: courseData!.basicInfo,\n        device: device,\n      }),\n    );\n  }, [courseData, device, dispatch]);\n\n  const refreshing = useMemo(() => {\n    return courseData?.status.code === STATUS.PENDING;\n  }, [courseData]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  const section = useMemo(() => {\n    switch (tabs[currentTab]) {\n      case 'overview':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <CourseOverview code={code} changeTab={setCurrentTab} />\n            <View style={{height: 16 * p}} />\n          </ScrollView>\n        );\n      case 'material':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <MaterialExplorer dark={dark} courseId={code} />\n            <View style={{marginBottom: 16 * p}} />\n          </ScrollView>\n        );\n      case 'alerts':\n        return (\n          <CourseAlerts\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            alerts={\n              courseData?.extendedInfo?.notices.map(alert => {\n                return {\n                  ...alert,\n                  course_code: courseData.basicInfo.code,\n                  course_name: courseData.basicInfo.name,\n                };\n              }) || []\n            }\n          />\n        );\n      case 'videos':\n        return (\n          <CourseVideos\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            courseId={code}\n          />\n        );\n    }\n  }, [\n    _styles.container,\n    code,\n    courseData?.basicInfo.code,\n    courseData?.basicInfo.name,\n    courseData?.extendedInfo?.notices,\n    currentTab,\n    dark,\n    refresh,\n    refreshing,\n    tabs,\n  ]);\n\n  return (\n    <Screen>\n      <Header\n        title={courseData?.basicInfo.name || ''}\n        headerType={HEADER_TYPE.SECONDARY}\n      />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i => {\n          setCurrentTab(i);\n        }}\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n      />\n      <View style={{flex: 1}}>{section}</View>\n    </Screen>\n  );\n}\n","import React, {FC, useCallback, useContext} from 'react';\nimport {View} from 'react-native';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\n\nexport interface ListSelectorModalProps {\n  title: string;\n  items: {label: string; value: string}[];\n  onSelect: (value: string) => any;\n}\n\nconst ListSelectorModal: FC<ListSelectorModalProps> = ({\n  title,\n  items,\n  onSelect,\n}) => {\n  const {dark} = useContext(DeviceContext);\n  const {hideModal} = useContext(ModalContext);\n\n  const _onSelect = useCallback(\n    (value: string) => {\n      onSelect(value);\n      hideModal();\n    },\n    [onSelect, hideModal],\n  );\n\n  return (\n    <ModalBase title={title} dismissable>\n      {items.map(item => (\n        <TouchableOpacity\n          key={item.value}\n          onPress={() => _onSelect(item.value)}>\n          <View\n            style={{\n              paddingVertical: 8 * p,\n            }}>\n            <Text s={12 * p} w=\"r\" c={dark ? colors.gray100 : colors.gray800}>\n              {item.label}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default ListSelectorModal;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {FlatList, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch, useSelector} from 'react-redux';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport {DropdownItem, ExtendedFile} from '../types';\nimport {MaterialItem} from 'open-polito-api/lib/material';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport PressableBase from '../ui/core/PressableBase';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport {DeviceContext} from '../context/Device';\nimport Tabs from '../ui/Tabs';\nimport Text from '../ui/core/Text';\nimport BadgeContainer from '../ui/core/BadgeContainer';\nimport {ModalContext} from '../context/ModalProvider';\nimport ListSelectorModal from '../components/modals/ListSelectorModal';\n\n// TODO more searchable categories\nconst tabs = ['files'];\n\nexport default function Search({navigation}) {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<ExtendedFile[]>([]);\n\n  const [searchFilter, setSearchFilter] = useState('');\n\n  const [quickLoad, setQuickLoad] = useState(true);\n\n  // Timer controlling when to search again\n  const [searchTimer, setSearchTimer] = useState<any>(null);\n\n  // Timer controlling when to show full list\n  const [loadTimer, setLoadTimer] = useState<any>(null);\n\n  const items = useMemo<DropdownItem[]>(() => {\n    return [\n      {\n        label: t('allCourses'),\n        value: '',\n      },\n      ...courses.map(c => ({\n        label: c.basicInfo.name,\n        value: c.basicInfo.code + c.basicInfo.name,\n      })),\n    ];\n  }, [courses]);\n\n  useEffect(() => {\n    handleNewSearch(query);\n  }, [searchFilter, query]);\n\n  /**\n   * Handles a new search\n   * @param txt The query\n   */\n  const handleNewSearch = (txt: string) => {\n    const _query = txt.toLowerCase().trim();\n    if (searchTimer) {\n      clearTimeout(searchTimer);\n    }\n    if (loadTimer) {\n      clearTimeout(loadTimer);\n    }\n    setQuickLoad(true);\n    setSearchTimer(\n      setTimeout(() => {\n        searchMaterial(_query);\n        setLoadTimer(\n          setTimeout(() => {\n            setQuickLoad(false);\n          }, 500),\n        );\n      }, 50),\n    );\n  };\n\n  /**\n   * Recursively finds files that match query\n   *\n   * @param _query Search string\n   * @param _items Array of files or dirs\n   * @param course_name\n   * @param course_code\n   * @returns files\n   */\n  const findFiles = (\n    _query: string,\n    _items: MaterialItem[],\n    course_name: string,\n    course_code: string,\n  ): ExtendedFile[] => {\n    let _results: ExtendedFile[] = [];\n    _items.forEach(item => {\n      if (item.type == 'file') {\n        if ((item.name + item.filename).toLowerCase().includes(_query)) {\n          _results.push({...item, course_code, course_name});\n        }\n      } else if (item.type == 'dir') {\n        _results.push(\n          ...findFiles(_query, item.children, course_name, course_code),\n        );\n      }\n    });\n    return _results;\n  };\n\n  /**\n   * Searches files matching specific query and course, and updates state.\n   */\n  const searchMaterial = (_query: string): void => {\n    // Using setTimeout is a bit hacky, but it works.\n    (async () => {\n      setTimeout(() => {\n        let res: ExtendedFile[] = [];\n        if (_query === '') {\n          setResults([]);\n          return;\n        }\n\n        if (searchFilter) {\n          const _course = courses.find(\n            course =>\n              searchFilter ===\n              `${course.basicInfo.code}${course.basicInfo.name}`,\n          );\n          if (!_course) {\n            res = [];\n            return;\n          }\n          res.push(\n            ...findFiles(\n              _query,\n              _course.extendedInfo?.material || [],\n              _course.basicInfo.name,\n              _course.basicInfo.code,\n            ),\n          );\n        } else {\n          courses.forEach(course => {\n            res.push(\n              ...findFiles(\n                _query,\n                course.extendedInfo?.material || [],\n                course.basicInfo.name,\n                course.basicInfo.code,\n              ),\n            );\n          });\n        }\n\n        setResults(res);\n      }, 0);\n    })();\n  };\n\n  return (\n    <Screen>\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: 12 * p,\n          paddingVertical: 16 * p,\n        }}>\n        <PressableBase\n          onPress={navigation.goBack}\n          style={{marginRight: 16 * p}}>\n          <TablerIcon\n            name=\"arrow-left\"\n            color={dark ? colors.gray200 : colors.gray700}\n            size={24 * p}\n          />\n        </PressableBase>\n        <TextInput\n          initiallyFocused\n          icon=\"search\"\n          dark={dark}\n          placeholder={t('searchForAnything')}\n          autoFocus={true}\n          onChangeText={txt => {\n            const _query = txt.toLowerCase().trim();\n            setQuery(_query);\n            handleNewSearch(_query);\n          }}\n          style={{flex: 1}}\n        />\n        <PressableBase\n          onPress={() => {\n            setModal(\n              <ListSelectorModal\n                items={items}\n                title={t('selectCourseDropdown')}\n                onSelect={value => setSearchFilter(value)}\n              />,\n            );\n          }}\n          style={{marginLeft: 16 * p}}>\n          <BadgeContainer number={searchFilter === '' ? 0 : ''}>\n            <TablerIcon\n              name=\"adjustments\"\n              color={dark ? colors.gray200 : colors.gray700}\n              size={24 * p}\n            />\n          </BadgeContainer>\n        </PressableBase>\n      </View>\n      <Tabs\n        dark={dark}\n        items={[{label: t('files'), value: 'files'}]}\n        onChange={() => {}}\n        adjusted\n      />\n      <FlatList\n        style={{paddingTop: 24 * p, paddingHorizontal: 16 * p}}\n        contentContainerStyle={{flexGrow: 1}}\n        data={quickLoad ? results.slice(0, 10) : results}\n        keyExtractor={item => item.code}\n        initialNumToRender={10}\n        maxToRenderPerBatch={10}\n        renderItem={({item}) => {\n          return (\n            <View key={item.code}>\n              <DirectoryItem\n                item={item}\n                key={item.code}\n                dark={dark}\n                course={item.course_name}\n              />\n            </View>\n          );\n        }}\n        ListEmptyComponent={\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <TablerIcon\n              name=\"search-off\"\n              size={64 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View\n              style={{\n                marginTop: 8 * p,\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray200 : colors.gray700}\n                style={{marginBottom: 8 * p}}>\n                {t('noResults')}\n              </Text>\n              <Text s={10 * p} w=\"m\" c={dark ? colors.gray300 : colors.gray600}>\n                {t('tryADifferentTerm')}\n              </Text>\n            </View>\n          </View>\n        }\n        ListFooterComponent={<View style={{marginBottom: 24 * p}}></View>}\n      />\n    </Screen>\n  );\n}\n","import {Recording} from 'open-polito-api/lib/course';\nimport React from 'react';\n\nconst VideoPlayer = ({video}: {video: Recording}) => {\n  return <video src={video.url} controls autoPlay />;\n};\n\nexport default VideoPlayer;\n","import React, {FC, useContext, useMemo, useState} from 'react';\nimport {FlatList, useWindowDimensions, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {Recording} from 'open-polito-api/lib/course';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport Screen from '../ui/Screen';\nimport Text from '../ui/core/Text';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport VideoCard from '../ui/VideoCard';\nimport moment from 'moment';\nimport VideoPlayer from '../ui/VideoPlayer';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {DeviceSize} from '../types';\nimport {genericPlatform} from '../utils/platform';\n\n// TODO custom video controls design\n// TODO \"cast to\" feature\n// TODO video download\n\ninterface VideoInfoProps {\n  courseData?: CourseState;\n  video: Recording;\n  dark: boolean;\n}\n\nconst VideoInfo: FC<VideoInfoProps> = ({courseData, video, dark}) => {\n  return (\n    <View>\n      <Text s={16 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n        {video.title}\n      </Text>\n      <Text\n        s={12 * p}\n        w=\"m\"\n        c={dark ? colors.gray200 : colors.gray500}\n        style={{marginTop: 8 * p}}>\n        {courseData?.basicInfo.name} · {moment(video.date).format('ll')}\n      </Text>\n\n      <View style={{marginVertical: 24 * p}}>\n        {/* <Button text={t('download (feature coming soon)')} secondary /> */}\n      </View>\n    </View>\n  );\n};\n\ninterface VideoPlayerWrapperProps {\n  currentVideo: Recording;\n  windowWidth?: number;\n  windowHeight?: number;\n}\n\nconst VideoPlayerWrapper: FC<VideoPlayerWrapperProps> = ({\n  currentVideo,\n  windowWidth,\n  windowHeight,\n}) => {\n  return (\n    <View\n      style={[\n        {width: '100%'},\n        genericPlatform !== 'mobile' && {\n          flex: 1,\n        },\n        !!windowWidth && {\n          height: windowWidth / 1.78,\n        },\n        !!windowHeight && {\n          maxHeight: windowHeight / 2,\n        },\n      ]}>\n      <VideoPlayer video={currentVideo} />\n    </View>\n  );\n};\n\ninterface RecommendedFlatListProps {\n  currentVideo: Recording;\n  relatedVideos: Recording[];\n  dark: boolean;\n  setCurrentVideo: (video: Recording) => any;\n  courseData?: CourseState;\n}\n\nconst RecommendedFlatList: FC<RecommendedFlatListProps> = ({\n  currentVideo,\n  relatedVideos,\n  dark,\n  setCurrentVideo,\n  courseData,\n}) => {\n  const {t} = useTranslation();\n  return (\n    <FlatList\n      data={relatedVideos}\n      renderItem={({item}) => (\n        <View\n          style={[\n            item.url === currentVideo.url\n              ? {backgroundColor: dark ? colors.gray600 : colors.gray300}\n              : {},\n          ]}>\n          <VideoCard\n            item={item}\n            dark={dark}\n            onPress={() => setCurrentVideo(item)}\n          />\n        </View>\n      )}\n      keyExtractor={item => item.url}\n      ListHeaderComponent={() => (\n        <View\n          style={{\n            paddingHorizontal: 16 * p,\n            paddingBottom: 16 * p,\n          }}>\n          {!!courseData && (\n            <View style={{marginTop: 16 * p}}>\n              <VideoInfo\n                video={currentVideo}\n                courseData={courseData}\n                dark={dark}\n              />\n            </View>\n          )}\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n            {t('relatedVideos')}\n          </Text>\n        </View>\n      )}\n    />\n  );\n};\n\nexport default function Video({route}) {\n  const {video, courseId} = route.params;\n\n  const [currentVideo, setCurrentVideo] = useState<Recording>(video);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name === courseId,\n    ),\n  );\n\n  const relatedVideos = useMemo<Recording[]>(() => {\n    return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n      (a, b) => b.date - a.date,\n    );\n  }, [courseData]);\n\n  const {dark, size} = useContext(DeviceContext);\n\n  const {width, height} = useWindowDimensions();\n\n  const memoizedVideoPlayer = useMemo(\n    () => (\n      <VideoPlayerWrapper\n        currentVideo={currentVideo}\n        windowWidth={genericPlatform === 'mobile' ? width : undefined}\n        windowHeight={\n          size >= DeviceSize.lg && genericPlatform === 'mobile'\n            ? height\n            : undefined\n        }\n      />\n    ),\n    [currentVideo, height, size, width],\n  );\n  return (\n    <Screen>\n      <Header title={video.title} headerType={HEADER_TYPE.SECONDARY} />\n      <View style={{flex: 1, overflow: 'scroll'}}>\n        <View\n          style={\n            size >= DeviceSize.lg\n              ? {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  flex: 1,\n                  paddingHorizontal: 64 * p,\n                }\n              : {\n                  flexDirection: 'column',\n                  justifyContent: 'flex-start',\n                  flex: 1,\n                }\n          }>\n          <View\n            style={\n              size >= DeviceSize.lg\n                ? {flex: 2}\n                : genericPlatform === 'mobile' && {flex: 1}\n            }>\n            <View>{memoizedVideoPlayer}</View>\n            <View\n              style={\n                size >= DeviceSize.lg ? {marginTop: 24 * p, flex: 1} : {flex: 1}\n              }>\n              {size >= DeviceSize.lg ? (\n                <VideoInfo\n                  courseData={courseData}\n                  video={currentVideo}\n                  dark={dark}\n                />\n              ) : (\n                <View style={{flex: 1}}>\n                  <RecommendedFlatList\n                    courseData={courseData}\n                    currentVideo={currentVideo}\n                    relatedVideos={relatedVideos}\n                    setCurrentVideo={setCurrentVideo}\n                    dark={dark}\n                  />\n                </View>\n              )}\n            </View>\n          </View>\n          {size >= DeviceSize.lg && (\n            <>\n              <View style={{width: 32 * p}} />\n              <View style={{flex: 1}}>\n                <RecommendedFlatList\n                  currentVideo={currentVideo}\n                  relatedVideos={relatedVideos}\n                  setCurrentVideo={setCurrentVideo}\n                  dark={dark}\n                />\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n    </Screen>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, ScrollView, StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport PressableBase from '../ui/core/PressableBase';\nimport Text from '../ui/core/Text';\nimport {useNavigation} from '@react-navigation/native';\nimport Section from '../ui/Section';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {STATUS} from '../store/status';\nimport Notification from '../ui/Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {ExtendedAlert} from '../types';\n\n// TODO \"quick access\" section using recently opened sections\n// TODO open notification section\n// TODO show update widget\n// TODO show live classes\n\nconst sectionsData = [\n  {name: 'Courses', icon: 'school'},\n  {name: 'Material', icon: 'folders'},\n  {name: 'Email', icon: 'mail'},\n  {name: 'ExamSessions', icon: 'ballpen'},\n];\nconst sectionColors = [colors.accent300, colors.red, '#9b51e0', '#f2c94c'];\n\nconst Home = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n  const navigation = useNavigation();\n\n  const {courses, recentMaterial, loadExtendedCourseInfoStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const latestAlert = useMemo<ExtendedAlert>(() => {\n    return courses\n      .flatMap(\n        c =>\n          c.extendedInfo?.notices.map(notice => {\n            return {\n              ...notice,\n              course_name: c.basicInfo.name,\n              course_code: c.basicInfo.code,\n            };\n          }) || [],\n      )\n      .sort((a, b) => b.date - a.date)[0];\n  }, [courses]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n      topSections: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingBottom: 16,\n      },\n      topSection: {\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionInner: {\n        width: 40 * p,\n        height: 40 * p,\n        borderRadius: 4 * p,\n        marginBottom: 4 * p,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionText: {\n        position: 'absolute',\n        bottom: -16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header title={t('home')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          <PressableBase\n            onPress={() => {\n              navigation.navigate('Search');\n            }}>\n            <TextInput\n              editable={false}\n              placeholder={t('searchForAnything')}\n              dark={dark}\n              icon=\"search\"\n              style={{marginBottom: 32 * p}}\n            />\n          </PressableBase>\n          {/* Top sections */}\n          <View style={_styles.topSections}>\n            {sectionsData.map((btn, i) => (\n              <PressableBase\n                key={btn.name}\n                style={_styles.topSection}\n                onPress={() => {\n                  navigation.navigate(btn.name);\n                }}>\n                <View\n                  style={{\n                    ..._styles.topSectionInner,\n                    backgroundColor: sectionColors[i],\n                  }}>\n                  <TablerIcon\n                    name={btn.icon}\n                    size={24 * p}\n                    color={colors.gray100}\n                  />\n                </View>\n                <Text\n                  numberOfLines={1}\n                  s={10 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}\n                  style={_styles.topSectionText}>\n                  {t(btn.name[0].toLowerCase() + btn.name.slice(1))}\n                </Text>\n              </PressableBase>\n            ))}\n            <PressableBase\n              style={_styles.topSection}\n              onPress={() => {\n                navigation.toggleDrawer();\n              }}>\n              <View\n                style={{\n                  ..._styles.topSectionInner,\n                  borderColor: colors.gray200,\n                  borderWidth: 1 * p,\n                }}>\n                <TablerIcon name=\"plus\" size={24 * p} color={colors.gray200} />\n              </View>\n              <Text\n                numberOfLines={1}\n                s={10 * p}\n                w=\"r\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={_styles.topSectionText}>\n                {t('more')}\n              </Text>\n            </PressableBase>\n          </View>\n\n          {/* Latest files */}\n          <Section\n            dark={dark}\n            title={t('latestFiles')}\n            style={{marginTop: 32 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              recentMaterial.slice(0, 3).map(file => (\n                <View key={file.code}>\n                  <DirectoryItem\n                    relativeDate\n                    dark={dark}\n                    item={file}\n                    course={file.course_name}\n                  />\n                </View>\n              ))\n            )}\n          </Section>\n\n          {/* Latest alert */}\n          <Section\n            dark={dark}\n            title={t('latestAlert')}\n            style={{marginTop: 24 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              <Notification\n                type={NotificationType.NOTICE}\n                notification={latestAlert}\n                dark={dark}\n              />\n            )}\n          </Section>\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n};\n\nexport default Home;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch} from 'react-redux';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch} from '../store/store';\nimport WebView, {WebViewNavigation} from 'react-native-webview';\nimport {getUnreadEmailCount} from '../store/userSlice';\nimport Animated from 'react-native-reanimated';\nimport {emailUrl} from 'open-polito-api/lib/user';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport {genericPlatform} from '../utils/platform';\nimport {Device} from 'open-polito-api/lib/device';\n\n// TODO dark mode in WebView\n\nconst getWebMailUrl = async (device: Device) => {\n  const url = await emailUrl(device);\n  return url;\n};\n\nexport default function Email() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [mounted, setMounted] = useState(true);\n  const [loaded, setLoaded] = useState(false);\n  const [webViewRef, setWebViewRef] = useState<WebView | null>(null);\n  const [webMailUrl, setWebMailUrl] = useState('');\n\n  useEffect(() => {\n    return () => setMounted(false);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      dispatch(getUnreadEmailCount(device));\n      !webMailUrl && mounted && setWebMailUrl(await getWebMailUrl(device));\n      webMailUrl && genericPlatform !== 'mobile' && setLoaded(true);\n    })();\n  }, [device, dispatch, mounted, webMailUrl]);\n\n  const handleNavigationStateChange = (state: WebViewNavigation) => {\n    if (genericPlatform !== 'mobile') {\n      return;\n    }\n    if (!state.loading && !loaded && mounted) {\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <Screen>\n      <Header title={t('email')} headerType={HEADER_TYPE.MAIN} />\n      <Animated.View style={{flex: 1}}>\n        {loaded ? (\n          genericPlatform !== 'mobile' ? (\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('emailCannotBeShownWeb', {\n                  genericPlatform,\n                })}\n              </Text>\n              <Text\n                href={webMailUrl}\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('openBrowser')}\n              </Text>\n            </View>\n          ) : null\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={dark ? colors.gray100 : colors.gray800}\n              style={{marginRight: 16 * p}}>\n              {t('loading')}\n            </Text>\n            <ActivityIndicator />\n          </View>\n        )}\n        {genericPlatform === 'mobile' && (\n          <View\n            style={{\n              flex: loaded ? 1 : 0,\n            }}>\n            <WebView\n              ref={ref => !ref && setWebViewRef(ref)}\n              source={{uri: webMailUrl}}\n              onNavigationStateChange={handleNavigationStateChange}\n            />\n          </View>\n        )}\n      </Animated.View>\n    </Screen>\n  );\n}\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {StyleSheet, Switch, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type SettingsItemProps = {\n  icon?: string;\n  name: string;\n  description?: string;\n  disabled?: boolean;\n  settingsFunction: () => any;\n  toggle?: boolean; // whether to show toggle\n  toggleValue?: boolean; // value of toggle\n  padding?: boolean; // adds horizontal padding\n  paddingBottom?: boolean; // add bottom padding (e.g. when not last item)\n  children?: ReactNode;\n};\n\nconst SettingsItem: FC<SettingsItemProps> = ({\n  icon,\n  name,\n  description,\n  disabled = false,\n  settingsFunction = () => {},\n  toggle = false,\n  toggleValue,\n  padding = false,\n  paddingBottom = true,\n  children = null,\n}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      textContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n      },\n    });\n  }, []);\n\n  return (\n    <View\n      style={[\n        padding ? {paddingHorizontal: 16 * p} : {},\n        paddingBottom ? {paddingBottom: 16 * p} : {},\n      ]}>\n      <PressableBase\n        disabled={!!children || disabled}\n        onPress={settingsFunction}\n        android_ripple={{color: colors.gray200}}\n        style={[_styles.container, disabled ? {opacity: 0.5} : {}]}>\n        {icon ? (\n          <View style={{marginRight: 12 * p}}>\n            <TablerIcon\n              name={icon}\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n          </View>\n        ) : null}\n        <View style={_styles.textContainer}>\n          <Text\n            w=\"m\"\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginBottom: 2 * p}}>\n            {name}\n          </Text>\n          {description ? (\n            <Text w=\"r\" s={10 * p} c={dark ? colors.gray200 : colors.gray700}>\n              {description}\n            </Text>\n          ) : null}\n        </View>\n        {toggle ? (\n          <Switch value={toggleValue} onChange={settingsFunction} />\n        ) : null}\n      </PressableBase>\n      <View>{children}</View>\n    </View>\n  );\n};\nexport default SettingsItem;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig, setToast} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport Logger from '../../utils/Logger';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\n\nconst SettingsEnableLoggingModal = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const enableLogging = () => {\n    dispatch(setConfig({...config, logging: !config.logging}));\n    dispatch(\n      setToast({\n        message: t('restartToastMessage'),\n        type: 'warn',\n        visible: true,\n      }),\n    );\n  };\n\n  return (\n    <BaseActionConfirmModal\n      title={t('debugEnableLogging')}\n      icon=\"alert-triangle\"\n      accentColor={colors.red}\n      onConfirm={enableLogging}>\n      <RenderHTMLSource\n        source={{\n          html: t('debugEnableLoggingDialogMessage', {\n            path: Logger.logsDirectoryPath,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default SettingsEnableLoggingModal;\n","import React, {useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport SettingsItem, {SettingsItemProps} from '../ui/SettingsItem';\nimport {useDispatch} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport {AppDispatch, RootState} from '../store/store';\nimport {resetConfig, setConfig, setToast} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\nimport {Configuration} from '../defaultConfig';\nimport Config from 'react-native-config';\nimport {sendTestPushNotification} from 'open-polito-api/lib/notifications';\nimport Analytics from 'appcenter-analytics';\nimport version from '../../version.json';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport colors from '../colors';\nimport SettingsEnableLoggingModal from '../components/modals/SettingsEnableLoggingModal';\nimport {ModalContext} from '../context/ModalProvider';\n\n/**\n * Creates Settings item component from data\n * @param item Settings item data\n * @returns Settings item component\n */\nexport const buildSettingsItem = (item: SettingsItemProps) => {\n  return <SettingsItem key={item.name} {...item} />;\n};\n\nexport default function Settings() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const {setModal} = useContext(ModalContext);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  // const _setConfig = (config: Configuration) => {\n  //   dispatch(setConfig(config));\n  // };\n\n  // const showRestartAppNeeded = () => {\n  //   dispatch(\n  //     setToast({\n  //       message: t('restartToastMessage'),\n  //       type: 'warn',\n  //       visible: true,\n  //     }),\n  //   );\n  // };\n\n  // const settingsItems: SettingsItemProps[] = [\n  //   {\n  //     icon: 'bell',\n  //     name: t('notifications'),\n  //     description: t('notificationsDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  //   {\n  //     icon: 'moon-stars',\n  //     name: t('darkMode'),\n  //     settingsFunction: () => notImplemented(t),\n  //     toggle: true,\n  //     toggleValue: config.theme == 'dark',\n  //   },\n  //   {\n  //     icon: 'info-circle',\n  //     name: t('about'),\n  //     description: t('aboutDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  // ];\n\n  const debugSettingsItems: SettingsItemProps[] = [\n    {\n      icon: 'bug',\n      name: t('debugEnableLogging'),\n      description: t('debugEnableLoggingDesc'),\n      settingsFunction: () => {\n        if (!config.logging) {\n          setModal(<SettingsEnableLoggingModal />);\n        } else {\n          dispatch(setConfig({...config, logging: false}));\n        }\n      },\n      toggle: true,\n      toggleValue: config.logging,\n    },\n    {\n      icon: 'arrow-back',\n      name: t('debugResetConfig'),\n      description: t('debugResetConfigDesc'),\n      settingsFunction: () => {\n        dispatch(resetConfig());\n      },\n    },\n    {\n      icon: 'bell-ringing',\n      name: t('debugTestNotification'),\n      description: t('debugTestNotificationDesc'),\n      settingsFunction: () => {\n        dispatch(\n          setToast({message: t('pleaseWait'), type: 'info', visible: true}),\n        );\n        (async () => {\n          await sendTestPushNotification(device);\n        })();\n      },\n    },\n  ];\n\n  // const experimentalSettingsItems: SettingsItemProps[] = [];\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('settings')} />\n      <View style={_styles.container}>\n        {/* <Section dark={dark} title={t('generalSettings')}>\n          {settingsItems.map(item => buildSettingsItem(item))}\n        </Section> */}\n\n        {/* Debug options */}\n        {parseInt(Config.ENABLE_DEBUG_OPTIONS!) ? (\n          <Section dark={dark} title={t('debugSettings')}>\n            <View style={{marginTop: -8 * p}}>\n              {debugSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null}\n        {/* Experimental options */}\n        {/* {parseInt(Config.ENABLE_EXPERIMENTAL_OPTIONS) ? (\n          <Section dark={dark} title={t('experimentalSettings')}>\n            <View>\n              {experimentalSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null} */}\n      </View>\n      <View\n        style={{\n          marginTop: 8,\n          marginBottom: 16,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n          {'v' + version.version}\n        </Text>\n      </View>\n    </Screen>\n  );\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useContext} from 'react';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  CourseState,\n  getRecentMaterial,\n  loadCourse,\n} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport {useNavigation} from '@react-navigation/core';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport PressableBase from '../ui/core/PressableBase';\n\n// TODO folder stats (n of files, folder size)\n// TODO download features (e.g. download folders too, selection feature, ...)\n\nconst tabs = ['explore', 'recentlyAdded'];\n\nexport default function Material() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigation = useNavigation();\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const {getRecentMaterialStatus, recentMaterial} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const [materialLoaded, setMaterialLoaded] = useState(false);\n  const [allLoaded, setAllLoaded] = useState(false);\n\n  /**\n   * Initial setup.\n   * Load all course data if not already loaded, set {@link materialLoaded} to true if already loaded.\n   */\n  useEffect(() => {\n    let _materialLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code != STATUS.SUCCESS) {\n        _materialLoaded = false;\n        dispatch(\n          loadCourse({\n            basicCourseInfo: course.basicInfo,\n            device: device,\n          }),\n        );\n      }\n    });\n    _materialLoaded && setMaterialLoaded(true);\n  }, []);\n\n  /**\n   * Called each time {@link courses} changes.\n   * Check if data is loaded, then set {@link materialLoaded} to true if so.\n   */\n  useEffect(() => {\n    if (!materialLoaded) {\n      let _materialLoaded = true;\n      courses.forEach(course => {\n        if (course.status.code != STATUS.SUCCESS) {\n          _materialLoaded = false;\n        }\n      });\n      _materialLoaded && setMaterialLoaded(true);\n    }\n  }, [courses]);\n\n  /**\n   * When {@link materialLoaded}, get recent material only if not already set.\n   */\n  useEffect(() => {\n    if (\n      materialLoaded &&\n      getRecentMaterialStatus.code != STATUS.SUCCESS &&\n      getRecentMaterialStatus.code != STATUS.PENDING\n    ) {\n      dispatch(getRecentMaterial());\n    }\n  }, [materialLoaded]);\n\n  /**\n   * Finally, when recent material has been loaded, set {@link allLoaded} to true.\n   */\n  useEffect(() => {\n    if (getRecentMaterialStatus.code == STATUS.SUCCESS) {\n      setAllLoaded(true);\n    }\n  }, [getRecentMaterialStatus]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('material')} />\n      <FlatList\n        data={[0]}\n        renderItem={() => (\n          <View style={_styles.container}>\n            <PressableBase\n              onPress={() => {\n                navigation.navigate('Search');\n              }}>\n              <TextInput\n                editable={false}\n                placeholder={t('searchForAnything')}\n                dark={dark}\n                icon=\"search\"\n              />\n            </PressableBase>\n            <Tabs\n              style={{marginTop: 24 * p, marginBottom: 16 * p}}\n              onChange={i => setSelectedTab(i)}\n              dark={dark}\n              items={tabs.map(tab => {\n                return {label: t(tab), value: tab};\n              })}\n            />\n            {selectedTab == 0 ? (\n              <MaterialExplorer courseId=\"all\" dark={dark} />\n            ) : (\n              <FlatList\n                data={recentMaterial}\n                keyExtractor={item => item.code}\n                renderItem={({item}) => (\n                  <DirectoryItem\n                    item={item}\n                    key={item.code}\n                    dark={dark}\n                    course={item.course_name}\n                  />\n                )}\n              />\n            )}\n          </View>\n        )}\n      />\n    </Screen>\n  );\n}\n","const sections = [\n  {\n    name: 'general',\n    items: [\n      {\n        name: 'Home',\n        icon: 'layout-dashboard',\n      },\n      {\n        name: 'Email',\n        icon: 'mail',\n      },\n      {\n        name: 'Notifications',\n        icon: 'bell',\n      },\n      {\n        name: 'Settings',\n        icon: 'settings',\n      },\n    ],\n  },\n  {\n    name: 'classes',\n    items: [\n      {\n        name: 'Courses',\n        icon: 'school',\n      },\n      {\n        name: 'Material',\n        icon: 'folders',\n      },\n      {\n        name: 'Bookings',\n        icon: 'ticket',\n      },\n      {\n        name: 'Timetable',\n        icon: 'clock',\n      },\n    ],\n  },\n  {\n    name: 'exams',\n    items: [\n      {\n        name: 'Exams',\n        icon: 'book-2',\n      },\n      {\n        name: 'ExamSessions',\n        icon: 'ballpen',\n      },\n    ],\n  },\n  {\n    name: 'headquarters',\n    items: [\n      {\n        name: 'Maps',\n        icon: 'map-2',\n      },\n      {\n        name: 'Classrooms',\n        icon: 'building-arch',\n      },\n      {\n        name: 'People',\n        icon: 'user',\n      },\n    ],\n  },\n];\n\nexport default sections;\n","import {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport React, {FC, useCallback, useContext, useMemo, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport version from '../../version.json';\nimport sections from '../sections';\nimport {useTranslation} from 'react-i18next';\nimport TablerIcon from './core/TablerIcon';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {PersonalData} from 'open-polito-api/lib/user';\nimport {logout} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\n\n// TODO remove when sections completed\nconst isSectionUnavailable = (name: string) => {\n  return ['Maps', 'Classrooms', 'People'].includes(name);\n};\n\ntype DrawerParams = {\n  dark: boolean;\n} & DrawerContentComponentProps;\n\n// TODO proper separation of logic\n// TODO badges\n\nconst orderedSections = sections.flatMap(sec => sec.items.map(i => i.name));\n\nconst getShortenedDegreeName = (degreeType: string, degreeName: string) => {\n  const prefix =\n    degreeType.toLowerCase() == 'corso di laurea in'\n      ? 'L3'\n      : degreeType.toLowerCase() == 'corso di laurea magistrale in'\n      ? 'LM'\n      : '';\n  const suffix = degreeName\n    .toLowerCase()\n    .replace('ingegneria', '')\n    .toUpperCase()\n    .trim();\n  return `${prefix} ${suffix}`;\n};\n\n// TODO fix bug where highlighted selection doesn't update if pressing back button\n\nconst Drawer: FC<DrawerParams> = ({dark, ...props}) => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const deviceContext = useContext(DeviceContext);\n\n  const userInfo = useSelector<RootState, PersonalData | null>(\n    state => state.user.userInfo,\n  );\n\n  const shortDegreeName = useMemo(() => {\n    if (userInfo == null) {\n      return '';\n    }\n    return getShortenedDegreeName(userInfo.degree_type, userInfo.degree_name);\n  }, [userInfo]);\n\n  const [current, setCurrent] = useState(orderedSections[0]);\n\n  // TODO optimize (maybe with useMemo)\n  const createButtons = () => {\n    return sections.map(sec => (\n      <View style={_styles.category}>\n        <View style={{marginBottom: 8 * p}}>\n          <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {t(sec.name).toUpperCase()}\n          </Text>\n        </View>\n        {sec.items.map(screen => (\n          <PressableBase\n            disabled={isSectionUnavailable(screen.name)}\n            style={{\n              paddingVertical: 4 * p,\n              flexDirection: 'row',\n              alignItems: 'center',\n              opacity: isSectionUnavailable(screen.name) ? 0.3 : 1,\n            }}\n            key={screen.name}\n            onPress={() => {\n              setCurrent(screen.name);\n              props.navigation.navigate(screen.name);\n            }}>\n            <TablerIcon\n              name={screen.icon}\n              size={24 * p}\n              color={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {t(screen.name.charAt(0).toLowerCase() + screen.name.slice(1))}\n            </Text>\n          </PressableBase>\n        ))}\n      </View>\n    ));\n  };\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout(deviceContext.device));\n  }, [dispatch, deviceContext]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      drawerScrollView: {\n        backgroundColor: dark ? colors.gray800 : colors.gray100,\n      },\n      drawer: {\n        flexDirection: 'column',\n        paddingHorizontal: 16 * p,\n        paddingVertical: 24 * p,\n      },\n      hr: {\n        backgroundColor: colors.gray500,\n        height: 1 * p,\n        marginBottom: 16 * p,\n      },\n      category: {\n        marginBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <DrawerContentScrollView style={_styles.drawerScrollView} {...props}>\n      <View style={_styles.drawer}>\n        <View style={{justifyContent: 'flex-start', marginBottom: 16 * p}}>\n          <Text s={14 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n            Open PoliTo\n          </Text>\n          <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n            v{version.version}\n          </Text>\n        </View>\n        <View style={_styles.hr} />\n        {createButtons()}\n        <View style={_styles.hr} />\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <View\n            style={{\n              width: 24 * p,\n              height: 24 * p,\n              borderRadius: 24 * p,\n              backgroundColor: colors.accent100,\n              marginRight: 8 * p,\n            }}\n          />\n          <View style={{justifyContent: 'flex-start', flex: 1}}>\n            <Text\n              numberOfLines={1}\n              w=\"b\"\n              c={dark ? colors.gray100 : colors.gray800}\n              s={12 * p}>\n              {userInfo?.surname} {userInfo?.name}\n            </Text>\n            <Text\n              numberOfLines={1}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}\n              s={10 * p}>\n              {shortDegreeName}\n            </Text>\n          </View>\n          <PressableBase\n            onPress={() => {\n              handleLogout();\n            }}>\n            <TablerIcon name=\"logout\" size={24 * p} color={colors.accent300} />\n          </PressableBase>\n        </View>\n      </View>\n    </DrawerContentScrollView>\n  );\n};\n\nexport default Drawer;\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {LayoutChangeEvent, StyleSheet, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\nimport Text from './Text';\n\ninterface PressableCardProps {\n  dark: boolean;\n  title?: string;\n  description?: string;\n  onPress: () => any;\n  expanded?: boolean;\n  sideElement?: ReactNode; // Element to show right next to title and description\n  expandedElement?: ReactNode; // Element to show only when card expanded\n  children?: ReactNode; // Always shown\n}\n\nconst PressableCard: FC<PressableCardProps> = ({\n  dark,\n  title,\n  description,\n  onPress,\n  expanded,\n  sideElement,\n  expandedElement,\n  children,\n}) => {\n  const rotation = useSharedValue(0);\n\n  /**\n   * Opacity of the whole component\n   */\n  const opacity = useSharedValue(0);\n\n  const sideElementOpacity = useSharedValue(1);\n\n  const [computedHeight, setComputedHeight] = useState<number | null>(null);\n  const expandedElementHeight = useSharedValue(0);\n  const expandedElementOpacity = useSharedValue(0);\n\n  const animCardStyle = useAnimatedStyle(() => ({\n    opacity: opacity.value,\n  }));\n\n  /**\n   * Element that will actually be rendered in the expanded section\n   */\n  const [expandedToRender, setExpandedToRender] = useState<ReactNode | null>(\n    expandedElement,\n  );\n\n  /**\n   * Update expanded element, giving time to complete the animation\n   */\n  useEffect(() => {\n    let result: ReactNode | undefined;\n    if (expanded || !computedHeight) {\n      result = expandedElement;\n    } else {\n      result = <View />;\n    }\n    result &&\n      setTimeout(\n        () => {\n          setExpandedToRender(result);\n        },\n        expanded ? 0 : 200,\n      );\n  }, [expanded, expandedElement, computedHeight]);\n\n  /**\n   * Callback used when the height of the expanded element has been computed\n   */\n  const onExpandedElementLayout = useCallback(\n    (e: LayoutChangeEvent) => {\n      // Only execute once, i.e. when the computedHeight is still null\n      if (computedHeight !== null) {\n        return;\n      }\n      // Make component visible again\n      opacity.value = withTiming(1, {\n        duration: 200,\n      });\n      // Set computed height\n      setComputedHeight(e.nativeEvent.layout.height);\n    },\n    [computedHeight, opacity],\n  );\n\n  useEffect(() => {\n    if (computedHeight === 0) {\n      return;\n    }\n    const condition = expanded && expandedElement;\n    rotation.value = withTiming(condition ? 90 : 0, {duration: 200});\n    expandedElementOpacity.value = withTiming(condition ? 1 : 1, {\n      duration: 400,\n    });\n  }, [\n    expanded,\n    rotation,\n    expandedElementOpacity,\n    expandedElement,\n    computedHeight,\n  ]);\n\n  useEffect(() => {\n    sideElementOpacity.value = withTiming(sideElement ? 1 : 0, {duration: 400});\n  }, [sideElement, sideElementOpacity]);\n\n  const animChevronStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        rotate: `${rotation.value}deg`,\n      },\n    ],\n  }));\n\n  /**\n   * When computed height is set, change the height\n   */\n  useEffect(() => {\n    if (computedHeight) {\n      expandedElementHeight.value = withTiming(expanded ? computedHeight : 0, {\n        duration: 200,\n      });\n    }\n  }, [computedHeight, expandedElementHeight, expanded]);\n\n  const expandedElementStyle = useAnimatedStyle(() => ({\n    ...(computedHeight !== null\n      ? {\n          height: expandedElementHeight.value,\n        }\n      : {}),\n    opacity: withTiming(expanded && computedHeight !== null ? 1 : 0, {\n      duration: 200,\n    }),\n  }));\n\n  const sideElementStyle = useAnimatedStyle(() => ({\n    opacity: sideElementOpacity.value,\n  }));\n\n  const styles = useMemo(() => {\n    return StyleSheet.create({\n      button: {\n        paddingVertical: 8 * p,\n        paddingLeft: 16 * p,\n        paddingRight: 8 * p,\n        marginBottom: 16 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        borderRadius: 4 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Animated.View style={[animCardStyle]}>\n      <PressableBase\n        onPress={onPress}\n        android_ripple={{color: dark ? colors.gray400 : colors.gray500}}\n        style={styles.button}>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: expandedElement ? 'flex-start' : 'center',\n          }}>\n          <View style={{flex: 1}}>\n            <View style={{flexDirection: 'row', alignItems: 'center'}}>\n              <View style={{flex: 4}}>\n                {title && (\n                  <Text\n                    s={12 * p}\n                    c={dark ? colors.gray200 : colors.gray700}\n                    w=\"m\">\n                    {title}\n                  </Text>\n                )}\n                {description && (\n                  <Text\n                    s={10 * p}\n                    c={dark ? colors.gray300 : colors.gray600}\n                    w=\"r\">\n                    {description}\n                  </Text>\n                )}\n              </View>\n              <Animated.View\n                style={[sideElementStyle, {flex: sideElement ? 1 : 0}]}>\n                {sideElement}\n              </Animated.View>\n              <View\n                style={{\n                  justifyContent: 'flex-start',\n                  alignItems: 'center',\n                }}>\n                <View>\n                  <Animated.View style={[animChevronStyle]}>\n                    <TablerIcon\n                      name=\"chevron-right\"\n                      color={dark ? colors.gray200 : colors.gray700}\n                      size={24 * p}\n                    />\n                  </Animated.View>\n                </View>\n              </View>\n            </View>\n            <View style={{paddingRight: 8 * p}}>\n              {children}\n              <Animated.View\n                onLayout={e => onExpandedElementLayout(e)}\n                style={[expandedElementStyle]}>\n                {expandedToRender}\n              </Animated.View>\n            </View>\n          </View>\n        </View>\n      </PressableBase>\n    </Animated.View>\n  );\n};\n\nexport default PressableCard;\n","import i18next from 'i18next';\nimport moment from 'moment';\nimport {\n  barcode_url,\n  Booking,\n  BookingContext,\n  BookingSlot,\n  BookingSubcontext,\n} from 'open-polito-api/lib/booking';\nimport React, {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {\n  ActivityIndicator,\n  Image,\n  Pressable,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {STATUS} from '../store/status';\nimport {AppDispatch, RootState} from '../store/store';\nimport {getBookingContexts, getMyBookings, UserState} from '../store/userSlice';\nimport PressableCard from '../ui/core/PressableCard';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport NoContent from '../ui/NoContent';\nimport Screen from '../ui/Screen';\nimport Tabs from '../ui/Tabs';\nimport {GlyphName} from '../utils/glyph-map';\n\n// TODO add booking capabilities\n\nconst BookingSubctx = ({\n  ctxId,\n  subctx,\n  language,\n  dark,\n}: {\n  ctxId: string;\n  subctx: BookingSubcontext;\n  language: string;\n  dark: boolean;\n}) => {\n  const {device} = useContext(DeviceContext);\n\n  const [state, setState] = useState<{\n    loaded: boolean;\n    expanded: boolean;\n    mounted: boolean;\n    slots: BookingSlot[];\n  }>({\n    loaded: false,\n    expanded: false,\n    mounted: true,\n    slots: [],\n  });\n\n  // TODO re-enable when booking feature added\n  // useEffect(() => {\n  //   const condition =\n  //     state.mounted &&\n  //     state.expanded &&\n  //     !state.loaded &&\n  //     state.slots.length === 0;\n  //   if (!condition) {\n  //     return;\n  //   }\n  //   (async () => {\n  //     const slots = await getSlots(device, ctxId, subctx.id);\n  //     state.mounted && setState(prev => ({...prev, loaded: true, slots}));\n  //   })();\n  // }, [state, device, ctxId, subctx]);\n\n  useEffect(() => {\n    return () => setState(prev => ({...prev, mounted: false}));\n  }, []);\n\n  return (\n    <View key={subctx.id}>\n      <Pressable\n        onPress={() => setState(prev => ({...prev, expanded: !prev.expanded}))}\n        android_ripple={{color: colors.lightGray}}\n        style={{paddingVertical: 8 * p}}>\n        <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n          {language === 'it' ? subctx.ita.name : subctx.eng.name}\n        </Text>\n      </Pressable>\n      <View></View>\n    </View>\n  );\n};\n\nconst BookingCtx = ({\n  ctx,\n  language,\n  dark,\n}: {\n  ctx: BookingContext;\n  language: string;\n  dark: boolean;\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <View>\n      <PressableCard\n        expanded={expanded}\n        dark={dark}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n        description={\n          language === 'it' ? ctx.ita.description : ctx.eng.description\n        }\n        title={language === 'it' ? ctx.ita.name : ctx.eng.name}\n        expandedElement={\n          ctx.subcontexts && ctx.subcontexts.length > 0 ? (\n            <View style={{marginTop: 16 * p}}>\n              {ctx.subcontexts?.map(subctx => (\n                <BookingSubctx\n                  dark={dark}\n                  key={subctx.id}\n                  subctx={subctx}\n                  language={language}\n                  ctxId={ctx.id}\n                />\n              ))}\n            </View>\n          ) : null\n        }\n      />\n    </View>\n  );\n};\n\ninterface BookingCardProps {\n  dark: boolean;\n  booking: Booking;\n  barcodeUrl: string;\n}\n\nconst BookingCard: FC<BookingCardProps> = ({dark, booking, barcodeUrl}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const sections = useMemo<\n    {type: string; label: string; icon: GlyphName}[]\n  >(() => {\n    return [\n      {\n        type: 'date',\n        label: moment(booking.start_time).format('ll'),\n        icon: 'calendar-time',\n      },\n      {\n        type: 'time',\n        label: `${moment(booking.start_time).format('LT')} - ${moment(\n          booking.end_time,\n        ).format('LT')}`,\n        icon: 'clock',\n      },\n    ];\n  }, [booking]);\n\n  return (\n    <PressableCard\n      title={\n        booking.course_id\n          ? `${booking.course_name} - ${booking.course_id}`\n          : booking.subcontext_name\n      }\n      description={booking.context_name}\n      expanded={expanded}\n      dark={dark}\n      sideElement={\n        !expanded && (\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{width: '100%', aspectRatio: 2.5, resizeMode: 'contain'}}\n            resizeMode=\"contain\"\n          />\n        )\n      }\n      expandedElement={\n        <View style={{flex: 1, marginTop: 16 * p}}>\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{\n              width: '100%',\n              aspectRatio: 2.5,\n              resizeMode: 'contain',\n            }}\n          />\n        </View>\n      }\n      onPress={() => setExpanded(prev => !prev)}>\n      <View style={{marginTop: 16 * p}}>\n        {sections.map((section, i) => (\n          <View\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'center',\n              },\n              i > 0 && {marginTop: 8 * p},\n            ]}>\n            <TablerIcon\n              name={section.icon}\n              size={16 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              style={{marginRight: 8 * p}}\n              s={10 * p}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}>\n              {section.label}\n            </Text>\n          </View>\n        ))}\n      </View>\n    </PressableCard>\n  );\n};\n\nconst Bookings = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {\n    userInfo,\n    getBookingsStatus,\n    getBookingContextsStatus,\n    bookings,\n    bookingContexts,\n  } = useSelector<RootState, UserState>(state => state.user);\n\n  const mounted = useRef(true);\n\n  const tabs = useMemo(() => {\n    return ['myBookings', 'newBooking'];\n  }, []);\n\n  const [state, setState] = useState<{\n    currentTab: string;\n    barcodeUrl: string;\n  }>({\n    currentTab: tabs[0],\n    barcodeUrl: '',\n  });\n\n  // Refreshing\n  const refreshing = useMemo(() => {\n    return (\n      getBookingsStatus.code === STATUS.PENDING ||\n      getBookingContextsStatus.code === STATUS.PENDING\n    );\n  }, [getBookingsStatus, getBookingContextsStatus]);\n\n  // Refresh\n  const refresh = useCallback(\n    (tab: 'myBookings' | 'newBooking') => {\n      if (tab === 'myBookings') {\n        dispatch(getMyBookings(device));\n      }\n      if (tab === 'newBooking') {\n        dispatch(getBookingContexts(device));\n      }\n    },\n    [device, dispatch],\n  );\n\n  // Load barcode\n  useEffect(() => {\n    if (state.barcodeUrl === '' && userInfo) {\n      setState(prev => ({\n        ...prev,\n        barcodeUrl: barcode_url(userInfo.current_id),\n      }));\n    }\n  }, [state.barcodeUrl, userInfo]);\n\n  // On tab change\n  useEffect(() => {\n    (async () => {\n      if (state.currentTab === tabs[0]) {\n        dispatch(getMyBookings(device));\n      } else if (state.currentTab === tabs[1]) {\n        dispatch(getBookingContexts(device));\n      }\n    })();\n  }, [state.currentTab, userInfo, device, dispatch, tabs]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('bookings')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i =>\n          setState(prev => ({\n            ...prev,\n            currentTab: tabs[i],\n          }))\n        }\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n      />\n      <View style={_styles.container}>\n        <ScrollView\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={() =>\n                refresh(\n                  state.currentTab === tabs[0] ? 'myBookings' : 'newBooking',\n                )\n              }\n            />\n          }>\n          {(state.currentTab === tabs[0] &&\n            getBookingsStatus.code === STATUS.PENDING) ||\n          (state.currentTab === tabs[1] &&\n            getBookingContextsStatus.code === STATUS.PENDING) ? (\n            <ActivityIndicator />\n          ) : state.currentTab === tabs[0] ? (\n            bookings.length === 0 ? (\n              <NoContent />\n            ) : (\n              bookings.map(booking => (\n                <BookingCard\n                  key={`${booking.context_id}${booking.subcontext_id}${booking.start_time}${booking.end_time}`}\n                  dark={dark}\n                  booking={booking}\n                  barcodeUrl={state.barcodeUrl}\n                />\n              ))\n            )\n          ) : bookingContexts.length === 0 ? (\n            <NoContent />\n          ) : (\n            bookingContexts.map(ctx => (\n              <BookingCtx\n                dark={dark}\n                key={ctx.id}\n                ctx={ctx}\n                language={i18next.language}\n              />\n            ))\n          )}\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Bookings;\n","import React, {ReactNode} from 'react';\nimport {View} from 'react-native';\n\nconst AnimatedGradientBase = ({\n  width,\n  height,\n  children,\n}: {\n  width: number;\n  height: number;\n  children: ReactNode;\n}) => {\n  return (\n    <View\n      style={{\n        width,\n        height,\n      }}>\n      {children}\n    </View>\n  );\n};\n\nexport default AnimatedGradientBase;\n","import React, {ReactNode, useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst LoaderBase = ({children}: {children: ReactNode}) => {\n  const [visible, setVisible] = useState(false);\n  const [mounted, setMounted] = useState(true);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: offset.value,\n      transform: [\n        {translateY: 8 - offset.value * 8},\n        {translateX: 8 - offset.value * 8},\n      ],\n    };\n  });\n\n  useEffect(() => {\n    (async () => {\n      setTimeout(() => {\n        mounted && setVisible(true);\n      }, 150);\n    })();\n    return () => {\n      setMounted(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (visible) {\n      offset.value = withTiming(1, {duration: 200});\n    }\n  }, [visible]);\n\n  return visible ? (\n    <Animated.View style={[animStyle]}>{children}</Animated.View>\n  ) : null;\n};\n\nexport default LoaderBase;\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport {Rect} from 'react-native-svg';\nimport {p} from '../../scaling';\nimport AnimatedGradientBase from './AnimatedGradientBase';\nimport LoaderBase from './LoaderBase';\n\nconst TimetableDayLoader = ({w, h}: {w: number; h: number}) => {\n  const [n] = useState(Math.ceil(Math.random() * 2));\n  const [yPositions] = useState(\n    Array.from({length: n}, (_, i) => (i + 1) * (3 + Math.random()) * h),\n  );\n\n  return (\n    <View style={{height: h * 10, position: 'absolute'}}>\n      <LoaderBase>\n        <AnimatedGradientBase width={w} height={h * 15}>\n          {Array.from({length: n}).map((_, i) => (\n            <Rect\n              key={i}\n              x={0}\n              y={yPositions[i]}\n              rx={4 * p}\n              ry={4 * p}\n              width={w - 4}\n              height={h * 2}\n            />\n          ))}\n        </AnimatedGradientBase>\n      </LoaderBase>\n    </View>\n  );\n};\n\nexport default TimetableDayLoader;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport moment from 'moment';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {p} from '../../scaling';\nimport {DeviceContext} from '../../context/Device';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\n\nconst TimetableEventModal: FC<{slot: TimetableSlot}> = ({slot}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const items: {icon: string; name: string}[] = useMemo(() => {\n    return [\n      {\n        icon: 'map-pin',\n        name: slot.room,\n      },\n      {\n        icon: 'align-justified',\n        name: slot.type,\n      },\n      {\n        icon: 'clock',\n        name:\n          moment(slot.start_time).format('HH:mm') +\n          ' - ' +\n          moment(slot.end_time).format('HH:mm') +\n          ' (' +\n          moment(slot.start_time).format('ll') +\n          ')',\n      },\n      {\n        icon: 'user',\n        name: slot.professor.surname + ' ' + slot.professor.name,\n      },\n    ];\n  }, [slot]);\n\n  return (\n    <ModalBase title={slot.course_name}>\n      {items.map((item, i) => (\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginTop: (i == 0 ? 0 : 8) * p,\n          }}>\n          <TablerIcon\n            name={item.icon}\n            size={16 * p}\n            color={dark ? colors.gray300 : colors.gray600}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n            {item.name}\n          </Text>\n        </View>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default TimetableEventModal;\n","import React, {useContext, useEffect, useState} from 'react';\nimport colors, {courseColors} from '../../colors';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {TouchableOpacity, View} from 'react-native';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableEventModal from '../modals/TimetableEventModal';\n\nconst TimetableEvent = ({\n  overlapGroup,\n  slot,\n  w,\n  h,\n  courseNames,\n  index,\n}: {\n  overlapGroup: TimetableSlot[];\n  slot: TimetableSlot;\n  w: number;\n  h: number;\n  courseNames: string[];\n  index: number;\n}) => {\n  const {setModal} = useContext(ModalContext);\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const textOpacity = useSharedValue(0);\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    opacity.value = 1;\n  }, []);\n\n  useEffect(() => {\n    offset.value = w;\n    if (w >= 60) {\n      setTimeout(() => {\n        textOpacity.value = 1;\n      }, 100);\n    }\n  }, [w]);\n\n  const animTextSectionStyle = useAnimatedStyle(() => {\n    return {opacity: withTiming(textOpacity.value, {duration: 500})};\n  });\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      width: withTiming(\n        overlapGroup.length > 0\n          ? offset.value / overlapGroup.length\n          : offset.value,\n        {duration: 250},\n      ),\n      left: withTiming(\n        overlapGroup.length > 0\n          ? index * (offset.value / overlapGroup.length)\n          : 0,\n        {duration: 250},\n      ),\n    };\n  });\n\n  return (\n    <Animated.View\n      onLayout={e => setWidth(e.nativeEvent.layout.width)}\n      style={[\n        {\n          overflow: 'hidden',\n          position: 'absolute',\n\n          top:\n            h +\n            (moment\n              .duration(\n                moment(slot.start_time).diff(\n                  moment(slot.start_time).set({\n                    h: 8,\n                    m: 0,\n                  }),\n                ),\n              )\n              .as('ms') /\n              (3600 * 1000)) *\n              h -\n            h / 2,\n\n          borderRadius: 4 * p,\n          backgroundColor:\n            courseColors[courseNames.findIndex(val => val == slot.course_name)],\n          height:\n            (moment.duration(slot.end_time - slot.start_time).as('ms') /\n              (3600 * 1000)) *\n            h,\n        },\n        animStyle,\n      ]}>\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          padding: 4 * p,\n        }}\n        onPress={() => {\n          setModal(<TimetableEventModal slot={slot} />);\n        }}>\n        {width >= 25 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <Text w={'r'} s={8 * p} c={colors.white} numberOfLines={2}>\n              {slot.course_name}\n            </Text>\n          </Animated.View>\n        ) : null}\n        {width >= 60 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <View\n              style={{\n                flexDirection: 'row',\n                marginTop: 8 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"map-pin\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.room}\n              </Text>\n            </View>\n            <View\n              style={{\n                opacity: opacity.value,\n                flexDirection: 'row',\n                marginTop: 4 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"list\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.type}\n              </Text>\n            </View>\n          </Animated.View>\n        ) : null}\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nexport default TimetableEvent;\n","import moment from 'moment';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {p} from '../../scaling';\nimport TimetableDayLoader from '../loaders/TimetableDayLoader';\nimport TimetableEvent from './TimetableEvent';\n\nconst TimetableDay = ({\n  fake = false,\n  day,\n  h,\n  courseNames,\n  config,\n  index = 0,\n}: {\n  fake?: boolean;\n  day: TimetableSlot[];\n  h: number;\n  courseNames: string[];\n  config: Configuration;\n  index?: number;\n}) => {\n  const [w, setW] = useState(0);\n\n  /**\n   * Array of slots sorted by priority\n   */\n  const sortedByPriority: TimetableSlot[] = useMemo(() => {\n    return [...day].sort(\n      (a, b) =>\n        config.timetablePriority.indexOf(b.course_name) -\n        config.timetablePriority.indexOf(a.course_name),\n    );\n  }, [config.timetablePriority, day]);\n\n  /**\n   * Array of arrays of overlapping events.\n   *\n   * @remarks\n   * Sub-array length equals number to divide width by.\n   * Show overlapping events in the order given by their sub-array index.\n   *\n   * @example\n   * [\"course a\", \"course b\", \"course c\"] means:\n   *\n   * <------------ WIDTH ------------->\n   * |----------|----------|----------|\n   * | course a | course b | course c |\n   * |----------|----------|----------|\n   */\n  const overlapping: TimetableSlot[][] = useMemo(() => {\n    if (config.timetableOverlap === 'priority') return []; // Only compute if splitting enabled\n    if (day.length === 0) return []; // Only compute when slots fetched\n\n    let _overlapping: TimetableSlot[][] = [];\n    // Go through slots and find overlaps\n    const start = moment(day[0].start_time).set({h: 8, m: 45});\n    for (let i = 0; i < 9; i++) {\n      start.add(90, 'm');\n      let _localOverlapping: TimetableSlot[] = [];\n      day.map(event => {\n        if (\n          event.start_time < start.toDate().getTime() &&\n          start.toDate().getTime() < event.end_time\n        ) {\n          _localOverlapping.push(event);\n        }\n      });\n      if (_localOverlapping.length > 1) _overlapping.push(_localOverlapping);\n    }\n    return _overlapping;\n  }, [day, config.timetableOverlap]);\n\n  /**\n   * Finds and returns overlap group of given slot\n   * @param slot The timetable slot\n   * @returns overlap group\n   */\n  const findOverlapGroup = (slot: TimetableSlot): TimetableSlot[] => {\n    let _group: TimetableSlot[] = [];\n    overlapping.forEach(group => {\n      if (group.includes(slot)) {\n        _group = group;\n        return;\n      }\n    });\n    return _group;\n  };\n\n  return (\n    <View\n      onLayout={e => {\n        setW(e.nativeEvent.layout.width);\n      }}\n      style={{\n        backgroundColor: colors.white,\n        flex: 1,\n        zIndex: 200,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        borderColor: colors.gray200,\n        marginHorizontal: 1 * p,\n      }}>\n      {fake ? (\n        <TimetableDayLoader w={w} h={h} />\n      ) : config.timetableOverlap === 'priority' ? (\n        // If priority enabled, show sorted by priority\n        sortedByPriority.map((slot, i) => {\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup: [], slot, w, h, courseNames, index: i}}\n            />\n          );\n        })\n      ) : (\n        // If priority not enabled\n        day.map((slot, i) => {\n          const overlapGroup = findOverlapGroup(slot);\n          const _index = overlapGroup.findIndex(_slot => slot === _slot);\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup, slot, w, h, courseNames, index: _index}}\n            />\n          );\n        })\n      )}\n    </View>\n  );\n};\n\nexport default TimetableDay;\n","import {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport TimetableDay from './TimetableDay';\nimport {Configuration} from '../../defaultConfig';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport {p} from '../../scaling';\n\nconst TimetableSlots = ({\n  loaded,\n  timetableDays,\n  layout,\n  selectedDay,\n}: {\n  loaded: boolean;\n  timetableDays: TimetableSlot[][];\n  layout: 'week' | 'day';\n  selectedDay: number;\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  const [courseNames, setCourseNames] = useState<string[]>(['', '', '']);\n\n  const days = useMemo<TimetableSlot[][]>(() => {\n    if (timetableDays.length === 1) return timetableDays;\n    return timetableDays.slice(1, 6);\n  }, [timetableDays]);\n\n  const getCourseNames = (): string[] => {\n    let _courseNames: string[] = [];\n    timetableDays.forEach(day => {\n      day.forEach(slot => {\n        if (!_courseNames.includes(slot.course_name)) {\n          _courseNames.push(slot.course_name);\n        }\n      });\n    });\n    return _courseNames.sort();\n  };\n\n  useEffect(() => {\n    setCourseNames(getCourseNames());\n  }, [days]);\n\n  /**\n   * When course names or slots change, if priority enabled, update the priority list\n   */\n  useEffect(() => {\n    if (!config.timetableOverlap || !config.timetablePriority) return;\n    let _list: string[] = [...config.timetablePriority];\n    let changed = false;\n    courseNames.forEach(courseName => {\n      if (\n        courseName.trim() !== '' &&\n        !config.timetablePriority.includes(courseName)\n      ) {\n        _list.push(courseName);\n        changed = true;\n      }\n    });\n    changed && dispatch(setConfig({...config, timetablePriority: _list}));\n  }, [days, courseNames, config, dispatch]);\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        flex: 1,\n        marginLeft: 32 * p,\n        marginRight: 16 * p,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n      }}>\n      {(layout === 'week' ? days : [days[selectedDay - 1]]).map(\n        (day, index) => (\n          <TimetableDay\n            fake={!loaded}\n            config={config}\n            key={index}\n            {...{day, h, index, courseNames}}\n          />\n        ),\n      )}\n    </View>\n  );\n};\n\nexport default TimetableSlots;\n","import moment, {Moment} from 'moment';\nimport React, {useEffect, useState} from 'react';\nimport {Dimensions, StyleSheet, View} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\n\nconst TimetableGrid = ({\n  showLine,\n  dark,\n}: {\n  showLine: boolean;\n  dark: boolean;\n}) => {\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  // Used to update red line position\n  const [currentTime, setCurrentTime] = useState<Moment>(moment());\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [updateTimeout, setUpdateTimeout] = useState<any>(null);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      if (updateTimeout) clearTimeout(updateTimeout);\n      setMounted(false);\n    };\n  }, []);\n\n  /**\n   * Update time every 10 seconds, which will ensure red line is always in correct position\n   */\n  useEffect(() => {\n    setTimeout(() => {\n      mounted && setCurrentTime(moment());\n    }, 10000);\n  }, [currentTime, mounted]);\n\n  const styles = StyleSheet.create({\n    padding: {\n      paddingLeft: 8 * p,\n      paddingRight: 16 * p,\n      paddingBottom: 16 * p,\n    },\n  });\n\n  return (\n    <>\n      <View\n        style={[\n          styles.padding,\n          {\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            alignItems: 'stretch',\n          },\n        ]}>\n        {Array.from({length: 14}).map((_, index) => (\n          <View\n            key={index}\n            style={{\n              width: '100%',\n              height: index == 0 ? h / 2 : h,\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'flex-end',\n            }}>\n            <Text\n              s={8 * p}\n              c={dark ? colors.gray200 : colors.gray700}\n              w=\"r\"\n              style={{\n                transform: [{translateY: 4 * p}],\n              }}>\n              {`${8 + index}:00`}\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                // width: '100%',\n                borderBottomWidth: 0.5 * p,\n                borderColor: dark ? colors.gray500 : colors.gray200,\n                marginLeft: 4 * p,\n\n                height: h,\n                flexDirection: 'row',\n                justifyContent: 'flex-start',\n                alignItems: 'flex-end',\n              }}\n            />\n          </View>\n        ))}\n      </View>\n      {showLine ? (\n        <View\n          style={[\n            styles.padding,\n            {\n              position: 'absolute',\n              left: 0,\n              right: 0,\n              zIndex: 300,\n            },\n          ]}>\n          <View\n            style={{\n              height: 0,\n              borderTopColor: colors.red,\n              borderBottomColor: colors.red,\n              backgroundColor: colors.red,\n              borderTopWidth: 0.5 * p,\n              borderBottomWidth: 0.5 * p,\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              transform: [\n                {\n                  translateY:\n                    h +\n                    (moment\n                      .duration(\n                        currentTime.diff(\n                          moment().set({\n                            h: 8,\n                            m: 0,\n                          }),\n                        ),\n                      )\n                      .as('ms') /\n                      (3600 * 1000)) *\n                      h -\n                    h / 2,\n                },\n              ],\n            }}>\n            <View\n              style={{\n                backgroundColor: colors.red,\n                width: 8 * p,\n                height: 8 * p,\n                borderRadius: 16 * p,\n              }}></View>\n          </View>\n        </View>\n      ) : null}\n    </>\n  );\n};\n\nexport default TimetableGrid;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nconst HorizontalIconSelector = ({\n  items,\n  label = '',\n  onValueChange,\n  defaultValue = items[0].value,\n  dark,\n}: {\n  items: {icon: string; value: string}[];\n  label?: string;\n  onValueChange: Function;\n  defaultValue?: string;\n  dark: boolean;\n}) => {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    onValueChange(value);\n  }, [value]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n      }}>\n      {label ? (\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginRight: 4 * p}}>\n          {label}\n        </Text>\n      ) : null}\n      <View\n        style={{\n          flexDirection: 'row',\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n          marginLeft: 4 * p,\n          borderRadius: 4 * p,\n        }}>\n        {items.map((item, i) => (\n          <PressableBase\n            onPress={() => {\n              setValue(item.value);\n            }}\n            key={item.value}\n            style={[\n              {\n                backgroundColor:\n                  item.value == value ? colors.accent300 : 'rgba(0,0,0,0)',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: 4 * p,\n              },\n              i === 0\n                ? {\n                    borderTopLeftRadius: 4 * p,\n                    borderBottomLeftRadius: 4 * p,\n                  }\n                : i === items.length - 1\n                ? {\n                    borderTopRightRadius: 4 * p,\n                    borderBottomRightRadius: 4 * p,\n                  }\n                : {},\n            ]}>\n            <TablerIcon\n              name={item.icon}\n              size={16 * p}\n              color={\n                item.value == value\n                  ? colors.gray50\n                  : dark\n                  ? colors.gray200\n                  : colors.gray700\n              }\n            />\n          </PressableBase>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default HorizontalIconSelector;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport DraggableFlatList, {\n  RenderItemParams,\n  ScaleDecorator,\n} from 'react-native-draggable-flatlist';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../colors';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst ListRank = ({\n  items,\n  callback,\n  disabled,\n  dark,\n}: {\n  items: Array<{label: string; value: string}>;\n  callback: (data: string[]) => void;\n  disabled: boolean;\n  dark: boolean;\n}) => {\n  const [data, setData] = useState(items);\n\n  useEffect(() => {\n    callback(data.map(item => item.label));\n  }, [data]);\n\n  const renderItem = ({\n    item,\n    index,\n    drag,\n  }: RenderItemParams<{label: string; value: string}>) => {\n    return (\n      <ScaleDecorator>\n        <TouchableOpacity\n          disabled={disabled}\n          onLongPress={drag}\n          onPressIn={drag}\n          onPress={drag}\n          style={{\n            paddingVertical: 4 * p,\n          }}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              marginLeft: 0 * p,\n              opacity: disabled ? 0.5 : 1,\n            }}>\n            <TablerIcon\n              name=\"grid-dots\"\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View style={{marginLeft: 8 * p}}>\n              <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n                {item.label}\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </ScaleDecorator>\n    );\n  };\n\n  return (\n    <GestureHandlerRootView>\n      <DraggableFlatList\n        onDragEnd={({data}) => setData(data)}\n        data={data}\n        keyExtractor={item => item.value}\n        renderItem={renderItem}\n      />\n    </GestureHandlerRootView>\n  );\n};\n\nexport default ListRank;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport ListRank from '../ListRank';\nimport SettingsItem, {SettingsItemProps} from '../../ui/SettingsItem';\nimport {DeviceContext} from '../../context/Device';\nimport ModalBase from './ModalBase';\nimport colors from '../../colors';\n\nconst TimetableOptionsModal = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const [showListRank, setShowListRank] = useState(false);\n\n  //  Ugly hack to make the modal actually show.\n  //  If I render the children elements immediately,\n  //  for some reason the whole modal won't render.\n  //  The problem seems to be caused by the draggable elements,\n  //  but for now this fix does the job.\n  useEffect(() => {\n    setTimeout(() => setShowListRank(true), 0);\n  }, []);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const rankItems = useMemo(() => {\n    return config.timetablePriority.map(item => {\n      return {label: item, value: item};\n    });\n  }, [config]);\n\n  const toggleOverlapMode = useCallback(() => {\n    const mode: Configuration['timetableOverlap'] =\n      config.timetableOverlap === 'split' ? 'priority' : 'split';\n    dispatch(setConfig({...config, timetableOverlap: mode}));\n  }, [config, dispatch]);\n\n  const timetableOptionsItems = useMemo<SettingsItemProps[]>(() => {\n    return [\n      {\n        name: t('timetablePriority'),\n        description: t('timetablePriorityDesc'),\n        icon: 'stack-2',\n        toggle: true,\n        toggleValue: config.timetableOverlap === 'priority',\n        settingsFunction: toggleOverlapMode,\n      },\n      {\n        name: t('timetablePriorityList'),\n        settingsFunction: () => {},\n        disabled: config.timetableOverlap !== 'priority',\n        children: (\n          <View>\n            <ListRank\n              dark={dark}\n              disabled={config.timetableOverlap !== 'priority'}\n              items={rankItems}\n              callback={data =>\n                dispatch(\n                  setConfig({\n                    ...config,\n                    timetablePriority: data.filter(d => d !== ''),\n                  }),\n                )\n              }\n            />\n          </View>\n        ),\n        paddingBottom: false,\n      },\n    ];\n  }, [config, dark, dispatch, rankItems, t, toggleOverlapMode]);\n\n  return (\n    <ModalBase title={t('timetableOptions')}>\n      <View>\n        {showListRank ? (\n          timetableOptionsItems.map(item => (\n            <SettingsItem key={item.name} {...item} />\n          ))\n        ) : (\n          <ActivityIndicator color={colors.accent300} />\n        )}\n      </View>\n    </ModalBase>\n  );\n};\n\nexport default TimetableOptionsModal;\n","import React, {useContext, useMemo} from 'react';\nimport {Platform, Pressable, View} from 'react-native';\nimport colors from '../../colors';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {useTranslation} from 'react-i18next';\nimport Toggles from '../../ui/HorizontalIconSelector';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Text from '../../ui/core/Text';\nimport {DeviceContext} from '../../context/Device';\nimport {p} from '../../scaling';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableOptionsModal from '../modals/TimetableOptionsModal';\n\nconst showDatePicker = (callback: (date: number | undefined) => any) => {\n  DateTimePickerAndroid.open({\n    mode: 'date',\n    value: new Date(),\n    onChange: date => callback(date.nativeEvent.timestamp),\n  });\n};\n\nconst TimetableHeader = ({\n  selectedDay = null,\n  timetableDays,\n  weekStartDate,\n  onLayoutChanged,\n  onDayChanged,\n  onWeekStartDateChanged,\n}: {\n  selectedDay: number | null;\n  timetableDays: TimetableSlot[][];\n  weekStartDate: Date | null;\n  onLayoutChanged: Function;\n  onDayChanged: Function;\n  onWeekStartDateChanged: Function;\n}) => {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const _onLayoutChanged = (value: string) => {\n    onLayoutChanged(value);\n  };\n\n  const _onDayChanged = (value: number) => {\n    onDayChanged(value);\n  };\n\n  const _onWeekStartDateChanged = (value: Date) => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(1, {duration: 250}),\n    );\n    onWeekStartDateChanged(value);\n  };\n\n  const opacity = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {opacity: opacity.value};\n  });\n\n  const headerTitle: string = useMemo(() => {\n    const weekStartMoment = moment(weekStartDate);\n    const weekEndMoment = moment(weekStartDate).add(4, 'day');\n    return weekStartDate\n      ? weekStartDate.getTime() == moment().startOf('w').toDate().getTime()\n        ? t('thisWeek')\n        : `${weekStartMoment.get('date')} ${\n            weekStartMoment.get('month') != weekEndMoment.get('month')\n              ? weekStartMoment.format('MMM ')\n              : ''\n          }${\n            weekStartMoment.get('year') != weekEndMoment.get('year')\n              ? weekStartMoment.format('YYYY ')\n              : ''\n          }- ${weekEndMoment.format('D MMM YYYY')}`\n      : t('thisWeek');\n  }, [weekStartDate, t]);\n\n  return (\n    <View style={{borderBottomWidth: 1 * p, borderBottomColor: colors.gray200}}>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        {Platform.OS === 'android' ? (\n          <Button\n            secondary\n            small\n            text={t('jumpToDate')}\n            icon=\"chevrons-right\"\n            onPress={() =>\n              showDatePicker(date => {\n                if (!date) return;\n                _onWeekStartDateChanged(new Date(date));\n              })\n            }\n          />\n        ) : (\n          <View />\n        )}\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <Toggles\n            defaultValue=\"week\"\n            onValueChange={(value: string) => {\n              _onLayoutChanged(value);\n            }}\n            label=\"Layout:\"\n            items={[\n              {icon: 'layout-rows', value: 'day'},\n              {icon: 'layout-columns', value: 'week'},\n            ]}\n            dark={dark}\n          />\n          <TouchableOpacity\n            style={{marginLeft: 24 * p}}\n            onPress={() => setModal(<TimetableOptionsModal />)}>\n            <TablerIcon\n              name=\"settings\"\n              size={20 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(\n              moment(weekStartDate).subtract(1, 'w').toDate(),\n            )\n          }>\n          <TablerIcon\n            name=\"arrow-left\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n        <Animated.View style={[animStyle]}>\n          <Text c={dark ? colors.gray100 : colors.gray800} s={12 * p} w=\"m\">\n            {headerTitle}\n          </Text>\n        </Animated.View>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(moment(weekStartDate).add(1, 'w').toDate())\n          }>\n          <TablerIcon\n            name=\"arrow-right\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n      </View>\n      <View\n        style={{\n          // ...styles.withHorizontalPadding,\n          marginLeft: 12,\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'space-around',\n          paddingBottom: 12,\n        }}>\n        {timetableDays.slice(1, 6).map((day, index) => (\n          <Pressable\n            onPress={() => {\n              _onDayChanged(index + 1);\n            }}\n            key={index}\n            style={{\n              opacity: weekStartDate ? 1 : 0,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              paddingHorizontal: 12,\n              paddingVertical: 4,\n              borderRadius: 4,\n              backgroundColor:\n                selectedDay == index + 1\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray700\n                  : colors.gray200,\n            }}>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').format('ddd')\n                : ''}\n            </Text>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              key={index}>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').date()\n                : ''}\n            </Text>\n          </Pressable>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default TimetableHeader;\n","import moment from 'moment';\nimport {getTimetable, TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, View} from 'react-native';\nimport {DeviceContext} from '../context/Device';\nimport TimetableSlots from '../components/timetable/TimetableSlots';\nimport TimetableGrid from '../components/timetable/TimetableGrid';\nimport TimetableHeader from '../components/timetable/TimetableHeader';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\n\nconst Timetable = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n\n  const [loaded, setLoaded] = useState(false);\n  const [weekStartDate, setWeekStartDate] = useState<Date | null>(null);\n\n  const [slots, setSlots] = useState<TimetableSlot[]>([]);\n\n  /**\n   * When slots change, update {@link timetableDays}\n   */\n  const timetableDays = useMemo(() => {\n    let _timetableDays: TimetableSlot[][] = Array.from({length: 7}, () => []);\n    slots.forEach(slot => {\n      _timetableDays[moment(slot.start_time).day()].push(slot);\n    });\n    return _timetableDays;\n  }, [slots]);\n\n  const [layout, setLayout] = useState<'day' | 'week'>('day');\n\n  const [mounted, setMounted] = useState(true);\n\n  const [selectedDay, setSelectedDay] = useState(1); // Today's day index. TODO display first day of week when week is not current\n\n  const [fetchTimer, setFetchTimer] = useState<any>(null);\n  const [doUpdate, setDoUpdate] = useState<boolean>(false); // Flip it to trigger effect\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: withTiming(opacity.value, {duration: 500}),\n      transform: [{translateX: offset.value}],\n    };\n  });\n\n  /**\n   * Controls the \"scrolling\" effect animation\n   * @param direction left or right\n   */\n  const controlTransition = (direction: 'l' | 'r') => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(0, {duration: 500}),\n      withTiming(1, {duration: 250}),\n    );\n    offset.value =\n      direction === 'l'\n        ? withSequence(\n            withTiming(32, {duration: 750}),\n            withTiming(-32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          )\n        : withSequence(\n            withTiming(-32, {duration: 750}),\n            withTiming(32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          );\n  };\n\n  /**\n   * Get slots and set {@link weekStartDate}\n   */\n  useEffect(() => {\n    (async () => {\n      if (!weekStartDate) controlTransition('r');\n      if (fetchTimer) clearTimeout(fetchTimer);\n      setFetchTimer(\n        setTimeout(async () => {\n          setLoaded(false);\n          let slots: TimetableSlot[] = [];\n          setSlots([]);\n          try {\n            slots = await getTimetable(device, weekStartDate ?? new Date());\n            setLoaded(true);\n          } catch (e) {\n            // console.log(e);\n          } finally {\n            if (!weekStartDate) {\n              const date = moment().startOf('isoWeek').toDate();\n              mounted && setWeekStartDate(date);\n            }\n            setSlots(slots);\n          }\n        }, 250),\n      );\n    })();\n    return () => {\n      clearTimeout(fetchTimer);\n      setMounted(false);\n    };\n  }, [doUpdate]);\n\n  /**\n   * Whether to show red line\n   */\n  const showLine: boolean = useMemo(() => {\n    return (\n      (layout === 'week' &&\n        weekStartDate?.getTime() ===\n          moment().startOf('isoWeek').toDate().getTime()) ||\n      (layout === 'day' &&\n        moment(weekStartDate)\n          .add(selectedDay - 1, 'days')\n          .toDate()\n          .getTime() === moment().startOf('day').toDate().getTime())\n    );\n  }, [weekStartDate, selectedDay, layout]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('timetable')} />\n      <View\n        style={{\n          flex: 1,\n          paddingTop: 24 * p,\n        }}>\n        <View style={{paddingHorizontal: 16 * p}}>\n          <TimetableHeader\n            selectedDay={layout === 'week' ? null : selectedDay}\n            onDayChanged={(value: number) => {\n              setSelectedDay(value);\n            }}\n            onLayoutChanged={(value: 'day' | 'week') => {\n              setLayout(value);\n            }}\n            weekStartDate={weekStartDate}\n            onWeekStartDateChanged={(value: Date) => {\n              if (weekStartDate && value.getTime() < weekStartDate.getTime()) {\n                controlTransition('l');\n              } else {\n                controlTransition('r');\n              }\n              setWeekStartDate(moment(value).startOf('isoWeek').toDate());\n              setDoUpdate(!doUpdate);\n            }}\n            timetableDays={timetableDays}\n          />\n        </View>\n        <ScrollView style={{flex: 1}}>\n          <Animated.View style={[animStyle, {flex: 1}]}>\n            <TimetableGrid showLine={showLine} dark={dark} />\n            <TimetableSlots\n              loaded={loaded}\n              timetableDays={timetableDays}\n              layout={layout}\n              selectedDay={selectedDay}\n            />\n          </Animated.View>\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Timetable;\n","import React, {ReactNode, useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport Svg, {Circle} from 'react-native-svg';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst ProgressCircle = ({\n  label, // Optional label to display instead of the value\n  value,\n  max,\n  radius,\n  strokeWidth = 4 * p,\n  fontSize,\n  backgroundColor,\n  dark,\n  children,\n}: {\n  label?: string | null;\n  value: number | string;\n  max: number;\n  radius: number;\n  strokeWidth?: number;\n  fontSize?: number;\n  backgroundColor?: Color;\n  dark: boolean;\n  children?: ReactNode;\n}) => {\n  const circ = 2 * Math.PI * radius;\n\n  const _value = useMemo(() => {\n    return value <= max ? value : max; // Avoid going over max value\n  }, [value, max]);\n\n  return (\n    <View style={{position: 'relative'}}>\n      <Svg\n        width={2 * (radius + strokeWidth)}\n        height={2 * (radius + strokeWidth)}>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={backgroundColor || 'transparent'}\n          stroke={dark ? colors.gray700 : colors.gray200}\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={'transparent'}\n          stroke={colors.accent300}\n          strokeDasharray={circ}\n          strokeDashoffset={\n            typeof _value === 'number'\n              ? ((100 - (100 * _value) / max) * circ) / 100\n              : 0\n          }\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n      </Svg>\n      <View\n        style={{\n          position: 'absolute',\n          width: 2 * (radius + strokeWidth),\n          height: 2 * (radius + strokeWidth),\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text\n          s={\n            fontSize || (label || typeof _value === 'string' ? 10 * p : 16 * p)\n          }\n          c={dark ? colors.gray100 : colors.gray800}\n          w=\"b\">\n          {label || _value}\n        </Text>\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default ProgressCircle;\n","import moment from 'moment';\nimport {PermanentMark} from 'open-polito-api/lib/courses';\nimport React, {useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useWindowDimensions, View} from 'react-native';\nimport LineChart, {\n  LineChartData,\n} from 'react-native-chart-kit/dist/line-chart/LineChart';\nimport colors from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {p} from '../../scaling';\nimport {DeviceSize} from '../../types';\nimport Text from '../../ui/core/Text';\n\nconst Progress = ({marks, dark}: {marks: PermanentMark[]; dark: boolean}) => {\n  const {t} = useTranslation();\n  const {width} = useWindowDimensions();\n  const {size} = useContext(DeviceContext);\n\n  const addedSpace = (size >= DeviceSize.lg ? 300 : 32) * p;\n  const chartWidth = width - addedSpace;\n\n  /**\n   * Marks sorted by date ascending and filtered to be at most 1 year ago\n   */\n  const sorted_marks = useMemo(() => {\n    return [\n      ...marks.filter(\n        mark =>\n          parseInt(mark.mark) &&\n          moment.duration(Date.now() - mark.date).asDays() <= 365,\n      ),\n    ].sort((mark1, mark2) => mark1.date - mark2.date);\n  }, [marks]);\n\n  /**\n   * Weighted averages over time\n   */\n  const avgs = useMemo(() => {\n    let _avgs = new Array<number>(sorted_marks.length);\n    let weights = 0; // Cumulative weight counter\n\n    for (let i = 0; i < sorted_marks.length; i++) {\n      if (i === 0) {\n        weights += sorted_marks[i].num_credits;\n        _avgs[i] = parseInt(sorted_marks[i].mark) || 0;\n      } else {\n        _avgs[i] =\n          (_avgs[i - 1] * weights +\n            (parseInt(sorted_marks[i].mark) || 0) *\n              sorted_marks[i].num_credits) /\n          (weights + sorted_marks[i].num_credits);\n        weights += sorted_marks[i].num_credits;\n      }\n    }\n\n    return _avgs;\n  }, [sorted_marks]);\n\n  /**\n   * Data for the chart\n   */\n  const data = useMemo<LineChartData>(\n    () => ({\n      labels: sorted_marks.map(mark => moment(mark.date).format('MMM D')),\n      datasets: [\n        {\n          data: avgs,\n          color: () => colors.accent300,\n          strokeWidth: 2 * p,\n        },\n      ],\n      legend: [t('weightedAverage')],\n    }),\n    [sorted_marks, avgs, t],\n  );\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      {sorted_marks.length === 0 ? (\n        <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n          You'll see your progress when you get at least 1 permament mark.\n        </Text>\n      ) : (\n        <LineChart\n          data={data}\n          width={chartWidth}\n          height={220}\n          yAxisInterval={1}\n          chartConfig={{\n            backgroundColor: '#e26a00',\n            backgroundGradientFrom: colors.gray900,\n            backgroundGradientTo: colors.gray700,\n            decimalPlaces: 2,\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n            style: {\n              borderRadius: 16,\n            },\n            propsForDots: {\n              r: '6',\n              strokeWidth: '2',\n              stroke: colors.accent300,\n            },\n          }}\n          style={{\n            borderRadius: 4 * p,\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Progress;\n","import {PermanentMark, ProvisionalMark} from 'open-polito-api/lib/courses';\nimport React, {useContext, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {DeviceContext} from '../context/Device';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport Section from '../ui/Section';\nimport NoContent from '../ui/NoContent';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport moment from 'moment';\nimport i18next from 'i18next';\nimport ProgressCircle from '../ui/ProgressCircle';\nimport Progress from '../components/exams/Progress';\nimport openURL from '../utils/openUrl';\nimport {GlyphName} from '../utils/glyph-map';\n\nconst tabs = ['overview', 'permanentMarks', 'provisionalMarks'];\n\nconst get_avg = (marks: PermanentMark[]) => {\n  const _marks = marks.filter(mark => !!parseInt(mark.mark || ''));\n\n  const total_credits = _marks.reduce((acc, mark) => {\n    return acc + mark.num_credits;\n  }, 0);\n\n  return parseFloat(\n    (\n      _marks.reduce((acc, mark) => {\n        return acc + parseInt(mark.mark) * mark.num_credits;\n      }, 0) / total_credits\n    ).toFixed(2),\n  );\n};\n\nconst Exams = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const {marks} = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const [tab, setTab] = useState<string>(tabs[0]);\n\n  const filteredMarks = useMemo<(PermanentMark | ProvisionalMark)[]>(() => {\n    if (tab == tabs[1]) return marks.permanent;\n    if (tab == tabs[2]) return marks.provisional;\n    return [];\n  }, [marks, tab]);\n\n  const avg = useMemo(() => get_avg(marks.permanent), [marks]);\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  return (\n    <Screen>\n      <Header title={t('exams')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n        onChange={idx => setTab(tabs[idx])}\n      />\n\n      <View style={styles.container}>\n        {tab === tabs[2] ? (\n          <View style={styles.paddingHorizontal}>\n            <TouchableOpacity\n              onPress={async () =>\n                await openURL('https://didattica.polito.it/img/RE_stati.jpg')\n              }\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 16 * p,\n              }}>\n              <TablerIcon\n                name=\"help\"\n                size={12 * p}\n                color={dark ? colors.gray200 : colors.gray700}\n                style={{marginRight: 8 * p}}\n              />\n              <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n                {t('statusCodeHelp')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : null}\n        {tab === tabs[0] ? (\n          <View style={styles.list}>\n            <AvgWidget avg={avg} dark={dark} />\n            <View\n              style={{\n                height: 1 * p,\n                backgroundColor: colors.gray500,\n                marginVertical: 24 * p,\n              }}\n            />\n            <Section title={t('progressOverTime')} dark={dark}>\n              <View>\n                <Progress marks={marks.permanent || []} dark={dark} />\n              </View>\n            </Section>\n          </View>\n        ) : (\n          <FlatList\n            contentContainerStyle={styles.list}\n            data={filteredMarks}\n            keyExtractor={item => item.date + item.name}\n            renderItem={({item}) => (\n              <MarkWidget\n                mark={\n                  tab == tabs[1]\n                    ? (item as PermanentMark)\n                    : (item as ProvisionalMark)\n                }\n                provisional={tab == tabs[2]}\n                dark={dark}\n              />\n            )}\n            ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n            ListEmptyComponent={<NoContent />}\n          />\n        )}\n      </View>\n    </Screen>\n  );\n};\n\nconst AvgWidget = ({avg, dark}: {avg: number; dark: boolean}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View style={{flexDirection: 'row', alignItems: 'center'}}>\n      <ProgressCircle\n        strokeWidth={8 * p}\n        radius={30 * p}\n        value={avg}\n        dark={dark}\n        max={30}\n      />\n      <View style={{marginLeft: 16 * p}}>\n        <Text\n          s={16 * p}\n          w=\"m\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginBottom: 8 * p}}>\n          {t('yourAverageMark')}*\n        </Text>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray300 : colors.gray600}>\n          *{t('yourAverageMarkNotice')}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst MarkWidget = ({\n  mark,\n  provisional,\n  dark,\n}: {\n  mark: PermanentMark | ProvisionalMark;\n  provisional: boolean;\n  dark: boolean;\n}) => {\n  const fields = useMemo(\n    () => getFields(mark, provisional, dark),\n    [mark, provisional, dark],\n  );\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        padding: 16 * p,\n        borderRadius: 4 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        alignItems: 'flex-start',\n      }}>\n      <View style={{flexDirection: 'column', flex: 1}}>\n        <View style={{flexDirection: 'row'}}>\n          {provisional ? (\n            <View\n              style={{\n                width: 16 * p,\n                height: 16 * p,\n                borderRadius: 16 * p,\n                marginRight: 8 * p,\n                backgroundColor: colors.gray200,\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}>\n              <Text s={10} w=\"b\" c={colors.gray900}>\n                {(mark as ProvisionalMark).status}\n              </Text>\n            </View>\n          ) : null}\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {mark.name}\n          </Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: provisional ? 'column' : 'row',\n            marginTop: 16 * p,\n          }}>\n          {fields}\n        </View>\n      </View>\n      {parseInt(mark.mark!) ? (\n        <ProgressCircle\n          radius={20 * p}\n          value={parseInt(mark.mark!)}\n          max={30}\n          dark={dark}>\n          {(mark.mark?.toLowerCase() === '30 e lode' ||\n            parseInt(mark.mark!) > 30) && (\n            <>\n              <Text\n                style={{marginTop: -4 * p}} // make the text fit better\n                s={8 * p}\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"b\">\n                LODE\n              </Text>\n            </>\n          )}\n        </ProgressCircle>\n      ) : (\n        <View\n          style={[\n            {\n              padding: 8 * p,\n              borderRadius: 4 * p,\n              backgroundColor: colors.accent300,\n            },\n            !mark.mark ||\n            (mark as ProvisionalMark).failed ||\n            (mark as ProvisionalMark).absent\n              ? {\n                  backgroundColor: colors.red,\n                }\n              : null,\n          ]}>\n          {(mark as ProvisionalMark).failed ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examFailed')}\n            </Text>\n          ) : null}\n          {(mark as ProvisionalMark).absent ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examAbsent')}\n            </Text>\n          ) : null}\n          {mark.mark ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {mark.mark}\n            </Text>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst getFields = (\n  mark: PermanentMark | ProvisionalMark,\n  provisional: boolean,\n  dark: boolean,\n) => {\n  const perm_fields = ['date', 'credits'];\n  const prov_fields = ['date', 'message'];\n\n  const fields = provisional ? prov_fields : perm_fields;\n\n  let icons: (GlyphName | null)[] = [];\n  let values: string[] = [];\n\n  fields.forEach(name => {\n    switch (name) {\n      case 'date':\n        icons.push('calendar-time');\n        values.push(moment(mark.date).format('ll'));\n        break;\n      case 'credits':\n        icons.push('north-star');\n        values.push(\n          (mark as PermanentMark).num_credits + ' ' + i18next.t('credits'),\n        );\n        break;\n      case 'message':\n        icons.push('message');\n        values.push((mark as ProvisionalMark).message || '');\n        break;\n      default:\n        icons.push(null);\n        values.push('');\n        break;\n    }\n  });\n\n  return fields.map((name, i) => (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          alignItems: name == 'message' ? 'flex-start' : 'center',\n          flex: 1,\n        },\n        provisional && i > 0 ? {marginTop: 8 * p} : {},\n      ]}>\n      {icons[i] !== null && (\n        <TablerIcon\n          name={icons[i]!}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n      )}\n      <Text\n        style={{marginRight: 8 * p}}\n        s={10 * p}\n        w=\"r\"\n        c={dark ? colors.gray200 : colors.gray700}>\n        {values[i] || ''}\n      </Text>\n    </View>\n  ));\n};\n\nexport default Exams;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {bookExamSession, ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {Device} from 'open-polito-api/lib/device';\nimport {DeviceContext} from '../../context/Device';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\n\nconst bookExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await bookExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamBookedToastMessage'\n              : 'examsExamBookingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsBookExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('confirmExamBooking')}\n      onConfirm={() => bookExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('confirmExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsBookExamModal;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport colors from '../../colors';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {Device} from 'open-polito-api/lib/device';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {cancelExamSession} from 'open-polito-api/lib/exam_sessions';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\nimport {DeviceContext} from '../../context/Device';\n\nconst cancelExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await cancelExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamCanceledToastMessage'\n              : 'examsExamCancelingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsCancelExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('cancelExamBooking')}\n      accentColor={colors.red}\n      icon=\"alert-triangle\"\n      onConfirm={() => cancelExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('cancelExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsCancelExamModal;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, RefreshControl, TouchableOpacity, View} from 'react-native';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport colors from '../colors';\nimport moment from 'moment';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {ExamsState, getExams} from '../store/examsSlice';\nimport {STATUS} from '../store/status';\nimport {DeviceContext} from '../context/Device';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport NoContent from '../ui/NoContent';\nimport ExamsBookExamModal from '../components/modals/ExamsBookExamModal';\nimport ExamsCancelExamModal from '../components/modals/ExamsCancelExamModal';\nimport {ModalContext} from '../context/ModalProvider';\nimport {getLanguageCode} from '../utils/l10n';\n\nconst isExamBooked = (examSession: ExamSession): boolean => {\n  return examSession.user_is_signed_up;\n};\n\nconst isExamAvailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id === 0;\n};\n\nconst isExamUnavailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id !== 0;\n};\n\nconst tabs = ['allExams', 'myBookings', 'availableToBook', 'unavailableExams'];\n\nexport default function ExamSessions() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {dark, device} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const {exams, getExamsStatus} = useSelector<RootState, ExamsState>(\n    state => state.exams,\n  );\n\n  const [tab, setTab] = useState(tabs[0]);\n\n  const [errorMsgLanguage, setErrorMsgLanguage] = useState('en');\n\n  // Initial setup\n  useEffect(() => {\n    if (\n      getExamsStatus.code === STATUS.IDLE ||\n      getExamsStatus.code === STATUS.ERROR\n    ) {\n      dispatch(getExams(device));\n    }\n    (async () => {\n      // Set language for error messages\n      switch (getLanguageCode()) {\n        case 'en':\n          setErrorMsgLanguage('en');\n          break;\n        case 'it':\n          setErrorMsgLanguage('it');\n          break;\n        default:\n          setErrorMsgLanguage('en');\n          break;\n      }\n    })();\n  }, [device, dispatch, getExamsStatus.code]);\n\n  /**\n   * Refresh exams\n   */\n  const refresh = useMemo(() => {\n    if (getExamsStatus.code !== STATUS.PENDING) {\n      dispatch(getExams(device));\n    }\n  }, [getExamsStatus, device, dispatch]);\n\n  // If tab or exams change, re-filter the exam sessions based on the active tab\n  const filteredSessions = useMemo(() => {\n    switch (tab) {\n      case tabs[0]:\n        return exams;\n      case tabs[1]:\n        return exams.filter(e => isExamBooked(e));\n      case tabs[2]:\n        return exams.filter(e => isExamAvailable(e));\n      case tabs[3]:\n        return exams.filter(e => isExamUnavailable(e));\n      default:\n        return [];\n    }\n  }, [tab, exams]);\n\n  const buildField = (type: string, e: ExamSession) => {\n    const icon =\n      type === 'date'\n        ? 'calendar-time'\n        : type === 'course'\n        ? 'grid-pattern'\n        : type === 'type'\n        ? 'writing'\n        : type === 'deadline'\n        ? 'alert-triangle'\n        : type === 'rooms'\n        ? 'map-pin'\n        : 'user-circle';\n    const text =\n      type === 'date'\n        ? `${moment(e.date).format('lll')} (${moment(e.date).fromNow()})`\n        : type === 'course'\n        ? e.course_id\n        : type === 'type'\n        ? e.type\n        : type === 'deadline'\n        ? `${t('bookingDeadline')}: ${moment(e.signup_deadline).format(\n            'lll',\n          )} (${moment(e.signup_deadline).fromNow()})`\n        : type === 'rooms'\n        ? e.rooms.join(', ')\n        : '(coming soon)';\n    return (\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n        <Text\n          numberOfLines={1}\n          style={{marginRight: 8 * p}}\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const examSessionCard = (examSession: ExamSession) => (\n    <View style={{flexDirection: 'row'}}>\n      <View\n        style={{\n          flexDirection: 'column',\n          flex: 1,\n          padding: 16 * p,\n          paddingRight: 8 * p,\n          paddingBottom: 8 * p,\n          borderTopLeftRadius: 4 * p,\n          borderBottomLeftRadius: 4 * p,\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n        }}>\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <TablerIcon\n            name={\n              examSession.user_is_signed_up\n                ? 'circle-check'\n                : examSession.error.id === 0\n                ? 'circle'\n                : 'circle-off'\n            }\n            color={\n              examSession.user_is_signed_up\n                ? colors.green\n                : examSession.error.id === 0\n                ? colors.accent200\n                : colors.red\n            }\n            size={24 * p}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {examSession.exam_name}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: 'column',\n            marginTop: 16 * p,\n          }}>\n          {['course', 'date', 'deadline', 'rooms'].map(field =>\n            buildField(field, examSession),\n          )}\n        </View>\n        {examSession.error.id !== 0 &&\n        (examSession.error.eng !== '' || examSession.error.ita !== '') ? (\n          <Text s={10 * p} w=\"r\" c={colors.red} style={{marginVertical: 8 * p}}>\n            {errorMsgLanguage === 'it'\n              ? examSession.error.ita\n              : examSession.error.eng}\n          </Text>\n        ) : null}\n      </View>\n      <View\n        style={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          borderTopRightRadius: 4 * p,\n          borderBottomRightRadius: 4 * p,\n          backgroundColor: dark ? colors.gray600 : colors.gray300,\n        }}>\n        {isExamAvailable(examSession) || isExamBooked(examSession) ? (\n          <TouchableOpacity\n            onPress={() =>\n              setModal(\n                isExamAvailable(examSession) ? (\n                  <ExamsBookExamModal examSession={examSession} />\n                ) : (\n                  <ExamsCancelExamModal examSession={examSession} />\n                ),\n              )\n            }>\n            <View\n              style={{\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 8 * p,\n              }}>\n              <View style={{marginBottom: 4 * p}}>\n                <TablerIcon\n                  name={\n                    isExamAvailable(examSession) ? 'circle-plus' : 'circle-x'\n                  }\n                  color={\n                    isExamAvailable(examSession) ? colors.accent300 : colors.red\n                  }\n                  size={20 * p}\n                />\n              </View>\n              <Text\n                s={10 * p}\n                w=\"m\"\n                c={\n                  isExamAvailable(examSession) ? colors.accent300 : colors.red\n                }>\n                {t(isExamAvailable(examSession) ? 'bookVerb' : 'cancel')}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    </View>\n  );\n\n  return (\n    <Screen>\n      <Header title={t('examSessions')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n        onChange={idx => setTab(tabs[idx])}\n      />\n      <FlatList\n        contentContainerStyle={{\n          paddingTop: 24 * p,\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        }}\n        data={filteredSessions}\n        keyExtractor={item => item.session_id + item.course_id + item.date}\n        renderItem={({item}) => examSessionCard(item)}\n        ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n        ListEmptyComponent={<NoContent />}\n        refreshing={getExamsStatus.code == STATUS.PENDING}\n        refreshControl={\n          <RefreshControl\n            refreshing={getExamsStatus.code == STATUS.PENDING}\n            onRefresh={refresh}\n          />\n        }\n      />\n    </Screen>\n  );\n}\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Maps = () => {\n  return <View></View>;\n};\n\nexport default Maps;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Classrooms = () => {\n  return <View></View>;\n};\n\nexport default Classrooms;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst People = () => {\n  return <View></View>;\n};\n\nexport default People;\n","import React, {useCallback, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport PressableCard from '../ui/core/PressableCard';\n\nexport default function Courses({navigation}) {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const gotoCourse = useCallback(\n    (course: CourseState) => {\n      navigation.navigate('Course', {\n        courseCode: course.basicInfo.code + course.basicInfo.name,\n      });\n    },\n    [navigation],\n  );\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('courses')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          {courses\n            .filter(course => course.isMain)\n            .map(mainCourse => (\n              <PressableCard\n                dark={dark}\n                onPress={() => gotoCourse(mainCourse)}\n                key={mainCourse.basicInfo.code + mainCourse.basicInfo.name}\n                title={mainCourse.basicInfo.name}\n              />\n            ))}\n          {courses.filter(course => !course.isMain).length > 0 ? (\n            <Section\n              dark={dark}\n              title={t('otherCourses')}\n              style={{marginTop: 8}}>\n              {courses\n                .filter(course => !course.isMain)\n                .map(secondaryCourse => (\n                  <PressableCard\n                    dark={dark}\n                    onPress={() => gotoCourse(secondaryCourse)}\n                    key={\n                      secondaryCourse.basicInfo.code +\n                      secondaryCourse.basicInfo.name\n                    }\n                    title={secondaryCourse.basicInfo.name}\n                  />\n                ))}\n            </Section>\n          ) : null}\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n}\n","import React, {FC, useEffect} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\n\ninterface CheckboxProps {\n  selected: boolean;\n  onChange: (value: boolean) => any;\n}\n\nconst Checkbox: FC<CheckboxProps> = ({selected, onChange}) => {\n  const offset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 20 * p * offset.value,\n    height: 20 * p * offset.value,\n    borderRadius: 4 * p,\n    backgroundColor: colors.accent300,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }));\n\n  /**\n   * Handle selection change\n   */\n  const handlePress = () => {\n    // Callback function\n    onChange(!selected);\n  };\n\n  /**\n   * Animate on change\n   */\n  useEffect(() => {\n    if (selected) {\n      offset.value = withTiming(1, {duration: 100});\n    } else {\n      offset.value = withTiming(0, {duration: 100});\n    }\n  }, [selected]);\n\n  return (\n    <PressableBase style={{padding: 4 * p}} onPress={handlePress}>\n      <View\n        style={{\n          width: 20 * p,\n          height: 20 * p,\n          backgroundColor: colors.gray700,\n          borderColor: colors.gray600,\n          borderWidth: 1 * p,\n          borderRadius: 4 * p,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Animated.View style={[animStyle]}>\n          <TablerIcon name=\"check\" size={12 * p} color={colors.gray50} />\n        </Animated.View>\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default Checkbox;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport {\n  deleteNotification,\n  markNotificationRead,\n  Notification,\n  NotificationType,\n} from 'open-polito-api/lib/notifications';\nimport {\n  ActivityIndicator,\n  BackHandler,\n  FlatList,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport store, {AppDispatch, RootState} from '../store/store';\nimport {\n  getNotificationList,\n  setNotifications,\n  UserState,\n} from '../store/userSlice';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport NotificationComponent from '../ui/Notification';\nimport NoContent from '../ui/NoContent';\nimport {STATUS} from '../store/status';\nimport PressableBase from '../ui/core/PressableBase';\nimport {CoursesState} from '../store/coursesSlice';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../colors';\nimport Checkbox from '../ui/core/Checkbox';\nimport {LongPressGestureHandler, State} from 'react-native-gesture-handler';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst _SelectableNotification = ({\n  dark,\n  n,\n  handlePress,\n  courseName,\n  selecting,\n  setSelecting,\n  selected,\n  onSelectionChange,\n}: {\n  dark: boolean;\n  n: Notification;\n  handlePress: (id: number) => any;\n  courseName: string;\n  selecting: boolean;\n  setSelecting: (selecting: boolean) => any;\n  selected: boolean;\n  onSelectionChange: (id: number, selected: boolean) => any;\n}) => {\n  const offset = useSharedValue(0);\n\n  const animStyleCheckbox = useAnimatedStyle(() => ({\n    width: 32 * p * offset.value,\n    transform: [\n      {\n        scale: offset.value,\n      },\n    ],\n    alignItems: 'flex-start',\n  }));\n\n  /**\n   * Show/hide checkbox\n   */\n  useEffect(() => {\n    offset.value = withTiming(selecting ? 1 : 0, {duration: 150});\n  }, [selecting]);\n\n  return (\n    <View style={{flex: 1}}>\n      <LongPressGestureHandler\n        onHandlerStateChange={({nativeEvent}) => {\n          if (nativeEvent.state === State.ACTIVE) {\n            if (!selecting) {\n              setSelecting(true);\n              onSelectionChange(n.id, true);\n            }\n          }\n        }}>\n        <Animated.View\n          style={{\n            marginBottom: 24 * p,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}>\n          <Animated.View style={[animStyleCheckbox]}>\n            <Checkbox\n              selected={selected}\n              onChange={sel => onSelectionChange(n.id, sel)}\n            />\n          </Animated.View>\n          <PressableBase\n            parentStyle={{flex: 1}}\n            onPress={() => handlePress(n.id)}>\n            <NotificationComponent\n              type={n.topic}\n              notification={n}\n              dark={dark}\n              read={n.is_read}\n              courseName={courseName}\n            />\n          </PressableBase>\n        </Animated.View>\n      </LongPressGestureHandler>\n    </View>\n  );\n};\n\nconst Notifications = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationTypes = [\n    {label: t('allF'), value: 'all'},\n    {label: t('readF'), value: 'read'},\n    {label: t('unreadF'), value: 'unread'},\n    {label: t('directAlerts'), value: 'direct'},\n    {label: t('courses'), value: 'course'},\n    {label: t('material'), value: 'material'},\n  ];\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  const {notifications, getNotificationsStatus} = useSelector<\n    RootState,\n    UserState\n  >(state => state.user);\n\n  const courses = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [refreshing, setRefreshing] = useState(false);\n\n  const refreshNotifications = () => {\n    setRefreshing(true);\n    dispatch(getNotificationList(device));\n  };\n\n  const getNotificationCourseName = (notification: Notification): string => {\n    return (\n      courses.courses.find(\n        course => course.basicInfo.id_incarico === (notification as any).course,\n      )?.basicInfo.name || ''\n    );\n  };\n\n  /**\n   * Set refreshing to false when done refreshing\n   */\n  useEffect(() => {\n    if (refreshing && getNotificationsStatus.code !== STATUS.PENDING) {\n      setRefreshing(false);\n    }\n  }, [notifications, refreshing, getNotificationsStatus.code, courses]);\n\n  /**\n   * Set notification as read.\n   * @param id The id of the notification\n   */\n  const handlePress = (id: number): void => {\n    // Find the notification index\n    const index = notifications.findIndex(n => n.id == id);\n\n    // Don't proceed if not found or if already read\n    if (index === -1) return;\n    if (notifications[index].is_read) return;\n\n    // Send read\n    (async () => {\n      await markNotificationRead(device, id);\n    })();\n\n    // Send updated array to store\n    let copy = {...notifications[index]};\n    copy.is_read = true;\n    store.dispatch(\n      setNotifications([\n        ...notifications.slice(0, index),\n        copy,\n        ...notifications.slice(index + 1),\n      ]),\n    );\n  };\n\n  const visible = useMemo<Notification[]>(() => {\n    switch (selectedCategory) {\n      case 'all':\n        return notifications;\n      case 'read':\n        return notifications.filter(n => n.is_read);\n      case 'unread':\n        return notifications.filter(n => !n.is_read);\n      case 'direct':\n        return notifications.filter(n => n.topic === NotificationType.DIRECT);\n      case 'course':\n        return notifications.filter(n => n.topic === NotificationType.NOTICE);\n      case 'material':\n        return notifications.filter(n => n.topic === NotificationType.MATERIAL);\n      default:\n        return [];\n    }\n  }, [notifications, selectedCategory]);\n\n  /**\n   * Whether we're in selection mode\n   */\n  const [selecting, setSelecting] = useState(false);\n  /**\n   * Selected notification ids in selection mode\n   */\n  const [selected, setSelected] = useState<number[]>([]);\n\n  const tabOffset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        scale: 0.75 + 0.25 * tabOffset.value,\n      },\n      {\n        translateY: 128 * p * (1 - tabOffset.value),\n      },\n    ],\n  }));\n\n  /**\n   * Show/hide bottom bar\n   */\n  useEffect(() => {\n    tabOffset.value = withTiming(selecting ? 1 : 0, {duration: 200});\n  }, [selecting]);\n\n  /**\n   * On exiting selection mode\n   */\n  useEffect(() => {\n    if (!selecting) setSelected([]);\n  }, [selecting]);\n\n  const handleSelectionChange = (id: number, sel: boolean) => {\n    if (sel) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter(s => s !== id));\n    }\n  };\n\n  /**\n   * Quit selection mode if no selected items\n   */\n  useEffect(() => {\n    if (selected.length === 0) {\n      setSelecting(false);\n    }\n  }, [selected]);\n\n  /**\n   * When in selection mode, if the hardware back button is pressed,\n   * exit selection mode instead of going back\n   */\n  const onHardwareBackButtonPressed = useCallback(() => {\n    if (selecting) {\n      setSelecting(false);\n      return true;\n    }\n    setSelected([]);\n    return false;\n  }, [selecting]);\n\n  /**\n   * When changing tab, exit selection mode\n   */\n  useEffect(() => {\n    setSelected([]);\n    setSelecting(false);\n  }, [selectedCategory]);\n\n  /**\n   * Setup & Cleanup\n   */\n  useEffect(() => {\n    BackHandler.addEventListener(\n      'hardwareBackPress',\n      onHardwareBackButtonPressed,\n    );\n    return () => {\n      setSelecting(false);\n      setSelected([]);\n      BackHandler.removeEventListener(\n        'hardwareBackPress',\n        onHardwareBackButtonPressed,\n      );\n    };\n  }, []);\n\n  const [deleting, setDeleting] = useState(false);\n\n  const deleteSelected = () => {\n    (async () => {\n      setDeleting(true);\n      for (let i = 0; i < selected.length; i++) {\n        await deleteNotification(device, selected[i]);\n      }\n      setTimeout(() => {\n        setDeleting(false);\n        setSelecting(false);\n      }, 500);\n      refreshNotifications();\n    })();\n  };\n\n  const areAllSelected = () => {\n    let allSelected = true;\n    for (let i = 0; i < visible.length; i++) {\n      if (!selected.includes(visible[i].id)) {\n        allSelected = false;\n        break;\n      }\n    }\n    return allSelected;\n  };\n\n  const selectionOptions = [\n    {\n      icon: areAllSelected() ? 'circle-minus' : 'circle-plus',\n      value: 'selectAll',\n      label: areAllSelected() ? t('deselectAll') : t('selectAll'),\n      action: () =>\n        areAllSelected()\n          ? setSelected([])\n          : setSelected(visible.map(n => n.id)),\n    },\n    {\n      icon: deleting ? 'loading' : 'trash',\n      value: 'delete',\n      label: t('delete'),\n      action: deleteSelected,\n    },\n    {\n      icon: 'checks',\n      value: 'markAsRead',\n      label: t('markAsRead'),\n      action: () => {\n        selected.forEach(id => handlePress(id));\n        setSelecting(false);\n      },\n    },\n  ];\n\n  return (\n    <Screen>\n      <Animated.View\n        style={[\n          animStyle,\n          {\n            position: 'absolute',\n            bottom: 16 * p,\n            left: 0,\n            right: 0,\n            zIndex: 1000,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            paddingVertical: 8 * p,\n            marginHorizontal: 16 * p,\n            borderRadius: 16 * p,\n            borderWidth: 1 * p,\n            borderColor: dark ? colors.gray600 : colors.gray300,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n          },\n        ]}>\n        {selectionOptions.map(opt => (\n          <View\n            style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n            <PressableBase\n              disabled={opt.icon === 'loading'}\n              style={{justifyContent: 'center', alignItems: 'center'}}\n              onPress={opt.action}>\n              {opt.icon === 'loading' ? (\n                <ActivityIndicator color={colors.accent300} size={20 * p} />\n              ) : (\n                <TablerIcon\n                  name={opt.icon}\n                  color={colors.accent300}\n                  size={20 * p}\n                />\n              )}\n              <View style={{height: 4 * p}} />\n              <Text c={colors.accent300} w=\"r\" s={10 * p}>\n                {opt.label}\n              </Text>\n            </PressableBase>\n          </View>\n        ))}\n      </Animated.View>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('notifications')} />\n      <Tabs\n        adjusted\n        dark={dark}\n        items={notificationTypes}\n        onChange={(index: number) =>\n          setSelectedCategory(notificationTypes[index].value)\n        }\n      />\n      <View style={styles.container}>\n        <FlatList\n          contentContainerStyle={styles.paddingHorizontal}\n          data={visible}\n          keyExtractor={item => item.id.toString()}\n          ListEmptyComponent={<NoContent />}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={refreshNotifications}\n            />\n          }\n          initialNumToRender={10}\n          maxToRenderPerBatch={10}\n          renderItem={n => (\n            <_SelectableNotification\n              dark={dark}\n              n={n.item}\n              handlePress={id => handlePress(id)}\n              courseName={getNotificationCourseName(n.item)}\n              selecting={selecting}\n              setSelecting={sel => setSelecting(sel)}\n              selected={selected.includes(n.item.id)}\n              onSelectionChange={(id, sel) => handleSelectionChange(id, sel)}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  );\n};\n\nexport default Notifications;\n","import {NativeModules} from 'react-native';\nimport {genericPlatform} from './platform';\nconst {UpdaterModule: _UpdaterModule, NotificationModule: _NotificationModule} =\n  NativeModules;\n\n/**\n * Gets the native function from the module.\n * @param module\n * @param name\n * @returns\n *\n * @throws Error if the platform does not support native modules\n */\nconst getNativeFunction = <T>(module: any, name: string): (() => T) => {\n  if (genericPlatform !== 'mobile') {\n    return () => {\n      throw new Error(\n        `Native function ${name} is not available on ${genericPlatform}`,\n      );\n    };\n  }\n\n  return module[name] || ((() => {}) as () => T);\n};\n\n/**\n * This native module handles installation of updates.\n *\n * Warning: Android only\n */\nexport namespace UpdaterModule {\n  /**\n   * Installs the APK\n   */\n  export const installUpdate = getNativeFunction<void>(\n    _UpdaterModule,\n    'installUpdate',\n  );\n}\n\n/**\n * Handles notifications from the native side.\n */\nexport namespace NotificationModule {\n  /**\n   * Gets the FCM token.\n   *\n   * Warning: Android only\n   */\n  export const getToken = getNativeFunction<Promise<string>>(\n    _NotificationModule,\n    'getToken',\n  );\n}\n","import React, {useCallback, useContext, useEffect} from 'react';\nimport Home from '../screens/Home';\nimport Email from '../screens/Email';\nimport Settings from '../screens/Settings';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Material from '../screens/Material';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  getRecentMaterial,\n  loadCourse,\n  loadCoursesData,\n  setLoadExtendedCourseInfoStatus,\n} from '../store/coursesSlice';\nimport {DeviceContext} from '../context/Device';\nimport {\n  getNotificationList,\n  getUnreadEmailCount,\n  UserState,\n} from '../store/userSlice';\nimport {registerPushNotifications} from 'open-polito-api/lib/notifications';\nimport {Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport {pendingStatus, STATUS, successStatus} from '../store/status';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport Drawer from '../ui/Drawer';\nimport {login, SessionState} from '../store/sessionSlice';\nimport Bookings from '../screens/Bookings';\nimport Timetable from '../screens/Timetable';\nimport Exams from '../screens/Exams';\nimport ExamSessions from '../screens/ExamSessions';\nimport Maps from '../screens/Maps';\nimport Classrooms from '../screens/Classrooms';\nimport People from '../screens/People';\nimport Courses from '../screens/Courses';\nimport Notifications from '../screens/Notifications';\nimport {DrawerContentComponentProps} from '@react-navigation/drawer';\nimport {DeviceSize} from '../types';\nimport {NotificationModule} from '../utils/native-modules';\n\nexport type DrawerStackParamList = {\n  Home: undefined;\n  Material: undefined;\n  Email: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n  ExamSessions: undefined;\n  Timetable: undefined;\n  Exams: undefined;\n  Bookings: undefined;\n  Courses: undefined;\n  Maps: undefined;\n  People: undefined;\n  Classrooms: undefined;\n};\n\nconst DrawerStack = createDrawerNavigator<DrawerStackParamList>();\n\nexport default function HomeRouter() {\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark, device, size} = useContext(DeviceContext);\n\n  const {getNotificationsStatus} = useSelector<RootState, UserState>(\n    state => state.user,\n  );\n\n  const {loginStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  const {courses, getRecentMaterialStatus, loadCoursesStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  /**\n   * Login with token\n   */\n  useEffect(() => {\n    if (loginStatus.code === STATUS.IDLE) {\n      dispatch(login({method: 'token', device}));\n    }\n  }, [loginStatus, device, dispatch]);\n\n  /**\n   * Whenever notifications status is set to IDLE,\n   * load them again\n   */\n  useEffect(() => {\n    if (\n      getNotificationsStatus.code !== STATUS.IDLE ||\n      loginStatus.code !== STATUS.SUCCESS\n    ) {\n      return;\n    }\n    dispatch(getNotificationList(device));\n  }, [getNotificationsStatus, loginStatus]);\n\n  /**\n   * Load everything else only after login successful\n   */\n  useEffect(() => {\n    if (loginStatus.code !== STATUS.SUCCESS) {\n      return;\n    }\n    dispatch(loadCoursesData(device));\n    dispatch(getUnreadEmailCount(device));\n\n    /**\n     * After user successfully logged in, register FCM notifications\n     * with current messaging token.\n     * TODO iOS support.\n     */\n    (async () => {\n      if (Platform.OS === 'android' && Config.VARIANT !== 'debug') {\n        const FCMToken = await NotificationModule.getToken();\n        await registerPushNotifications(device, FCMToken);\n      }\n    })();\n  }, [loginStatus]);\n\n  /**\n   * Load full course data when basic data loaded\n   * TODO change when persistence implemented\n   */\n  useEffect(() => {\n    (async () => {\n      if (loadCoursesStatus.code !== STATUS.SUCCESS) {\n        return; // Cancel if basic data not loaded\n      }\n      dispatch(setLoadExtendedCourseInfoStatus(pendingStatus())); // Pending\n      courses.forEach(course => {\n        if (course.status.code === STATUS.IDLE) {\n          dispatch(loadCourse({basicCourseInfo: course.basicInfo, device}));\n        }\n      });\n    })();\n  }, [loadCoursesStatus]);\n\n  /**\n   * When all courses fully loaded, get recent material\n   */\n  useEffect(() => {\n    if (\n      getRecentMaterialStatus.code !== STATUS.IDLE ||\n      loadCoursesStatus.code !== STATUS.SUCCESS\n    ) {\n      return; // Cancel if already computed/computing or basic data not even loaded\n    }\n    let allLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code !== STATUS.SUCCESS) {\n        allLoaded = false;\n      }\n    });\n    if (allLoaded) {\n      dispatch(setLoadExtendedCourseInfoStatus(successStatus())); // Success\n      dispatch(getRecentMaterial());\n    }\n  }, [courses, getRecentMaterialStatus]);\n\n  const getDrawerComponent = useCallback(\n    (props: DrawerContentComponentProps) => <Drawer dark={dark} {...props} />,\n    [dark],\n  );\n\n  return (\n    <DrawerStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        drawerType: size >= DeviceSize.lg ? 'permanent' : 'front',\n      }}\n      useLegacyImplementation\n      drawerContent={props => getDrawerComponent(props)}>\n      <DrawerStack.Screen name=\"Home\" component={Home} />\n      <DrawerStack.Screen name=\"Email\" component={Email} />\n      <DrawerStack.Screen name=\"Notifications\" component={Notifications} />\n      <DrawerStack.Screen name=\"Settings\" component={Settings} />\n      <DrawerStack.Screen name=\"Courses\" component={Courses} />\n      <DrawerStack.Screen name=\"Material\" component={Material} />\n      <DrawerStack.Screen name=\"Bookings\" component={Bookings} />\n      <DrawerStack.Screen name=\"Timetable\" component={Timetable} />\n      <DrawerStack.Screen name=\"Exams\" component={Exams} />\n      <DrawerStack.Screen name=\"ExamSessions\" component={ExamSessions} />\n      <DrawerStack.Screen name=\"Maps\" component={Maps} />\n      <DrawerStack.Screen name=\"Classrooms\" component={Classrooms} />\n      <DrawerStack.Screen name=\"People\" component={People} />\n    </DrawerStack.Navigator>\n  );\n}\n","import React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport Course from '../screens/Course';\nimport Search from '../screens/Search';\nimport Video from '../screens/Video';\nimport HomeRouter from './HomeRouter';\n\nexport type AppStackParamList = {\n  HomeRouter: undefined;\n  Search: undefined;\n  Course: undefined;\n  Video: undefined;\n};\n\nconst AppStack = createNativeStackNavigator<AppStackParamList>();\n\nconst AppStackNavigator = () => {\n  return (\n    <NavigationContainer>\n      <AppStack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}>\n        <AppStack.Screen name=\"HomeRouter\" component={HomeRouter} />\n        <AppStack.Screen name=\"Search\" component={Search} />\n        <AppStack.Screen name=\"Course\" component={Course} />\n        <AppStack.Screen name=\"Video\" component={Video} />\n      </AppStack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppStackNavigator;\n","import React, {\n  ReactNode,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {Platform, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\n\nimport {useSelector} from 'react-redux';\nimport {SessionState} from '../store/sessionSlice';\nimport {Configuration} from '../defaultConfig';\nimport {AUTH_STATUS} from '../store/status';\nimport {RootState} from '../store/store';\nimport {\n  checkForUpdates,\n  ReleaseJsonEntry,\n  updateCleanup,\n} from '../utils/updater';\nimport {ModalContext} from '../context/ModalProvider';\nimport BaseActionConfirmModal from '../components/modals/BaseActionConfirmModal';\nimport Text from '../ui/core/Text';\nimport {p} from '../scaling';\nimport {DeviceContext} from '../context/Device';\nimport {getLocales} from 'react-native-localize';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport Updater from '../screens/Updater';\nimport AppStackNavigator from './AppStackNavigator';\nimport {getLanguageCode, setMomentLocale} from '../utils/l10n';\nimport {genericPlatform} from '../utils/platform';\nimport HTMLRenderEngineProvider from '../context/HTMLRenderEngineProvider';\nimport openURL from '../utils/openUrl';\nimport {_globalTauri} from '../utils/tauri-wrap';\n\n/**\n * Types for React Navigation\n */\nexport type AuthStackParamList = {\n  Login: undefined;\n};\n\nexport type UpdaterState = {\n  checked: boolean;\n  acceptedUpdate: boolean;\n  releaseData?: ReleaseJsonEntry;\n};\n\n/**\n * Main routing component. Manages login and access to {@link AuthStack} and {@link AppStack}.\n */\nexport default function Router() {\n  const {t} = useTranslation();\n  const {setModal} = useContext(ModalContext);\n  const {dark} = useContext(DeviceContext);\n\n  // Setup moment locale.\n  // WARNING: Moment shouldn't be called by Router's parent components!\n  // Reason: Initial load time will be slower for new users on web\n  useEffect(() => {\n    setMomentLocale(getLanguageCode());\n  }, []);\n\n  // Update checking-related stuff\n  const [updaterState, setUpdaterState] = useState<UpdaterState>({\n    checked: false,\n    acceptedUpdate: false,\n  });\n\n  /**\n   * Check for updates and cleanup\n   */\n  useEffect(() => {\n    if (!updaterState.checked) {\n      checkForUpdates().then(data =>\n        setUpdaterState(prev => ({...prev, releaseData: data, checked: true})),\n      );\n    }\n    updateCleanup();\n  }, [updaterState.checked]);\n\n  /**\n   * If on desktop, redirect to download page when update is accepted\n   */\n  useEffect(() => {\n    (async () => {\n      if (updaterState.acceptedUpdate && genericPlatform === 'desktop') {\n        const {exit} = await _globalTauri.process;\n        await openURL(\n          'https://github.com/open-polito/open-polito/releases/latest',\n        );\n        exit(0);\n      }\n    })();\n  }, [updaterState.acceptedUpdate]);\n\n  // Show modal if update available\n  useEffect(() => {\n    if (updaterState.releaseData) {\n      const locale = getLocales()[0].languageCode;\n      let notes = updaterState.releaseData.notes.find(\n        n => n.language === locale,\n      );\n\n      setModal(\n        <BaseActionConfirmModal\n          title={t('newUpdateModalTitle')}\n          icon=\"download\"\n          accentColor={'#2dba2a'}\n          onConfirm={() =>\n            setUpdaterState(prev => ({\n              ...prev,\n              acceptedUpdate: true,\n            }))\n          }>\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n            {t('newUpdateModalText') + '\\n\\n' + t('newUpdateModalNotes') + '\\n'}\n          </Text>\n          {updaterState.releaseData.format === 'text'\n            ? (notes?.content || []).map(note => (\n                <Text\n                  s={12 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}>\n                  {`  • ${note}`}\n                </Text>\n              ))\n            : (notes?.content || []).map(note => (\n                <RenderHTMLSource source={{html: note}} />\n              ))}\n        </BaseActionConfirmModal>,\n      );\n    }\n  }, [updaterState.releaseData, dark, setModal, t]);\n\n  const {authStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  // Logging-related stuff\n  const {logging} = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [message, setMessage] = useState<ReactNode>(null);\n\n  // If loggingEnabled changes, set whether to show top message\n  useEffect(() => {\n    logging\n      ? setMessage(buildMessage({text: t('Logging enabled'), type: 'warn'}))\n      : setMessage(null);\n  }, [logging, t]);\n\n  // Returns message component\n  const buildMessage = ({text = '', type = 'warn'}) => {\n    return (\n      <View\n        style={{\n          backgroundColor: type == 'warn' ? colors.orange : colors.black,\n          paddingVertical: 4,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"m\" c={colors.white}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const children = useMemo(\n    () => (\n      <>\n        {message}\n        {updaterState.acceptedUpdate && Platform.OS === 'android' ? (\n          <Updater releaseData={updaterState.releaseData!} />\n        ) : authStatus !== AUTH_STATUS.NOT_VALID ? (\n          <AppStackNavigator />\n        ) : null}\n      </>\n    ),\n    [authStatus, message, updaterState],\n  );\n\n  /**\n   * If on web, {@link HTMLRenderEngineProvider} has not been created\n   * in the parent App component. We need to insert it now.\n   */\n  return genericPlatform === 'web' ? (\n    <HTMLRenderEngineProvider>{children}</HTMLRenderEngineProvider>\n  ) : (\n    children\n  );\n}\n"],"sourceRoot":""}