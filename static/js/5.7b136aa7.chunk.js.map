{"version":3,"sources":["src/utils/Logger.ts","node_modules/moment/locale sync /^/.//.*$","src/context/HTMLRenderEngineProvider.tsx","src/utils/updater.common.ts","src/utils/updater.web.ts","src/components/modals/ModalBase.tsx","src/components/modals/BaseActionConfirmModal.tsx","src/screens/Updater.web.tsx","src/ui/Filters.tsx","src/ui/NoContent.tsx","src/ui/VideoCard.tsx","src/ui/CourseVideos.tsx","src/styles.ts","src/components/AnimatedLiveCircle.tsx","src/components/widgets/WidgetBase.tsx","src/components/widgets/LiveWidget.tsx","src/ui/Section.tsx","src/utils/getFileIcon.tsx","src/ui/DirectoryItem.tsx","src/utils/html.ts","src/ui/Notification.tsx","src/ui/CourseOverview.tsx","src/utils/material.ts","src/ui/DirectoryItemRecursive.tsx","src/ui/MaterialExplorer.tsx","src/ui/CourseAlerts.tsx","src/ui/core/BadgeContainer.tsx","src/ui/Header.tsx","src/ui/Tabs.tsx","src/screens/Course.tsx","src/components/modals/ListSelectorModal.tsx","src/screens/Search.tsx","src/ui/VideoPlayer.web.tsx","src/screens/Video.tsx","src/screens/Home.tsx","src/screens/Email.tsx","src/ui/SettingsItem.tsx","src/components/modals/SettingsEnableLoggingModal.tsx","src/screens/Settings.tsx","src/screens/Material.tsx","src/sections.ts","src/ui/Drawer.tsx","src/ui/core/PressableCard.tsx","src/screens/Bookings.tsx","src/components/loaders/AnimatedGradientBase.web.tsx","src/components/loaders/LoaderBase.tsx","src/components/loaders/TimetableDayLoader.tsx","src/components/modals/TimetableEventModal.tsx","src/components/timetable/TimetableEvent.tsx","src/components/timetable/TimetableDay.tsx","src/components/timetable/TimetableSlots.tsx","src/components/timetable/TimetableGrid.tsx","src/ui/HorizontalIconSelector.tsx","src/components/ListRank.tsx","src/components/modals/TimetableOptionsModal.tsx","src/components/timetable/TimetableHeader.tsx","src/screens/Timetable.tsx","src/ui/ProgressCircle.tsx","src/components/exams/Progress.tsx","src/screens/Exams.tsx","src/components/modals/ExamsBookExamModal.tsx","src/components/modals/ExamsCancelExamModal.tsx","src/screens/ExamSessions.tsx","src/screens/Maps.tsx","src/screens/Classrooms.tsx","src/screens/People.tsx","src/screens/Courses.tsx","src/ui/core/Checkbox.tsx","src/screens/Notifications.tsx","src/routes/HomeRouter.tsx","src/routes/AppStackNavigator.tsx","src/routes/Router.tsx"],"names":["Logger","entry","appendFile","logFilePath","JSON","stringify","catch","err","console","log","hasLoggedBasicDeviceInfo","type","appBuildNumber","DeviceInfo","getBuildNumber","appBuildVariant","Config","VARIANT","appVersion","version","appVersionBinary","getVersion","osApiLevel","getApiLevelSync","osName","getSystemName","getBaseOsSync","osVersion","getSystemVersion","theme","store","getState","session","config","writeToFile","logBasicDeviceInfo","parseInt","ENABLE_DEBUG_OPTIONS","endpoint","includes","logRequest","error","logsDirectoryPath","getDocumentsPath","moment","format","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HTMLRenderEngineProvider","children","dark","useContext","DeviceContext","color","useMemo","colors","gray200","undefined","tagsStyles","p","marginVertical","isGitHubOnline","fetch","status","fetchReleaseJson","json","checkForUpdates","tag","headers","Accept","Platform","OS","from","find","r","versionCode","updateCleanup","ModalBase","title","actions","dismissable","onDismiss","icon","accentColor","size","ModalContext","visible","hideModal","useState","internalVisible","setInternalVisible","dismiss","useCallback","setTimeout","offset","useSharedValue","animStyle","useAnimatedStyle","backgroundColor","value","opacity","transform","scale","useEffect","withTiming","duration","Modal","transparent","animationType","statusBarTranslucent","onRequestClose","View","style","flex","TouchableOpacity","activeOpacity","onPress","alignItems","justifyContent","width","DeviceSize","lg","maxHeight","gray700","borderRadius","marginHorizontal","ScrollView","paddingVertical","paddingHorizontal","flexDirection","name","Text","s","w","c","gray100","gray800","marginTop","paddingBottom","action","i","marginLeft","Button","accent300","secondary","text","label","onSelect","then","BaseActionConfirmModal","onConfirm","onCancel","customLabels","t","useTranslation","cancel","confirm","Updater","Filters","items","onChange","length","selected","setSelected","item","borderWidth","borderColor","marginRight","NoContent","VideoCard","setWidth","hours","minsString","res","Math","ceil","floor","toString","lengthString","PressableBase","onLayout","nativeEvent","layout","android_ripple","lightGray","height","Image","source","uri","cover_url","resizeMode","position","right","bottom","padding","numberOfLines","date","CourseVideosHeader","courseData","onYearChange","extendedInfo","vc_recordings","sort","a","b","key","y","CourseVideos","courseId","refreshControl","navigation","useNavigation","selectedYear","setSelectedYear","useSelector","state","courses","course","basicInfo","videos","current","FlatList","data","ListEmptyComponent","ListHeaderComponent","renderItem","navigate","video","styles","StyleSheet","create","blackText","black","whiteText","white","grayText","gray","textRegular","fontFamily","textMedium","textBold","textExtraSmall","fontSize","textSmall","textNormal","textMediumSize","textLarge","textExtraLarge","textTitleLarge","withHorizontalPadding","withRoundedBorder","safePaddingTop","paddingTop","container","alignContent","paddingFromHeader","titleBar","tabNavigator","tabBarActiveTintColor","elevated","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","elevatedSmooth","border","AnimatedLiveCircle","coeff","useRef","Animated","Value","loop","timing","toValue","useNativeDriver","start","subtract","left","top","WidgetBase","compact","withButton","withPadding","fullHeight","Pressable","LiveWidget","liveClass","courseName","device","mounted","setMounted","setTime","intervalID","calculateTime","utc","Date","now","diff","setInterval","clearInterval","openURL","getLessonURL","url","LinearGradient","x","end","Section","FILE_TYPES","colorLight","extensions","gradient1","red","orange","green","sizes","downloadFile","getDownloadURL","DirectoryItem","relativeDate","sizeLabel","_size","index","min","log10","toFixed","iconComponent","filename","ext","split","pop","toLowerCase","gray500","getFileIcon","gray300","creation_date","fromNow","gray600","htmlTags","isCourseAlert","n","topic","NotificationComponent","notification","read","NotificationType","TEST","DIRECT","NOTICE","MATERIAL","input","decode","replace","body","dateString","time","course_name","html","CourseOverview","tree","changeTab","materialTree","material","buildField","marginBottom","fields","professor","surname","num_credits","degree_year","year_period","STATUS","PENDING","ActivityIndicator","slice","field","live_lessons","meeting_id","getMaterialList","flatMap","concat","filter","file","notices","Notification","course_code","DirectoryItemRecursive","opened","setOpened","MaterialExplorer","CourseAlerts","alerts","_styles","initialNumToRender","keyExtractor","alert","HEADER_TYPE","badge","BadgeContainer","number","badgeText","Header","headerType","notifications","user","dispatch","useDispatch","notificationCount","is_read","themeToggleIconName","toggleTheme","setConfig","header","headerSection","headerMiddle","headerEnd","MAIN","DrawerActions","toggleDrawer","genericPlatform","SECONDARY","goBack","Tabs","adjusted","defaultIndex","selectedIndex","setSelectedIndex","tab","selectedIndicator","contentContainerStyle","horizontal","showsHorizontalScrollIndicator","Course","route","params","courseCode","currentTab","setCurrentTab","tabs","SUCCESS","loadCourse","basicCourseInfo","refresh","refreshing","section","RefreshControl","onRefresh","Screen","ListSelectorModal","_onSelect","Search","setModal","query","setQuery","results","setResults","searchFilter","setSearchFilter","quickLoad","setQuickLoad","searchTimer","setSearchTimer","loadTimer","setLoadTimer","handleNewSearch","txt","_query","trim","clearTimeout","searchMaterial","findFiles","_items","_results","forEach","push","_course","TextInput","initiallyFocused","placeholder","autoFocus","onChangeText","flexGrow","maxToRenderPerBatch","ListFooterComponent","VideoPlayer","src","controls","autoPlay","VideoInfo","VideoPlayerWrapper","currentVideo","windowWidth","windowHeight","RecommendedFlatList","relatedVideos","setCurrentVideo","Video","useWindowDimensions","memoizedVideoPlayer","overflow","sectionsData","sectionColors","Home","recentMaterial","loadExtendedCourseInfoStatus","latestAlert","notice","topSections","topSection","topSectionInner","topSectionText","editable","btn","getWebMailUrl","emailUrl","Email","loaded","setLoaded","setWebViewRef","webMailUrl","setWebMailUrl","getUnreadEmailCount","href","ref","onNavigationStateChange","loading","SettingsItem","description","disabled","settingsFunction","toggle","toggleValue","textContainer","Switch","SettingsEnableLoggingModal","logging","setToast","message","path","Settings","debugSettingsItems","resetConfig","sendTestPushNotification","buildSettingsItem","Material","getRecentMaterialStatus","selectedTab","setSelectedTab","materialLoaded","setMaterialLoaded","setAllLoaded","_materialLoaded","getRecentMaterial","sections","isSectionUnavailable","orderedSections","sec","Drawer","props","deviceContext","userInfo","shortDegreeName","degreeType","degree_type","degreeName","degree_name","toUpperCase","setCurrent","handleLogout","logout","drawerScrollView","drawer","hr","category","DrawerContentScrollView","screen","charAt","accent100","PressableCard","expanded","sideElement","expandedElement","rotation","sideElementOpacity","computedHeight","setComputedHeight","expandedElementHeight","expandedElementOpacity","animCardStyle","expandedToRender","setExpandedToRender","result","onExpandedElementLayout","condition","animChevronStyle","rotate","expandedElementStyle","sideElementStyle","button","paddingLeft","paddingRight","gray400","BookingSubctx","ctxId","subctx","language","slots","setState","prev","ita","eng","BookingCtx","ctx","setExpanded","subcontexts","BookingCard","booking","barcodeUrl","start_time","end_time","course_id","subcontext_name","context_name","aspectRatio","Bookings","getBookingsStatus","getBookingContextsStatus","bookings","bookingContexts","getMyBookings","getBookingContexts","barcode_url","current_id","context_id","subcontext_id","i18next","AnimatedGradientBase","LoaderBase","setVisible","translateY","translateX","TimetableDayLoader","h","random","Array","_","yPositions","rx","ry","TimetableEventModal","slot","room","TimetableEvent","overlapGroup","courseNames","textOpacity","animTextSectionStyle","set","m","as","courseColors","findIndex","val","gray50","TimetableDay","fake","day","setW","sortedByPriority","timetablePriority","indexOf","overlapping","timetableOverlap","_overlapping","add","_localOverlapping","event","toDate","getTime","zIndex","_group","group","findOverlapGroup","_index","_slot","TimetableSlots","timetableDays","selectedDay","Dimensions","get","setCourseNames","days","_courseNames","_list","changed","TimetableGrid","showLine","currentTime","setCurrentTime","updateTimeout","borderBottomWidth","borderTopColor","borderBottomColor","borderTopWidth","HorizontalIconSelector","onValueChange","defaultValue","setValue","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ListRank","callback","setData","onDragEnd","drag","onLongPress","onPressIn","TimetableOptionsModal","showListRank","setShowListRank","rankItems","toggleOverlapMode","mode","timetableOptionsItems","d","TimetableHeader","weekStartDate","onLayoutChanged","onDayChanged","onWeekStartDateChanged","_onWeekStartDateChanged","withSequence","headerTitle","weekStartMoment","weekEndMoment","startOf","small","DateTimePickerAndroid","open","timestamp","_onLayoutChanged","Timetable","setWeekStartDate","setSlots","_timetableDays","setLayout","setSelectedDay","fetchTimer","setFetchTimer","doUpdate","setDoUpdate","controlTransition","direction","getTimetable","ProgressCircle","max","radius","strokeWidth","circ","PI","_value","fill","stroke","cx","cy","strokeDasharray","strokeDashoffset","Progress","marks","chartWidth","sorted_marks","mark","asDays","mark1","mark2","avgs","_avgs","weights","labels","datasets","legend","LineChart","yAxisInterval","chartConfig","backgroundGradientFrom","gray900","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","AvgWidget","avg","MarkWidget","provisional","getFields","failed","absent","icons","values","Exams","setTab","filteredMarks","permanent","_marks","total_credits","reduce","acc","parseFloat","get_avg","list","idx","ItemSeparatorComponent","ExamsBookExamModal","examSession","success","bookExamSession","session_id","bookExamSync","exam_name","rooms","ExamsCancelExamModal","cancelExamSession","cancelExamSync","isExamBooked","user_is_signed_up","isExamAvailable","ExamSessions","exams","getExamsStatus","errorMsgLanguage","setErrorMsgLanguage","IDLE","ERROR","getExams","getLanguageCode","filteredSessions","examSessionCard","accent200","signup_deadline","join","Maps","Classrooms","People","Courses","gotoCourse","isMain","mainCourse","secondaryCourse","Checkbox","_SelectableNotification","handlePress","selecting","setSelecting","onSelectionChange","animStyleCheckbox","onHandlerStateChange","State","ACTIVE","sel","Notifications","notificationTypes","getNotificationsStatus","selectedCategory","setSelectedCategory","setRefreshing","refreshNotifications","getNotificationList","markNotificationRead","copy","setNotifications","tabOffset","onHardwareBackButtonPressed","BackHandler","addEventListener","removeEventListener","deleting","setDeleting","areAllSelected","allSelected","selectionOptions","deleteNotification","opt","id_incarico","handleSelectionChange","DrawerStack","createDrawerNavigator","HomeRouter","loginStatus","loadCoursesStatus","login","method","loadCoursesData","FCMToken","NativeModules","NotificationModule","getToken","registerPushNotifications","setLoadExtendedCourseInfoStatus","pendingStatus","allLoaded","successStatus","getDrawerComponent","Navigator","screenOptions","headerShown","drawerType","useLegacyImplementation","drawerContent","component","AppStack","createNativeStackNavigator","AppStackNavigator","NavigationContainer","Router","setMomentLocale","checked","acceptedUpdate","updaterState","setUpdaterState","releaseData","locale","getLocales","languageCode","notes","content","note","authStatus","setMessage","buildMessage","AUTH_STATUS","NOT_VALID"],"mappings":"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","file":"static/js/5.7b136aa7.chunk.js","sourcesContent":["import moment from 'moment';\nimport {Entry} from 'open-polito-api/lib/device';\nimport Config from 'react-native-config';\nimport DeviceInfo from 'react-native-device-info';\nimport store from '../store/store';\nimport version from '../../version.json';\nimport {appendFile, getDocumentsPath} from './fs';\n\nexport type BasicDeviceInfoLogEntry = {\n  type: 'DEVICE_INFO';\n  appBuildNumber: string;\n  appBuildVariant: string;\n  appVersion: string;\n  appVersionBinary: string;\n  osApiLevel: number;\n  osName: string;\n  osVersion: string;\n  theme: 'light' | 'dark' | 'system';\n};\n\nexport type RequestLogEntry = Entry & {\n  type: 'REQUEST';\n};\n\nexport type ErrorLogEntry = Error & {\n  type: 'ERROR';\n};\n\nexport type LogEntry =\n  | BasicDeviceInfoLogEntry\n  | RequestLogEntry\n  | ErrorLogEntry;\n\nexport default class Logger {\n  public static logsDirectoryPath = getDocumentsPath();\n\n  public static logFilePath =\n    Logger.logsDirectoryPath +\n    '/' +\n    'request_log-' +\n    moment().format('YYYY-MM-DD-THHmmssSSS') +\n    '.txt';\n\n  public static hasLoggedBasicDeviceInfo: boolean = false;\n\n  /**\n   * Writes log entry to log file\n   * @param entry\n   *\n   * @remarks\n   * Uses ExternalDirectoryPath (/storage/emulated/0/Android/data/org.openpolito.app/files/) on Android,\n   * DocumentDirectoryPath on iOS\n   */\n  static async writeToFile(entry: LogEntry) {\n    await appendFile(Logger.logFilePath, JSON.stringify(entry) + '\\n').catch(\n      err => console.log(err),\n    );\n  }\n\n  /**\n   * Logs basic device info\n   */\n  static async logBasicDeviceInfo() {\n    if (Logger.hasLoggedBasicDeviceInfo) return;\n    const entry: BasicDeviceInfoLogEntry = {\n      type: 'DEVICE_INFO',\n      appBuildNumber: DeviceInfo.getBuildNumber(),\n      appBuildVariant: Config.VARIANT || '',\n      appVersion: version.version,\n      appVersionBinary: DeviceInfo.getVersion(),\n      osApiLevel: DeviceInfo.getApiLevelSync(),\n      osName: DeviceInfo.getSystemName() || DeviceInfo.getBaseOsSync(),\n      osVersion: DeviceInfo.getSystemVersion(),\n      theme: store.getState().session.config.theme,\n    };\n    await Logger.writeToFile(entry);\n    Logger.hasLoggedBasicDeviceInfo = true;\n  }\n\n  /**\n   * Logs a network request\n   *\n   * @remarks See {@link Entry}\n   * @param entry\n   */\n  static async logRequest(entry: Entry) {\n    await Logger.logBasicDeviceInfo();\n    // Don't log if debug options not enabled\n    if (!parseInt(Config.ENABLE_DEBUG_OPTIONS!, 10)) return;\n    // Don't log if login endpoint\n    if (entry.endpoint.includes('login')) return;\n    await Logger.writeToFile({\n      type: 'REQUEST',\n      ...entry,\n    });\n  }\n\n  /**\n   * Like {@link logRequest}, but called synchronously\n   * @param entry\n   */\n  static logRequestSync(entry: Entry) {\n    (async () => {\n      await Logger.logBasicDeviceInfo();\n      await Logger.logRequest(entry);\n    })();\n  }\n\n  /**\n   * Logs an error's name, message, and stack trace\n   * @param error\n   */\n  static async logError(error: Error) {\n    await Logger.logBasicDeviceInfo();\n    await Logger.writeToFile({\n      type: 'ERROR',\n      ...error,\n    });\n  }\n}\n","var map = {\n\t\"./af\": 296,\n\t\"./af.js\": 296,\n\t\"./ar\": 297,\n\t\"./ar-dz\": 298,\n\t\"./ar-dz.js\": 298,\n\t\"./ar-kw\": 299,\n\t\"./ar-kw.js\": 299,\n\t\"./ar-ly\": 300,\n\t\"./ar-ly.js\": 300,\n\t\"./ar-ma\": 301,\n\t\"./ar-ma.js\": 301,\n\t\"./ar-sa\": 302,\n\t\"./ar-sa.js\": 302,\n\t\"./ar-tn\": 303,\n\t\"./ar-tn.js\": 303,\n\t\"./ar.js\": 297,\n\t\"./az\": 304,\n\t\"./az.js\": 304,\n\t\"./be\": 305,\n\t\"./be.js\": 305,\n\t\"./bg\": 306,\n\t\"./bg.js\": 306,\n\t\"./bm\": 307,\n\t\"./bm.js\": 307,\n\t\"./bn\": 308,\n\t\"./bn-bd\": 309,\n\t\"./bn-bd.js\": 309,\n\t\"./bn.js\": 308,\n\t\"./bo\": 310,\n\t\"./bo.js\": 310,\n\t\"./br\": 311,\n\t\"./br.js\": 311,\n\t\"./bs\": 312,\n\t\"./bs.js\": 312,\n\t\"./ca\": 313,\n\t\"./ca.js\": 313,\n\t\"./cs\": 314,\n\t\"./cs.js\": 314,\n\t\"./cv\": 315,\n\t\"./cv.js\": 315,\n\t\"./cy\": 316,\n\t\"./cy.js\": 316,\n\t\"./da\": 317,\n\t\"./da.js\": 317,\n\t\"./de\": 318,\n\t\"./de-at\": 319,\n\t\"./de-at.js\": 319,\n\t\"./de-ch\": 320,\n\t\"./de-ch.js\": 320,\n\t\"./de.js\": 318,\n\t\"./dv\": 321,\n\t\"./dv.js\": 321,\n\t\"./el\": 322,\n\t\"./el.js\": 322,\n\t\"./en-au\": 323,\n\t\"./en-au.js\": 323,\n\t\"./en-ca\": 324,\n\t\"./en-ca.js\": 324,\n\t\"./en-gb\": 325,\n\t\"./en-gb.js\": 325,\n\t\"./en-ie\": 326,\n\t\"./en-ie.js\": 326,\n\t\"./en-il\": 327,\n\t\"./en-il.js\": 327,\n\t\"./en-in\": 328,\n\t\"./en-in.js\": 328,\n\t\"./en-nz\": 329,\n\t\"./en-nz.js\": 329,\n\t\"./en-sg\": 330,\n\t\"./en-sg.js\": 330,\n\t\"./eo\": 331,\n\t\"./eo.js\": 331,\n\t\"./es\": 332,\n\t\"./es-do\": 333,\n\t\"./es-do.js\": 333,\n\t\"./es-mx\": 334,\n\t\"./es-mx.js\": 334,\n\t\"./es-us\": 335,\n\t\"./es-us.js\": 335,\n\t\"./es.js\": 332,\n\t\"./et\": 336,\n\t\"./et.js\": 336,\n\t\"./eu\": 337,\n\t\"./eu.js\": 337,\n\t\"./fa\": 338,\n\t\"./fa.js\": 338,\n\t\"./fi\": 339,\n\t\"./fi.js\": 339,\n\t\"./fil\": 340,\n\t\"./fil.js\": 340,\n\t\"./fo\": 341,\n\t\"./fo.js\": 341,\n\t\"./fr\": 342,\n\t\"./fr-ca\": 343,\n\t\"./fr-ca.js\": 343,\n\t\"./fr-ch\": 344,\n\t\"./fr-ch.js\": 344,\n\t\"./fr.js\": 342,\n\t\"./fy\": 345,\n\t\"./fy.js\": 345,\n\t\"./ga\": 346,\n\t\"./ga.js\": 346,\n\t\"./gd\": 347,\n\t\"./gd.js\": 347,\n\t\"./gl\": 348,\n\t\"./gl.js\": 348,\n\t\"./gom-deva\": 349,\n\t\"./gom-deva.js\": 349,\n\t\"./gom-latn\": 350,\n\t\"./gom-latn.js\": 350,\n\t\"./gu\": 351,\n\t\"./gu.js\": 351,\n\t\"./he\": 352,\n\t\"./he.js\": 352,\n\t\"./hi\": 353,\n\t\"./hi.js\": 353,\n\t\"./hr\": 354,\n\t\"./hr.js\": 354,\n\t\"./hu\": 355,\n\t\"./hu.js\": 355,\n\t\"./hy-am\": 356,\n\t\"./hy-am.js\": 356,\n\t\"./id\": 357,\n\t\"./id.js\": 357,\n\t\"./is\": 358,\n\t\"./is.js\": 358,\n\t\"./it\": 359,\n\t\"./it-ch\": 360,\n\t\"./it-ch.js\": 360,\n\t\"./it.js\": 359,\n\t\"./ja\": 361,\n\t\"./ja.js\": 361,\n\t\"./jv\": 362,\n\t\"./jv.js\": 362,\n\t\"./ka\": 363,\n\t\"./ka.js\": 363,\n\t\"./kk\": 364,\n\t\"./kk.js\": 364,\n\t\"./km\": 365,\n\t\"./km.js\": 365,\n\t\"./kn\": 366,\n\t\"./kn.js\": 366,\n\t\"./ko\": 367,\n\t\"./ko.js\": 367,\n\t\"./ku\": 368,\n\t\"./ku.js\": 368,\n\t\"./ky\": 369,\n\t\"./ky.js\": 369,\n\t\"./lb\": 370,\n\t\"./lb.js\": 370,\n\t\"./lo\": 371,\n\t\"./lo.js\": 371,\n\t\"./lt\": 372,\n\t\"./lt.js\": 372,\n\t\"./lv\": 373,\n\t\"./lv.js\": 373,\n\t\"./me\": 374,\n\t\"./me.js\": 374,\n\t\"./mi\": 375,\n\t\"./mi.js\": 375,\n\t\"./mk\": 376,\n\t\"./mk.js\": 376,\n\t\"./ml\": 377,\n\t\"./ml.js\": 377,\n\t\"./mn\": 378,\n\t\"./mn.js\": 378,\n\t\"./mr\": 379,\n\t\"./mr.js\": 379,\n\t\"./ms\": 380,\n\t\"./ms-my\": 381,\n\t\"./ms-my.js\": 381,\n\t\"./ms.js\": 380,\n\t\"./mt\": 382,\n\t\"./mt.js\": 382,\n\t\"./my\": 383,\n\t\"./my.js\": 383,\n\t\"./nb\": 384,\n\t\"./nb.js\": 384,\n\t\"./ne\": 385,\n\t\"./ne.js\": 385,\n\t\"./nl\": 386,\n\t\"./nl-be\": 387,\n\t\"./nl-be.js\": 387,\n\t\"./nl.js\": 386,\n\t\"./nn\": 388,\n\t\"./nn.js\": 388,\n\t\"./oc-lnc\": 389,\n\t\"./oc-lnc.js\": 389,\n\t\"./pa-in\": 390,\n\t\"./pa-in.js\": 390,\n\t\"./pl\": 391,\n\t\"./pl.js\": 391,\n\t\"./pt\": 392,\n\t\"./pt-br\": 393,\n\t\"./pt-br.js\": 393,\n\t\"./pt.js\": 392,\n\t\"./ro\": 394,\n\t\"./ro.js\": 394,\n\t\"./ru\": 395,\n\t\"./ru.js\": 395,\n\t\"./sd\": 396,\n\t\"./sd.js\": 396,\n\t\"./se\": 397,\n\t\"./se.js\": 397,\n\t\"./si\": 398,\n\t\"./si.js\": 398,\n\t\"./sk\": 399,\n\t\"./sk.js\": 399,\n\t\"./sl\": 400,\n\t\"./sl.js\": 400,\n\t\"./sq\": 401,\n\t\"./sq.js\": 401,\n\t\"./sr\": 402,\n\t\"./sr-cyrl\": 403,\n\t\"./sr-cyrl.js\": 403,\n\t\"./sr.js\": 402,\n\t\"./ss\": 404,\n\t\"./ss.js\": 404,\n\t\"./sv\": 405,\n\t\"./sv.js\": 405,\n\t\"./sw\": 406,\n\t\"./sw.js\": 406,\n\t\"./ta\": 407,\n\t\"./ta.js\": 407,\n\t\"./te\": 408,\n\t\"./te.js\": 408,\n\t\"./tet\": 409,\n\t\"./tet.js\": 409,\n\t\"./tg\": 410,\n\t\"./tg.js\": 410,\n\t\"./th\": 411,\n\t\"./th.js\": 411,\n\t\"./tk\": 412,\n\t\"./tk.js\": 412,\n\t\"./tl-ph\": 413,\n\t\"./tl-ph.js\": 413,\n\t\"./tlh\": 414,\n\t\"./tlh.js\": 414,\n\t\"./tr\": 415,\n\t\"./tr.js\": 415,\n\t\"./tzl\": 416,\n\t\"./tzl.js\": 416,\n\t\"./tzm\": 417,\n\t\"./tzm-latn\": 418,\n\t\"./tzm-latn.js\": 418,\n\t\"./tzm.js\": 417,\n\t\"./ug-cn\": 419,\n\t\"./ug-cn.js\": 419,\n\t\"./uk\": 420,\n\t\"./uk.js\": 420,\n\t\"./ur\": 421,\n\t\"./ur.js\": 421,\n\t\"./uz\": 422,\n\t\"./uz-latn\": 423,\n\t\"./uz-latn.js\": 423,\n\t\"./uz.js\": 422,\n\t\"./vi\": 424,\n\t\"./vi.js\": 424,\n\t\"./x-pseudo\": 425,\n\t\"./x-pseudo.js\": 425,\n\t\"./yo\": 426,\n\t\"./yo.js\": 426,\n\t\"./zh-cn\": 427,\n\t\"./zh-cn.js\": 427,\n\t\"./zh-hk\": 428,\n\t\"./zh-hk.js\": 428,\n\t\"./zh-mo\": 429,\n\t\"./zh-mo.js\": 429,\n\t\"./zh-tw\": 430,\n\t\"./zh-tw.js\": 430\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 522;","import React, {ReactNode, useContext, useMemo} from 'react';\nimport {\n  MixedStyleDeclaration,\n  RenderHTMLConfigProvider,\n  TRenderEngineProvider,\n} from 'react-native-render-html';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport {DeviceContext} from './Device';\n\nconst HTMLRenderEngineProvider = ({children}: {children: ReactNode}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const color = useMemo<Color | undefined>(\n    () => (dark ? colors.gray200 : undefined),\n    [dark],\n  );\n\n  const tagsStyles = useMemo<Readonly<Record<string, MixedStyleDeclaration>>>(\n    () => ({\n      p: {\n        marginVertical: 4 * p,\n        color,\n      },\n    }),\n    [color],\n  );\n\n  return (\n    <TRenderEngineProvider tagsStyles={tagsStyles}>\n      <RenderHTMLConfigProvider>{children}</RenderHTMLConfigProvider>\n    </TRenderEngineProvider>\n  );\n};\n\nexport default HTMLRenderEngineProvider;\n","import {Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport version from '../../version.json';\n\n/**\n * Structure of one array item found in \"release.json\",\n * found in the root directory of the repo.\n */\nexport type ReleaseJsonEntry = {\n  type: 'release' | 'beta' | 'dev';\n  tag: string;\n  versionCode: number;\n  format: 'text' | 'html';\n  notes: {\n    language: 'it' | 'en';\n    content: string[];\n  }[];\n};\n\n/**\n * Structure of one array item found in \"assets.json\",\n * found for each GitHub release.\n */\nexport type AssetsJsonEntry = {\n  os: string;\n  arch: string;\n  name: string;\n  sha256: string;\n};\n\n/**\n * Structure of the portion we need from GitHub's response json\n * when fetching release data.\n */\nexport type PartialGitHubReleaseResponse = {\n  assets: {\n    name: string;\n    browser_download_url: string;\n    size: number; // in bytes\n  }[];\n};\n\nexport const isGitHubOnline = async (): Promise<boolean> => {\n  const statusCode = (await fetch('https://api.github.com')).status;\n  return statusCode === 200;\n};\n\n/**\n * Returns the release.json contents\n * @returns\n */\nexport const fetchReleaseJson = async (): Promise<ReleaseJsonEntry[]> => {\n  return (await (\n    await fetch(\n      'https://raw.githubusercontent.com/open-polito/open-polito/master/release.json',\n    )\n  ).json()) as ReleaseJsonEntry[];\n};\n\n/**\n * Return release data by tag\n * @param tag The release tag\n */\nexport const fetchReleaseByTag = async (\n  tag: string,\n): Promise<PartialGitHubReleaseResponse> => {\n  return (await (\n    await fetch(\n      `https://api.github.com/repos/open-polito/open-polito/releases/tags/${tag}`,\n      {\n        headers: {Accept: 'application/vnd.github+json'},\n      },\n    )\n  ).json()) as PartialGitHubReleaseResponse;\n};\n\n/**\n * Check for updates, if and only if the following are all true:\n * - The OS is Android\n * - The app was not installed from PLAY_STORE (see {@link version})\n * - The device is online (can reach GitHub API)\n */\nexport const checkForUpdates = async (): Promise<\n  ReleaseJsonEntry | undefined\n> => {\n  if (Platform.OS === 'android' && !['PLAY_STORE'].includes(version.from)) {\n    (async () => {\n      const reachable = await isGitHubOnline();\n      if (!reachable) {\n        return undefined;\n      }\n      try {\n        const releaseData = (await fetchReleaseJson()).find(\n          r => r.type === Config.VARIANT && r.versionCode > version.versionCode,\n        );\n        return releaseData;\n      } catch (e) {}\n    })();\n  }\n  return undefined;\n};\n","export * from './updater.common';\n\nconst updateCleanup = async () => {};\nconst getUpdateDestinationFilePath = async () => {};\nconst checkFileMatchesSHA256 = async () => {};\n\nexport {updateCleanup, getUpdateDestinationFilePath, checkFileMatchesSHA256};\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport {Modal, ScrollView, TouchableOpacity, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors, {Color} from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport {DeviceSize} from '../../types';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport Text from '../../ui/core/Text';\n\nexport interface ModalAction {\n  type: 'colored' | 'main' | 'secondary';\n  label: string;\n  value: string;\n  onSelect: (value: string) => Promise<any>;\n  dismiss: boolean; // Whether to dismiss the modal when action executed\n}\n\nexport interface ModalBaseProps {\n  title: string;\n  actions?: ModalAction[];\n  dismissable?: boolean;\n  onDismiss?: () => any;\n  children: ReactNode;\n  icon?: string;\n  accentColor?: Color;\n}\n\nconst ModalBase: FC<ModalBaseProps> = ({\n  title,\n  actions,\n  dismissable = true,\n  onDismiss = () => {},\n  children,\n  icon,\n  accentColor,\n}) => {\n  const {dark, size} = useContext(DeviceContext);\n  const {visible, hideModal} = useContext(ModalContext);\n\n  const [internalVisible, setInternalVisible] = useState(true);\n\n  const dismiss = useCallback(() => {\n    if (dismissable) {\n      setTimeout(() => setInternalVisible(false), 200);\n      hideModal();\n      onDismiss();\n    }\n  }, [hideModal, dismissable, onDismiss]);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: `rgba(0, 0, 0, ${offset.value / 2})`,\n      opacity: offset.value,\n      transform: [\n        {\n          scale: 1.1 - 0.1 * offset.value,\n        },\n      ],\n    };\n  });\n\n  useEffect(() => {\n    offset.value = withTiming(visible ? 1 : 0, {duration: 200});\n  }, [visible, offset]);\n\n  return (\n    <Modal\n      transparent={true}\n      visible={internalVisible}\n      animationType=\"none\"\n      statusBarTranslucent={true}\n      onRequestClose={dismiss}>\n      <Animated.View\n        style={[\n          animStyle,\n          {\n            flex: 1,\n          },\n        ]}>\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={dismiss}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <TouchableOpacity\n            activeOpacity={1}\n            style={[\n              {\n                width: size >= DeviceSize.lg ? '50%' : '90%',\n                maxHeight: '80%',\n                backgroundColor: dark ? colors.gray700 : colors.gray200,\n                borderRadius: 4 * p,\n                marginHorizontal: 16 * p,\n              },\n            ]}>\n            <ScrollView>\n              <View\n                style={{\n                  paddingVertical: 24 * p,\n                  paddingHorizontal: 16 * p,\n                }}>\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                  }}>\n                  {icon && (\n                    <>\n                      <TablerIcon\n                        name={icon}\n                        color={accentColor}\n                        size={24 * p}\n                      />\n                      <View style={{width: 16 * p}} />\n                    </>\n                  )}\n                  <Text s={16} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n                    {title}\n                  </Text>\n                </View>\n                <View\n                  style={{\n                    marginTop: 16 * p,\n                  }}>\n                  {children}\n                </View>\n              </View>\n            </ScrollView>\n            {actions && (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  paddingBottom: 24 * p,\n                  paddingHorizontal: 16 * p,\n                }}>\n                {actions.map((action, i) => (\n                  <View\n                    key={action.value}\n                    style={[\n                      {\n                        flex: 1,\n                      },\n                      i !== 0\n                        ? {\n                            marginLeft: 32 * p,\n                          }\n                        : {},\n                    ]}>\n                    <Button\n                      color={\n                        action.type === 'colored'\n                          ? accentColor\n                          : colors.accent300\n                      }\n                      secondary={action.type === 'secondary'}\n                      text={action.label}\n                      onPress={() => {\n                        action.onSelect(action.value).then(() => {\n                          action.dismiss && dismiss();\n                        });\n                      }}\n                    />\n                  </View>\n                ))}\n              </View>\n            )}\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Animated.View>\n    </Modal>\n  );\n};\n\nexport default ModalBase;\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Color} from '../../colors';\nimport {ModalContext} from '../../context/ModalProvider';\nimport ModalBase, {ModalAction} from './ModalBase';\n\nexport interface BaseActionConfirmModalProps {\n  title: string;\n  onConfirm?: () => any;\n  onCancel?: () => any;\n  icon?: string;\n  accentColor?: Color;\n  customLabels?: {\n    cancel: string;\n    confirm: string;\n  };\n  children: ReactNode;\n}\n\nconst BaseActionConfirmModal: FC<BaseActionConfirmModalProps> = ({\n  title,\n  children,\n  onConfirm = () => {},\n  onCancel = () => {},\n  icon,\n  accentColor,\n  customLabels,\n}) => {\n  const {hideModal} = useContext(ModalContext);\n  const {t} = useTranslation();\n\n  const actions = useMemo<ModalAction[]>(() => {\n    return [\n      {\n        type: 'secondary',\n        label: customLabels ? customLabels.cancel : t('cancel'),\n        value: 'cancel',\n        onSelect: async () => {\n          onCancel();\n          hideModal();\n        },\n        dismiss: true,\n      },\n      {\n        type: 'colored',\n        label: customLabels ? customLabels.confirm : t('confirm'),\n        value: 'confirm',\n        onSelect: async () => {\n          onConfirm();\n          hideModal();\n        },\n        dismiss: true,\n      },\n    ];\n  }, [hideModal, onCancel, onConfirm, t, customLabels]);\n\n  return (\n    <ModalBase\n      icon={icon}\n      accentColor={accentColor}\n      title={title}\n      actions={actions}>\n      {children}\n    </ModalBase>\n  );\n};\n\nexport default BaseActionConfirmModal;\n","const Updater = () => {\n  return <div>Updater for web not implemented yet</div>;\n};\n\nexport default Updater;\n","import React, {useState} from 'react';\nimport {TouchableOpacity, View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst Filters = ({\n  items,\n  onChange,\n}: {\n  items: {label: string; value: string}[];\n  onChange: (arg0: string) => any;\n}) => {\n  const [selected, setSelected] = useState<string>(\n    items && items.length > 0 ? items[0].value : '',\n  );\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      {items.map(item => (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              onChange(item.value);\n              setSelected(item.value);\n            }}>\n            <View\n              style={{\n                paddingHorizontal: 8 * p,\n                paddingVertical: 4 * p,\n                borderWidth: 1 * p,\n                borderRadius: 16 * p,\n                borderColor:\n                  item.value === selected ? colors.accent300 : colors.gray200,\n                marginRight: 8 * p,\n              }}>\n              <Text\n                s={10 * p}\n                w=\"r\"\n                c={item.value === selected ? colors.accent300 : colors.gray200}>\n                {item.label}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Filters;\n","import React, {useContext} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport Text from './core/Text';\n\nexport default function NoContent() {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n\n  return (\n    <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center'}}>\n      <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n        {t('noContent')}\n      </Text>\n    </View>\n  );\n}\n","import {useNavigation} from '@react-navigation/native';\nimport moment from 'moment';\nimport {Recording} from 'open-polito-api/lib/course';\nimport React, {useMemo, useState} from 'react';\nimport {Dimensions, Image, View} from 'react-native';\nimport Animated, {useAnimatedStyle, withTiming} from 'react-native-reanimated';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\nconst VideoCard = ({\n  item,\n  onPress,\n  dark,\n}: {\n  item: Recording;\n  onPress: () => any;\n  dark: boolean;\n}) => {\n  const [width, setWidth] = useState<number>(0);\n\n  const hours = useMemo(() => item.length / 60, [item.length]);\n\n  const minsString = useMemo(() => {\n    let res = Math.ceil((hours - Math.floor(hours)) * 60).toString();\n    if (res.length === 1) {\n      res = '0' + res;\n    }\n    return res;\n  }, [hours]);\n\n  /**\n   * Only show element when image width has been computed\n   */\n  const animStyle = useAnimatedStyle(() => ({\n    opacity: withTiming(width === 0 ? 0 : 1, {duration: 200}),\n  }));\n\n  const lengthString = Math.floor(hours) + ':' + minsString + ':00';\n  return (\n    <Animated.View style={[animStyle]}>\n      <PressableBase\n        onLayout={e => setWidth(e.nativeEvent.layout.width)}\n        onPress={onPress}\n        android_ripple={{color: colors.lightGray}}\n        key={item.date + item.title}\n        style={[\n          {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            paddingVertical: 12 * p,\n            paddingHorizontal: 16 * p,\n          },\n        ]}>\n        <View\n          style={{\n            width: width * 0.4,\n            height: width * 0.23,\n          }}>\n          <Image\n            source={{\n              uri: item.cover_url.length !== 0 ? item.cover_url : undefined,\n            }}\n            style={{\n              width: '100%',\n              height: '100%',\n              backgroundColor: '#000',\n            }}\n            resizeMode=\"contain\"\n          />\n          <View\n            style={{\n              position: 'absolute',\n              right: 0,\n              bottom: 0,\n              padding: 4 * p,\n              backgroundColor: '#000',\n            }}>\n            <Text s={10 * p} w=\"m\" c={colors.gray100}>\n              {lengthString}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            marginLeft: 16 * p,\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n          }}>\n          <View>\n            <Text\n              w=\"m\"\n              s={12 * p}\n              c={dark ? colors.gray100 : colors.gray800}\n              numberOfLines={2}>\n              {item.title}\n            </Text>\n            <Text\n              w=\"r\"\n              s={10 * p}\n              c={dark ? colors.gray200 : colors.gray700}\n              numberOfLines={1}\n              style={{marginVertical: 8 * p}}>\n              {moment(item.date).format('ll')}\n            </Text>\n          </View>\n          {/* TODO video downloader */}\n          {/* <View style={{flexDirection: 'row', alignItems: 'center'}}>\n                <TablerIcon\n                  name=\"download\"\n                  size={16 * p}\n                  color={colors.accent300}\n                  style={{marginRight: 4 * p}}\n                />\n                <Text\n                  w=\"r\"\n                  s={10 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  numberOfLines={1}>\n                  {item.url}\n                </Text>\n              </View> */}\n        </View>\n      </PressableBase>\n    </Animated.View>\n  );\n};\n\nexport default VideoCard;\n","import {useNavigation} from '@react-navigation/core';\nimport React, {ReactElement, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {p} from '../scaling';\nimport {CourseState} from '../store/coursesSlice';\nimport {RootState} from '../store/store';\nimport Filters from './Filters';\nimport NoContent from './NoContent';\nimport VideoCard from './VideoCard';\n\nconst CourseVideos = ({\n  courseId,\n  dark,\n  refreshControl,\n}: {\n  courseId: string;\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const {t} = useTranslation();\n  const navigation = useNavigation();\n\n  const [selectedYear, setSelectedYear] = useState('current');\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == courseId,\n    ),\n  );\n\n  const videos = useMemo(() => {\n    if (selectedYear === 'current') {\n      return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n        (a, b) => b.date - a.date,\n      );\n    }\n    return [\n      ...(courseData?.extendedInfo?.vc_recordings[parseInt(selectedYear, 10)] ||\n        []),\n    ].sort((a, b) => b.date - a.date);\n  }, [courseData, selectedYear]);\n\n  return (\n    <View style={{flex: 1}}>\n      <FlatList\n        data={videos}\n        ListEmptyComponent={<NoContent />}\n        refreshControl={refreshControl}\n        ListHeaderComponent={\n          <CourseVideosHeader\n            courseData={courseData}\n            onYearChange={y => setSelectedYear(y)}\n          />\n        }\n        renderItem={({item}) => (\n          <VideoCard\n            item={item}\n            dark={dark}\n            onPress={() => {\n              navigation.navigate('Video', {\n                video: item,\n                courseId: courseId,\n              });\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nconst CourseVideosHeader = ({\n  courseData,\n  onYearChange,\n}: {\n  courseData: CourseState | undefined;\n  onYearChange: (arg0: string) => any;\n}) => {\n  return (\n    <View style={{marginLeft: 16 * p}}>\n      <View style={{height: 16 * p}} />\n      <Filters\n        items={Object.keys(courseData?.extendedInfo?.vc_recordings || {})\n          .sort((a, b) => (a < b ? 1 : -1))\n          .map(key => ({label: key, value: key}))}\n        onChange={y => onYearChange(y)}\n      />\n      <View style={{height: 8 * p}} />\n    </View>\n  );\n};\n\nexport default CourseVideos;\n","import {StyleSheet} from 'react-native';\nimport colors from './colors';\n\nconst styles = StyleSheet.create({\n  // Text color varieties\n  blackText: {\n    color: colors.black,\n  },\n  whiteText: {\n    color: colors.white,\n  },\n  grayText: {\n    color: colors.gray,\n  },\n  // Text font weights\n  textRegular: {\n    fontFamily: 'Inter-Regular',\n  },\n  textMedium: {\n    fontFamily: 'Inter-Medium',\n  },\n  textBold: {\n    fontFamily: 'Inter-Bold',\n  },\n  // Text sizes\n  textExtraSmall: {\n    fontSize: 10,\n  },\n  textSmall: {\n    fontSize: 12,\n  },\n  textNormal: {\n    fontSize: 16,\n  },\n  textMediumSize: {\n    fontSize: 20,\n  },\n  textLarge: {\n    fontSize: 24,\n  },\n  textExtraLarge: {\n    fontSize: 32,\n  },\n  textTitleLarge: {\n    fontSize: 42,\n  },\n\n  // General styles\n  withHorizontalPadding: {\n    paddingHorizontal: 24,\n  },\n  withRoundedBorder: {\n    borderRadius: 4,\n  },\n  safePaddingTop: {\n    paddingTop: 40,\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignContent: 'space-between',\n  },\n  paddingFromHeader: {\n    paddingTop: 32,\n  },\n  titleBar: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  tabNavigator: {\n    backgroundColor: colors.white,\n    height: 60,\n    tabBarActiveTintColor: colors.white,\n    paddingBottom: 8,\n  },\n  elevated: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n\n    elevation: 4,\n  },\n  elevatedSmooth: {\n    shadowColor: '#bbb',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.0,\n\n    elevation: 24,\n  },\n  border: {\n    borderRadius: 8,\n    borderColor: colors.lightGray,\n    borderWidth: 0.5,\n  },\n});\n\nexport default styles;\n","import React, {useEffect, useRef} from 'react';\nimport {Animated, View} from 'react-native';\nimport colors from '../colors';\n\nexport default function AnimatedLiveCircle({width}: {width: number}) {\n  const coeff = useRef(new Animated.Value(0)).current;\n\n  const animate = () => {\n    Animated.loop(\n      Animated.timing(coeff, {\n        toValue: 1.5,\n        duration: 2000,\n        useNativeDriver: true,\n      }),\n    ).start();\n  };\n\n  useEffect(animate, []);\n\n  return (\n    <View\n      style={{\n        width: width,\n        height: width,\n        borderRadius: width / 2,\n      }}>\n      <Animated.View\n        style={[\n          {\n            backgroundColor: colors.white,\n            width: width,\n            height: width,\n            borderRadius: width / 2,\n            opacity: Animated.subtract(1.5, coeff),\n          },\n          {transform: [{scale: coeff}]},\n        ]}></Animated.View>\n      <View\n        style={{\n          position: 'absolute',\n          left: width / 4,\n          top: width / 4,\n          width: width / 2,\n          height: width / 2,\n          borderRadius: width / 4,\n          backgroundColor: colors.white,\n        }}></View>\n    </View>\n  );\n}\n","import React, {FC, ReactNode} from 'react';\nimport {Pressable, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport styles from '../../styles';\nimport {useTranslation} from 'react-i18next';\nimport Text from '../../ui/core/Text';\nimport {p} from '../../scaling';\n\nexport type WidgetBaseProps = {\n  name?: string;\n  action?: Function;\n  compact?: boolean;\n  withButton?: boolean;\n  withPadding?: boolean;\n  fullHeight?: boolean;\n  style?: ViewStyle;\n  dark?: boolean;\n  children: ReactNode;\n};\n\nconst WidgetBase: FC<WidgetBaseProps> = ({\n  name = '',\n  action = () => {},\n  compact = false,\n  withButton = true,\n  withPadding = true,\n  fullHeight = false,\n  children,\n  dark,\n  style,\n}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        ...styles.elevatedSmooth,\n        ...styles.border,\n        backgroundColor: colors.white,\n        width: compact ? '48%' : '100%',\n        flex: 0,\n        ...style,\n      }}>\n      <Pressable\n        style={{\n          paddingHorizontal: withPadding ? 12 : 0,\n          paddingVertical: withPadding ? 8 : 0,\n          flex: fullHeight ? 1 : 0,\n        }}\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          action();\n        }}>\n        <View\n          style={{\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n            flex: 1,\n          }}>\n          {name ? (\n            <Text w=\"m\" s={12 * p} c={dark ? colors.gray100 : colors.gray800}>\n              {name}\n            </Text>\n          ) : null}\n          {children}\n\n          {withButton && (\n            <View\n              style={{\n                backgroundColor: colors.lightGray,\n                padding: 8,\n                borderRadius: 8,\n                marginVertical: 4,\n                width: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n              }}>\n              <Text w=\"m\" s={10 * p} c={dark ? colors.gray100 : colors.gray800}>\n                {t('open')}\n              </Text>\n            </View>\n          )}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nexport default WidgetBase;\n","import moment from 'moment';\nimport {getLessonURL, LiveLesson} from 'open-polito-api/lib/course';\nimport {Device} from 'open-polito-api/lib/device';\nimport React, {FC, useEffect, useRef, useState} from 'react';\nimport {View} from 'react-native';\nimport {LinearGradient} from 'expo-linear-gradient';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport styles from '../../styles';\nimport Text from '../../ui/core/Text';\nimport AnimatedLiveCircle from '../AnimatedLiveCircle';\nimport WidgetBase from './WidgetBase';\nimport openURL from '../../utils/openUrl';\n\nexport type LiveWidgetProps = {\n  liveClass: LiveLesson;\n  courseName: string;\n  device: Device;\n};\n\nconst LiveWidget: FC<LiveWidgetProps> = ({liveClass, courseName, device}) => {\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [time, setTime] = useState<number | string>(0);\n  let intervalID = useRef<any>();\n\n  const calculateTime = () => {\n    return moment\n      .utc(moment(Date.now()).diff(moment(liveClass.date)))\n      .format('HH:mm:ss');\n  };\n\n  const gotoLiveClass = () => {\n    (async () => {\n      await openURL((await getLessonURL(device, liveClass)).url || '');\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      intervalID.current = setInterval(() => {\n        mounted && setTime(calculateTime());\n      }, 1000);\n    })();\n    return () => {\n      clearInterval(intervalID.current);\n      setMounted(false);\n    };\n  }, []);\n\n  return (\n    <WidgetBase withButton={false} withPadding={false} action={gotoLiveClass}>\n      <LinearGradient\n        start={{x: 0.2, y: 0.1}}\n        end={{x: 0.7, y: 0.9}}\n        colors={['#EA0000', '#C30000']}\n        style={{\n          paddingVertical: 16,\n          paddingHorizontal: 24,\n          ...styles.elevatedSmooth,\n          ...styles.border,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginLeft: -styles.withHorizontalPadding.paddingHorizontal / 2,\n          }}>\n          <View style={{marginRight: 8}}>\n            <AnimatedLiveCircle width={40}></AnimatedLiveCircle>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n            }}>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              LIVE\n            </Text>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              {calculateTime()}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n          }}>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {liveClass.title}\n          </Text>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {courseName}\n          </Text>\n        </View>\n      </LinearGradient>\n    </WidgetBase>\n  );\n};\n\nexport default LiveWidget;\n","import React, {FC, ReactNode} from 'react';\nimport {View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nexport type SectionParams = {\n  title: string;\n  dark: boolean;\n  style?: ViewStyle;\n  children: ReactNode;\n};\n\nconst Section = ({title, dark, style = {}, children}: SectionParams) => {\n  return (\n    <View style={{...style}}>\n      <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n        {title}\n      </Text>\n      <View style={{marginTop: 16 * p}}>{children}</View>\n    </View>\n  );\n};\n\nexport default Section;\n","import React from 'react';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\n\nconst FILE_TYPES = [\n  {\n    icon: 'file-text',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['csv', 'log', 'md', 'txt'],\n  },\n  {\n    icon: 'archive',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['7z', 'bz', 'gz', 'rar', 'tar', 'zip', 'xz'],\n  },\n  {\n    icon: 'file-code',\n    color: colors.black,\n    extensions: [\n      'asm',\n      'c',\n      'cpp',\n      'cs',\n      'css',\n      'go',\n      'h',\n      'hpp',\n      'htm',\n      'html',\n      'java',\n      'js',\n      'json',\n      'jsx',\n      'ts',\n      'tsx',\n      'php',\n      'py',\n      'rs',\n      'xml',\n    ],\n  },\n  {\n    icon: 'photo',\n    color: colors.gradient1,\n    extensions: ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'svg', 'tiff'],\n  },\n  {\n    icon: 'movie',\n    color: colors.gradient1,\n    extensions: ['flv', 'mkv', 'mp4', 'mov', 'wmv', 'avi', 'webm'],\n  },\n  {\n    icon: 'headphones',\n    color: colors.red,\n    extensions: ['aac', 'alac', 'flac', 'm4a', 'mp3', 'ogg', 'wav', 'wma'],\n  },\n  {\n    icon: 'file-text',\n    color: colors.gradient1,\n    extensions: ['doc', 'docm', 'docx', 'odt'],\n  },\n  {\n    icon: 'file-text',\n    color: '#ff3848',\n    extensions: ['pdf'],\n  },\n  {\n    icon: 'presentation',\n    color: colors.orange,\n    extensions: ['odp', 'ppt', 'pptm', 'pptx'],\n  },\n  {\n    icon: 'table',\n    color: colors.green,\n    extensions: ['ods', 'xls', 'xlsm', 'xlsx'],\n  },\n];\n\nexport default function getFileIcon(filename: string, dark: boolean) {\n  const ext = filename.split('.').pop()!.toLowerCase();\n  for (let i = 0; i < FILE_TYPES.length; i++) {\n    const {icon, extensions} = FILE_TYPES[i];\n    if (extensions.includes(ext)) {\n      const color = !dark\n        ? FILE_TYPES[i].colorLight || FILE_TYPES[i].color\n        : FILE_TYPES[i].color;\n      return <TablerIcon name={icon} color={color} size={24 * p} />;\n    }\n  }\n  return (\n    <TablerIcon name=\"file-unknown\" color={colors.gray500} size={24 * p} />\n  );\n}\n","import moment from 'moment';\nimport {File, getDownloadURL, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {Pressable, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport getFileIcon from '../utils/getFileIcon';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport Text from './core/Text';\nimport PressableBase from './core/PressableBase';\nimport {Device} from 'open-polito-api/lib/device';\nimport openURL from '../utils/openUrl';\n\nexport type DirectoryItemProps = {\n  item: MaterialItem;\n  relativeDate?: boolean;\n  dark: boolean;\n  course?: string;\n  onPress?: Function;\n  children?: ReactNode;\n};\n\nconst sizes = ['B', 'kB', 'MB', 'GB', 'TB'];\n\nexport const computeSizeLabel = (size: number) => {\n  const _size = Math.floor(size);\n  const index = Math.min(\n    _size > 0 ? Math.floor(Math.floor(Math.log10(_size)) / 3) : 0,\n    sizes.length - 1,\n  );\n  return `${(_size / 10 ** (index === 0 ? 1 : 3 * index)).toFixed(2)} ${\n    sizes[index]\n  }`;\n};\n\nconst downloadFile = (device: Device, item: File) => {\n  getDownloadURL(device, item).then(url => openURL(url));\n};\n\nconst DirectoryItem: FC<DirectoryItemProps> = ({\n  item,\n  relativeDate = false, // show as \"X days/hours ago instead of plain date\"\n  dark,\n  course = '',\n  onPress = () => {},\n  children,\n}) => {\n  const sizeLabel = useMemo(() => {\n    return item.type === 'file' ? computeSizeLabel(item.size * 1000) : '';\n  }, [item]);\n\n  const {device} = useContext(DeviceContext);\n\n  const iconComponent = useMemo(() => {\n    return item.type === 'file' ? (\n      getFileIcon(item.filename, dark)\n    ) : (\n      <TablerIcon\n        name=\"folder\"\n        color={dark ? colors.gray200 : colors.gray700}\n        size={24 * p}\n      />\n    );\n  }, [item, dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n      }}>\n      <PressableBase\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          item.type === 'file' ? () => downloadFile(device, item) : onPress();\n        }} // download file if file, otherwise use onPress prop\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 8,\n        }}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            flex: 1,\n          }}>\n          {iconComponent}\n          <View\n            style={{\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n              marginLeft: 10 * p,\n              flex: 1,\n            }}>\n            <View style={{marginRight: 10 * p}}>\n              <Text\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"m\"\n                s={12 * p}\n                numberOfLines={1}>\n                {item.name}\n              </Text>\n            </View>\n            {item.type === 'file' && (\n              <View style={{flexDirection: 'column', flex: 1}}>\n                <Text numberOfLines={1} w=\"r\" s={10 * p} c={colors.gray300}>\n                  {sizeLabel + ' · '}\n                  {relativeDate\n                    ? moment(item.creation_date).fromNow()\n                    : moment(item.creation_date).format('ll')}\n                  {course ? ` · ${course}` : ''}\n                </Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {item.type === 'file' ? (\n          <Pressable\n            android_ripple={{color: colors.lightGray}}\n            onPress={() => downloadFile(device, item)}>\n            <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={colors.accent300}\n            />\n          </Pressable>\n        ) : null}\n      </PressableBase>\n      {item.type === 'dir' ? (\n        <View style={{flexDirection: 'row'}}>\n          <View\n            style={{\n              width: 16 * p,\n              alignItems: 'flex-start',\n            }}>\n            <View\n              style={{\n                flex: 1,\n                marginLeft: 4 * p,\n                width: 2 * p,\n                backgroundColor: dark ? colors.gray600 : colors.gray300,\n              }}\n            />\n          </View>\n          <View style={{flex: 1}}>{children}</View>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default DirectoryItem;\n","import {decode} from 'html-entities';\n\nexport const htmlTags = /<\\/?\\w+[^>]*>/g;\n\nexport const stripHTML = (input: string): string => {\n  return decode(input).replace(htmlTags, '');\n};\n","import moment from 'moment';\nimport {Notification} from 'open-polito-api/lib/notifications';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport React, {FC, useEffect, useMemo} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\nimport {stripHTML} from '../utils/html';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type NotificationParams = {\n  type: NotificationType | string;\n  notification: ExtendedAlert | Notification; // TODO add support for generic notifications (Notification type in API code)\n  dark: boolean;\n  read?: boolean;\n  courseName?: string;\n};\n\nconst isCourseAlert = (n: ExtendedAlert | Notification): n is ExtendedAlert => {\n  return (n as Notification).topic === undefined;\n};\n\nconst NotificationComponent: FC<NotificationParams> = ({\n  type,\n  notification,\n  dark,\n  read = true,\n  courseName = '',\n}) => {\n  const icon = useMemo(() => {\n    switch (type) {\n      case NotificationType.TEST:\n        return 'test-pipe';\n      case NotificationType.DIRECT:\n        return 'message-dots';\n      case NotificationType.NOTICE:\n        return 'bell';\n      case NotificationType.MATERIAL:\n        return 'files';\n      default:\n        return 'bell';\n    }\n  }, [type]);\n\n  const title = useMemo<string>(\n    () =>\n      isCourseAlert(notification)\n        ? stripHTML(notification.text)\n        : notification.title,\n    [notification],\n  );\n\n  const body = useMemo<string | null>(\n    () => (isCourseAlert(notification) ? notification.text : notification.body),\n    [notification],\n  );\n\n  const dateString = useMemo(() => {\n    return moment(\n      isCourseAlert(notification) ? notification.date : notification.time,\n    ).format('ll');\n  }, [notification]);\n\n  const offset = useSharedValue(read ? 0 : 1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 8 * p * offset.value,\n    height: 8 * p * offset.value,\n    backgroundColor: colors.red,\n    borderRadius: 8 * p,\n  }));\n\n  /**\n   * If read, hide red badge\n   */\n  useEffect(() => {\n    if (!read) return;\n    offset.value = withTiming(0, {duration: 200});\n  }, [read]);\n\n  return (\n    <View style={{flexDirection: 'column'}}>\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        <View\n          style={{\n            width: 32 * p,\n            height: 32 * p,\n            borderRadius: 4 * p,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginRight: 16 * p,\n          }}>\n          <View\n            style={{\n              position: 'absolute',\n              justifyContent: 'center',\n              alignItems: 'center',\n              top: -4 * p,\n              right: -4 * p,\n              width: 8 * p,\n              height: 8 * p,\n            }}>\n            <Animated.View style={[animStyle]} />\n          </View>\n          <TablerIcon name={icon} color={colors.accent300} size={16 * p} />\n        </View>\n        <View style={{flexDirection: 'column', flex: 1}}>\n          <Text\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            w=\"r\"\n            numberOfLines={isCourseAlert(notification) ? 1 : 2}>\n            {title}\n          </Text>\n          <Text\n            s={10 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            w=\"r\"\n            numberOfLines={2}>\n            {dateString}\n            {isCourseAlert(notification)\n              ? notification.course_name && ' · ' + notification.course_name\n              : courseName && ' · ' + courseName}\n          </Text>\n        </View>\n      </View>\n      {!!body && (\n        <View\n          style={{\n            marginTop: 12 * p,\n            padding: 16 * p,\n            borderRadius: 4 * p,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n          }}>\n          <RenderHTMLSource\n            source={{\n              html: body,\n            }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default NotificationComponent;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {getRecentCourseMaterial} from '../utils/material';\nimport LiveWidget from '../components/widgets/LiveWidget';\nimport {CourseState} from '../store/coursesSlice';\nimport Section from './Section';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {STATUS} from '../store/status';\nimport DirectoryItem from './DirectoryItem';\nimport Notification from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\n\n// TODO \"Exam is taken?\" feature\n\nconst CourseOverview: FC<{\n  code: string;\n  changeTab: Function;\n}> = ({code, changeTab}) => {\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const materialTree = courseData?.extendedInfo?.material || [];\n\n  const buildField = (name: string, icon: string, index: number) => {\n    return (\n      <View\n        key={icon}\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: (index + 1) % 3 == 0 ? 0 : 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n        />\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}\n          style={{marginLeft: 8 * p}}>\n          {name}\n        </Text>\n      </View>\n    );\n  };\n\n  const fields = useMemo(() => {\n    return [\n      {\n        name:\n          courseData?.extendedInfo?.professor.surname +\n          ' ' +\n          courseData?.extendedInfo?.professor.name,\n        icon: 'user-circle',\n      },\n      {\n        name: courseData?.basicInfo.num_credits + ' ' + t('credits'),\n        icon: 'north-star',\n      },\n      {\n        name: courseData?.basicInfo.code,\n        icon: 'grid-pattern',\n      },\n      {\n        name:\n          t('year') +\n            ' ' +\n            (courseData?.extendedInfo?.degree_year || '') +\n            ', ' +\n            t('period') +\n            ' ' +\n            courseData?.extendedInfo?.year_period || '',\n        icon: 'calendar-time',\n      },\n      // {\n      //   name: '(feature coming soon)',\n      //   icon: 'writing',\n      // },\n    ];\n  }, [courseData]);\n\n  return (\n    <View>\n      {/* Summary */}\n      <Section dark={dark} title={t('summary')}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (\n          <View style={{flexDirection: 'row'}}>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(0, 2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n          </View>\n        )}\n      </Section>\n      {courseData?.extendedInfo?.live_lessons.map(liveClass => (\n        <LiveWidget\n          key={liveClass.meeting_id}\n          liveClass={liveClass}\n          courseName={courseData.basicInfo.name}\n          device={device}\n        />\n      )) || null}\n      {/* Latest files */}\n      <Section dark={dark} title={t('latestFiles')} style={{marginTop: 24}}>\n        <View style={{marginTop: -8}}>\n          {courseData?.status.code == STATUS.PENDING ? (\n            <ActivityIndicator />\n          ) : (\n            getRecentCourseMaterial(materialTree || []).map(file => (\n              <DirectoryItem item={file} dark={dark} />\n            ))\n          )}\n        </View>\n      </Section>\n      {/* Latest alert */}\n      <Section dark={dark} title={t('latestAlert')} style={{marginTop: 16}}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (courseData?.extendedInfo?.notices || []).length > 0 ? (\n          <Notification\n            notification={{\n              ...courseData?.extendedInfo?.notices[0]!,\n              course_code: courseData?.basicInfo.code || '',\n              course_name: courseData?.basicInfo.name || '',\n            }}\n            type={NotificationType.NOTICE}\n            dark={dark}\n          />\n        ) : null}\n      </Section>\n    </View>\n  );\n};\n\nexport default CourseOverview;\n","import {File, MaterialItem} from 'open-polito-api/lib/material';\n\n/**\n * Returns all files from the current directory level only\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getLevelMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree.filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns all files from the whole material tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree\n    .flatMap(item =>\n      item.type == 'file'\n        ? [item]\n        : [item as MaterialItem].concat(getMaterialList(item.children)),\n    )\n    .filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns 3 most recent files from tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getRecentCourseMaterial = (\n  tree: MaterialItem[] | undefined,\n): File[] => {\n  return getMaterialList(tree || [])\n    .sort((a, b) => b.creation_date - a.creation_date)\n    .slice(0, 3);\n};\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport DirectoryItem from './DirectoryItem';\nimport {MaterialItem} from 'open-polito-api/lib/material';\n\nexport default function DirectoryItemRecursive({\n  dark,\n  item,\n}: {\n  dark: boolean;\n  item: MaterialItem;\n}) {\n  const [opened, setOpened] = useState(false);\n\n  return (\n    <View>\n      {item.type == 'file' ? (\n        <DirectoryItem dark={dark} item={item} />\n      ) : (\n        <View>\n          <DirectoryItem\n            dark={dark}\n            item={item}\n            onPress={() => {\n              setOpened(!opened);\n            }}>\n            {opened\n              ? item.children.map(item => (\n                  <DirectoryItemRecursive\n                    dark={dark}\n                    key={item.code}\n                    item={item}\n                  />\n                ))\n              : []}\n          </DirectoryItem>\n        </View>\n      )}\n    </View>\n  );\n}\n","import {Directory, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport DirectoryItemRecursive from './DirectoryItemRecursive';\nimport NoContent from './NoContent';\nimport {CoursesState, CourseState} from '../store/coursesSlice';\nimport DirectoryItem from './DirectoryItem';\n\ntype MaterialDict = {[code: string]: MaterialItem};\n\nexport default function MaterialExplorer({\n  courseId,\n  dark,\n}: {\n  courseId: string; // Set to \"all\" to show all courses\n  dark: boolean;\n}) {\n  const {courses} = useSelector<RootState, CoursesState>(\n    state => state.courses,\n  );\n\n  return (\n    <View>\n      {courseId == 'all'\n        ? courses.map(course => (\n            <DirectoryItemRecursive\n              item={{\n                type: 'dir',\n                code: course.basicInfo.code + course.basicInfo.name,\n                name: course.basicInfo.name,\n                children: course.extendedInfo?.material || [],\n              }}\n              key={course.basicInfo.code + course.basicInfo.name}\n              dark={dark}\n            />\n          ))\n        : (\n            courses.find(\n              course =>\n                course.basicInfo.code + course.basicInfo.name == courseId,\n            )?.extendedInfo?.material || []\n          ).map(item => (\n            <DirectoryItemRecursive item={item} key={item.code} dark={dark} />\n          ))}\n    </View>\n  );\n}\n","import React, {ReactElement, useEffect, useMemo} from 'react';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport NoContent from './NoContent';\nimport NotificationComponent from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\n\nconst CourseAlerts = ({\n  alerts,\n  dark,\n  refreshControl,\n}: {\n  alerts: ExtendedAlert[];\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n        flex: 1,\n      }}>\n      <FlatList\n        style={_styles.container}\n        ListEmptyComponent={<NoContent />}\n        ListHeaderComponent={() => <View style={{height: 24 * p}} />}\n        refreshControl={refreshControl}\n        data={alerts}\n        initialNumToRender={1}\n        keyExtractor={alert => alert.id + alert.date + alert.text.slice(0, 10)}\n        renderItem={a => (\n          <View style={{marginBottom: 24 * p}}>\n            <NotificationComponent\n              type={NotificationType.NOTICE}\n              notification={a.item}\n              dark={dark}\n            />\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default CourseAlerts;\n","import React, {FC, ReactNode, useMemo} from 'react';\nimport {StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from './Text';\n\n/**\n * Wraps a component inside a view showing a badge.\n *\n * The badge is hidden if the number is 0.\n *\n * @param param0\n * @returns\n */\nconst BadgeContainer: FC<{\n  children: ReactNode;\n  style?: ViewStyle;\n  number: number | string;\n}> = ({children, style = {}, number}) => {\n  const badgeText = useMemo(() => {\n    return typeof number === 'string' ? number : number > 99 ? '99+' : number;\n  }, [number]);\n\n  return (\n    <View style={{...style}}>\n      {children}\n      {badgeText !== 0 ? (\n        <View style={_styles.badge}>\n          <Text w=\"r\" s={10 * p} c={colors.gray100}>\n            {badgeText}\n          </Text>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst _styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    width: 20 * p,\n    height: 20 * p,\n    borderRadius: 20 * p,\n    backgroundColor: colors.red,\n    right: -10 * p,\n    top: -10 * p,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default BadgeContainer;\n","import {useNavigation} from '@react-navigation/native';\nimport {Notification} from 'open-polito-api/lib/notifications';\nimport React, {FC, useCallback, useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {AppDispatch, RootState} from '../store/store';\nimport BadgeContainer from './core/BadgeContainer';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\nimport {DrawerActions} from '@react-navigation/native';\nimport {genericPlatform} from '../utils/platform';\nimport {setConfig} from '../store/sessionSlice';\nimport {Configuration} from '../defaultConfig';\n\n// TODO navigation to downloads\n\nexport enum HEADER_TYPE {\n  MAIN = 0,\n  SECONDARY = 1,\n}\n\nexport type HeaderParams = {\n  title: string;\n  headerType: HEADER_TYPE;\n};\n\nconst Header: FC<HeaderParams> = ({title, headerType}) => {\n  const {dark} = useContext(DeviceContext);\n  const notifications = useSelector<RootState, Notification[]>(\n    state => state.user.notifications,\n  );\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationCount = useMemo<number>(() => {\n    return notifications.filter(n => !n.is_read).length;\n  }, [notifications]);\n\n  const navigation = useNavigation();\n\n  const themeToggleIconName = useMemo(\n    () => (dark ? 'moon-stars' : 'sun'),\n    [dark],\n  );\n\n  const toggleTheme = useCallback(() => {\n    dispatch(setConfig({...config, theme: dark ? 'light' : 'dark'}));\n  }, [dark, config, dispatch]);\n\n  // TODO drawer notification count\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      header: {\n        flexDirection: 'row',\n        marginHorizontal: 12 * p,\n        marginVertical: 16 * p,\n        alignItems: 'center',\n      },\n      headerSection: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      headerMiddle: {\n        flex: 2,\n        flexDirection: 'row',\n        justifyContent: 'center',\n      },\n      headerEnd: {\n        justifyContent: 'flex-end',\n      },\n    });\n  }, []);\n\n  return (\n    <View style={_styles.header}>\n      {headerType === HEADER_TYPE.MAIN ? (\n        <>\n          <View style={_styles.headerSection}>\n            {/* TODO add logic for badge number*/}\n            <PressableBase\n              onPress={() => {\n                navigation.dispatch(DrawerActions.toggleDrawer());\n              }}>\n              <BadgeContainer number={0} style={{marginRight: 16 * p}}>\n                <TablerIcon\n                  name=\"menu-2\"\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                />\n              </BadgeContainer>\n            </PressableBase>\n            {/* TODO download manager */}\n            {/* <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            /> */}\n          </View>\n          <View\n            style={{\n              ..._styles.headerSection,\n              ..._styles.headerMiddle,\n            }}>\n            <Text\n              c={dark ? colors.gray100 : colors.gray800}\n              w=\"m\"\n              s={16 * p}\n              numberOfLines={1}>\n              {title}\n            </Text>\n          </View>\n          <View style={{..._styles.headerSection, ..._styles.headerEnd}}>\n            {genericPlatform !== 'mobile' && (\n              <PressableBase onPress={toggleTheme}>\n                <TablerIcon\n                  name={themeToggleIconName}\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                  style={{marginRight: 16 * p}}\n                />\n              </PressableBase>\n            )}\n            <PressableBase onPress={() => navigation.navigate('Search')}>\n              <TablerIcon\n                name=\"search\"\n                size={24 * p}\n                color={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}\n              />\n            </PressableBase>\n            <PressableBase onPress={() => navigation.navigate('Notifications')}>\n              <BadgeContainer number={notificationCount}>\n                <TablerIcon\n                  name=\"bell\"\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                />\n              </BadgeContainer>\n            </PressableBase>\n          </View>\n        </>\n      ) : headerType === HEADER_TYPE.SECONDARY ? (\n        <>\n          <PressableBase onPress={navigation.goBack}>\n            <TablerIcon\n              name=\"arrow-left\"\n              size={24 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n            />\n          </PressableBase>\n          <Text\n            s={16 * p}\n            w=\"m\"\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginLeft: 16 * p}}>\n            {title}\n          </Text>\n        </>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Header;\n","import React, {FC, useMemo, useState} from 'react';\nimport {ScrollView, StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\n// TODO animation\n\nexport type TabsParams = {\n  adjusted?: boolean; // Proper margins\n  items: {label: string; value: string}[];\n  onChange: (i: number) => any;\n  defaultIndex?: number;\n  dark: boolean;\n  style?: ViewStyle;\n};\n\nconst Tabs: FC<TabsParams> = ({\n  adjusted = false,\n  items,\n  onChange,\n  defaultIndex = 0,\n  dark,\n  style = {},\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n  const select = (index: number) => {\n    setSelectedIndex(index);\n    onChange(index);\n  };\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {},\n      adjusted: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n      },\n      tab: {},\n      selectedIndicator: {\n        marginTop: 4 * p,\n        height: 2 * p,\n        backgroundColor: colors.accent300,\n      },\n    });\n  }, [dark, adjusted]);\n\n  return (\n    <View>\n      <ScrollView\n        contentContainerStyle={{\n          ..._styles.container,\n          ...style,\n          ...(adjusted ? _styles.adjusted : {}),\n        }}\n        horizontal\n        showsHorizontalScrollIndicator={false}>\n        {items.map((tab, i) => (\n          <View style={_styles.tab} key={tab.value}>\n            <PressableBase\n              style={{marginRight: 24 * p}}\n              onPress={() => select(i)}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={\n                  i == selectedIndex\n                    ? colors.accent300\n                    : dark\n                    ? colors.gray100\n                    : colors.gray800\n                }>\n                {tab.label}\n              </Text>\n              {i == selectedIndex ? (\n                <View style={_styles.selectedIndicator} />\n              ) : null}\n            </PressableBase>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {RefreshControl, ScrollView, StyleSheet, View} from 'react-native';\nimport CourseVideos from '../ui/CourseVideos';\nimport {useTranslation} from 'react-i18next';\nimport CourseOverview from '../ui/CourseOverview';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport CourseAlerts from '../ui/CourseAlerts';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState, loadCourse} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\n\nexport default function Course({navigation, route}) {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const code = route.params.courseCode;\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const tabs = useMemo(() => {\n    return ['overview', 'material', 'alerts', 'videos'];\n  }, []);\n\n  // Populate course data if empty\n  useEffect(() => {\n    if (\n      courseData &&\n      courseData?.status.code !== STATUS.PENDING &&\n      courseData?.status.code !== STATUS.SUCCESS\n    ) {\n      dispatch(\n        loadCourse({\n          basicCourseInfo: courseData.basicInfo,\n          device: device,\n        }),\n      );\n    }\n  }, [courseData, device, dispatch]);\n\n  const refresh = useCallback(() => {\n    dispatch(\n      loadCourse({\n        basicCourseInfo: courseData!.basicInfo,\n        device: device,\n      }),\n    );\n  }, [courseData, device, dispatch]);\n\n  const refreshing = useMemo(() => {\n    return courseData?.status.code === STATUS.PENDING;\n  }, [courseData]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  const section = useMemo(() => {\n    switch (tabs[currentTab]) {\n      case 'overview':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <CourseOverview code={code} changeTab={setCurrentTab} />\n            <View style={{height: 16 * p}} />\n          </ScrollView>\n        );\n      case 'material':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <MaterialExplorer dark={dark} courseId={code} />\n            <View style={{marginBottom: 16 * p}} />\n          </ScrollView>\n        );\n      case 'alerts':\n        return (\n          <CourseAlerts\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            alerts={\n              courseData?.extendedInfo?.notices.map(alert => {\n                return {\n                  ...alert,\n                  course_code: courseData.basicInfo.code,\n                  course_name: courseData.basicInfo.name,\n                };\n              }) || []\n            }\n          />\n        );\n      case 'videos':\n        return (\n          <CourseVideos\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            courseId={code}\n          />\n        );\n    }\n  }, [\n    _styles.container,\n    code,\n    courseData?.basicInfo.code,\n    courseData?.basicInfo.name,\n    courseData?.extendedInfo?.notices,\n    currentTab,\n    dark,\n    refresh,\n    refreshing,\n    tabs,\n  ]);\n\n  return (\n    <Screen>\n      <Header\n        title={courseData?.basicInfo.name || ''}\n        headerType={HEADER_TYPE.SECONDARY}\n      />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i => {\n          setCurrentTab(i);\n        }}\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n      />\n      <View style={{flex: 1}}>{section}</View>\n    </Screen>\n  );\n}\n","import React, {FC, useCallback, useContext} from 'react';\nimport {View} from 'react-native';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\n\nexport interface ListSelectorModalProps {\n  title: string;\n  items: {label: string; value: string}[];\n  onSelect: (value: string) => any;\n}\n\nconst ListSelectorModal: FC<ListSelectorModalProps> = ({\n  title,\n  items,\n  onSelect,\n}) => {\n  const {dark} = useContext(DeviceContext);\n  const {hideModal} = useContext(ModalContext);\n\n  const _onSelect = useCallback(\n    (value: string) => {\n      onSelect(value);\n      hideModal();\n    },\n    [onSelect, hideModal],\n  );\n\n  return (\n    <ModalBase title={title} dismissable>\n      {items.map(item => (\n        <TouchableOpacity\n          key={item.value}\n          onPress={() => _onSelect(item.value)}>\n          <View\n            style={{\n              paddingVertical: 8 * p,\n            }}>\n            <Text s={12 * p} w=\"r\" c={dark ? colors.gray100 : colors.gray800}>\n              {item.label}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default ListSelectorModal;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {FlatList, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch, useSelector} from 'react-redux';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport {DropdownItem, ExtendedFile} from '../types';\nimport {MaterialItem} from 'open-polito-api/lib/material';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport PressableBase from '../ui/core/PressableBase';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport {DeviceContext} from '../context/Device';\nimport Tabs from '../ui/Tabs';\nimport Text from '../ui/core/Text';\nimport BadgeContainer from '../ui/core/BadgeContainer';\nimport {ModalContext} from '../context/ModalProvider';\nimport ListSelectorModal from '../components/modals/ListSelectorModal';\n\n// TODO more searchable categories\nconst tabs = ['files'];\n\nexport default function Search({navigation}) {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<ExtendedFile[]>([]);\n\n  const [searchFilter, setSearchFilter] = useState('');\n\n  const [quickLoad, setQuickLoad] = useState(true);\n\n  // Timer controlling when to search again\n  const [searchTimer, setSearchTimer] = useState<any>(null);\n\n  // Timer controlling when to show full list\n  const [loadTimer, setLoadTimer] = useState<any>(null);\n\n  const items = useMemo<DropdownItem[]>(() => {\n    return [\n      {\n        label: t('allCourses'),\n        value: '',\n      },\n      ...courses.map(c => ({\n        label: c.basicInfo.name,\n        value: c.basicInfo.code + c.basicInfo.name,\n      })),\n    ];\n  }, [courses]);\n\n  useEffect(() => {\n    handleNewSearch(query);\n  }, [searchFilter, query]);\n\n  /**\n   * Handles a new search\n   * @param txt The query\n   */\n  const handleNewSearch = (txt: string) => {\n    const _query = txt.toLowerCase().trim();\n    if (searchTimer) {\n      clearTimeout(searchTimer);\n    }\n    if (loadTimer) {\n      clearTimeout(loadTimer);\n    }\n    setQuickLoad(true);\n    setSearchTimer(\n      setTimeout(() => {\n        searchMaterial(_query);\n        setLoadTimer(\n          setTimeout(() => {\n            setQuickLoad(false);\n          }, 500),\n        );\n      }, 50),\n    );\n  };\n\n  /**\n   * Recursively finds files that match query\n   *\n   * @param _query Search string\n   * @param _items Array of files or dirs\n   * @param course_name\n   * @param course_code\n   * @returns files\n   */\n  const findFiles = (\n    _query: string,\n    _items: MaterialItem[],\n    course_name: string,\n    course_code: string,\n  ): ExtendedFile[] => {\n    let _results: ExtendedFile[] = [];\n    _items.forEach(item => {\n      if (item.type == 'file') {\n        if ((item.name + item.filename).toLowerCase().includes(_query)) {\n          _results.push({...item, course_code, course_name});\n        }\n      } else if (item.type == 'dir') {\n        _results.push(\n          ...findFiles(_query, item.children, course_name, course_code),\n        );\n      }\n    });\n    return _results;\n  };\n\n  /**\n   * Searches files matching specific query and course, and updates state.\n   */\n  const searchMaterial = (_query: string): void => {\n    // Using setTimeout is a bit hacky, but it works.\n    (async () => {\n      setTimeout(() => {\n        let res: ExtendedFile[] = [];\n        if (_query === '') {\n          setResults([]);\n          return;\n        }\n\n        if (searchFilter) {\n          const _course = courses.find(\n            course =>\n              searchFilter ===\n              `${course.basicInfo.code}${course.basicInfo.name}`,\n          );\n          if (!_course) {\n            res = [];\n            return;\n          }\n          res.push(\n            ...findFiles(\n              _query,\n              _course.extendedInfo?.material || [],\n              _course.basicInfo.name,\n              _course.basicInfo.code,\n            ),\n          );\n        } else {\n          courses.forEach(course => {\n            res.push(\n              ...findFiles(\n                _query,\n                course.extendedInfo?.material || [],\n                course.basicInfo.name,\n                course.basicInfo.code,\n              ),\n            );\n          });\n        }\n\n        setResults(res);\n      }, 0);\n    })();\n  };\n\n  return (\n    <Screen>\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: 12 * p,\n          paddingVertical: 16 * p,\n        }}>\n        <PressableBase\n          onPress={navigation.goBack}\n          style={{marginRight: 16 * p}}>\n          <TablerIcon\n            name=\"arrow-left\"\n            color={dark ? colors.gray200 : colors.gray700}\n            size={24 * p}\n          />\n        </PressableBase>\n        <TextInput\n          initiallyFocused\n          icon=\"search\"\n          dark={dark}\n          placeholder={t('searchForAnything')}\n          autoFocus={true}\n          onChangeText={txt => {\n            const _query = txt.toLowerCase().trim();\n            setQuery(_query);\n            handleNewSearch(_query);\n          }}\n          style={{flex: 1}}\n        />\n        <PressableBase\n          onPress={() => {\n            setModal(\n              <ListSelectorModal\n                items={items}\n                title={t('selectCourseDropdown')}\n                onSelect={value => setSearchFilter(value)}\n              />,\n            );\n          }}\n          style={{marginLeft: 16 * p}}>\n          <BadgeContainer number={searchFilter === '' ? 0 : ''}>\n            <TablerIcon\n              name=\"adjustments\"\n              color={dark ? colors.gray200 : colors.gray700}\n              size={24 * p}\n            />\n          </BadgeContainer>\n        </PressableBase>\n      </View>\n      <Tabs\n        dark={dark}\n        items={[{label: t('files'), value: 'files'}]}\n        onChange={() => {}}\n        adjusted\n      />\n      <FlatList\n        style={{paddingTop: 24 * p, paddingHorizontal: 16 * p}}\n        contentContainerStyle={{flexGrow: 1}}\n        data={quickLoad ? results.slice(0, 10) : results}\n        keyExtractor={item => item.code}\n        initialNumToRender={10}\n        maxToRenderPerBatch={10}\n        renderItem={({item}) => {\n          return (\n            <View key={item.code}>\n              <DirectoryItem\n                item={item}\n                key={item.code}\n                dark={dark}\n                course={item.course_name}\n              />\n            </View>\n          );\n        }}\n        ListEmptyComponent={\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <TablerIcon\n              name=\"search-off\"\n              size={64 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View\n              style={{\n                marginTop: 8 * p,\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray200 : colors.gray700}\n                style={{marginBottom: 8 * p}}>\n                {t('noResults')}\n              </Text>\n              <Text s={10 * p} w=\"m\" c={dark ? colors.gray300 : colors.gray600}>\n                {t('tryADifferentTerm')}\n              </Text>\n            </View>\n          </View>\n        }\n        ListFooterComponent={<View style={{marginBottom: 24 * p}}></View>}\n      />\n    </Screen>\n  );\n}\n","import {Recording} from 'open-polito-api/lib/course';\nimport React from 'react';\n\nconst VideoPlayer = ({video}: {video: Recording}) => {\n  return <video src={video.url} controls autoPlay />;\n};\n\nexport default VideoPlayer;\n","import React, {FC, useContext, useMemo, useState} from 'react';\nimport {FlatList, useWindowDimensions, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {Recording} from 'open-polito-api/lib/course';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport Screen from '../ui/Screen';\nimport Text from '../ui/core/Text';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport VideoCard from '../ui/VideoCard';\nimport moment from 'moment';\nimport VideoPlayer from '../ui/VideoPlayer';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {DeviceSize} from '../types';\nimport {genericPlatform} from '../utils/platform';\n\n// TODO custom video controls design\n// TODO \"cast to\" feature\n// TODO video download\n\ninterface VideoInfoProps {\n  courseData?: CourseState;\n  video: Recording;\n  dark: boolean;\n}\n\nconst VideoInfo: FC<VideoInfoProps> = ({courseData, video, dark}) => {\n  return (\n    <View>\n      <Text s={16 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n        {video.title}\n      </Text>\n      <Text\n        s={12 * p}\n        w=\"m\"\n        c={dark ? colors.gray200 : colors.gray500}\n        style={{marginTop: 8 * p}}>\n        {courseData?.basicInfo.name} · {moment(video.date).format('ll')}\n      </Text>\n\n      <View style={{marginVertical: 24 * p}}>\n        {/* <Button text={t('download (feature coming soon)')} secondary /> */}\n      </View>\n    </View>\n  );\n};\n\ninterface VideoPlayerWrapperProps {\n  currentVideo: Recording;\n  windowWidth?: number;\n  windowHeight?: number;\n}\n\nconst VideoPlayerWrapper: FC<VideoPlayerWrapperProps> = ({\n  currentVideo,\n  windowWidth,\n  windowHeight,\n}) => {\n  return (\n    <View\n      style={[\n        {width: '100%'},\n        genericPlatform !== 'mobile' && {\n          flex: 1,\n        },\n        !!windowWidth && {\n          height: windowWidth / 1.78,\n        },\n        !!windowHeight && {\n          maxHeight: windowHeight / 2,\n        },\n      ]}>\n      <VideoPlayer video={currentVideo} />\n    </View>\n  );\n};\n\ninterface RecommendedFlatListProps {\n  currentVideo: Recording;\n  relatedVideos: Recording[];\n  dark: boolean;\n  setCurrentVideo: (video: Recording) => any;\n  courseData?: CourseState;\n}\n\nconst RecommendedFlatList: FC<RecommendedFlatListProps> = ({\n  currentVideo,\n  relatedVideos,\n  dark,\n  setCurrentVideo,\n  courseData,\n}) => {\n  const {t} = useTranslation();\n  return (\n    <FlatList\n      data={relatedVideos}\n      renderItem={({item}) => (\n        <View\n          style={[\n            item.url === currentVideo.url\n              ? {backgroundColor: dark ? colors.gray600 : colors.gray300}\n              : {},\n          ]}>\n          <VideoCard\n            item={item}\n            dark={dark}\n            onPress={() => setCurrentVideo(item)}\n          />\n        </View>\n      )}\n      keyExtractor={item => item.url}\n      ListHeaderComponent={() => (\n        <View\n          style={{\n            paddingHorizontal: 16 * p,\n            paddingBottom: 16 * p,\n          }}>\n          {!!courseData && (\n            <View style={{marginTop: 16 * p}}>\n              <VideoInfo\n                video={currentVideo}\n                courseData={courseData}\n                dark={dark}\n              />\n            </View>\n          )}\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n            {t('relatedVideos')}\n          </Text>\n        </View>\n      )}\n    />\n  );\n};\n\nexport default function Video({route}) {\n  const {video, courseId} = route.params;\n\n  const [currentVideo, setCurrentVideo] = useState<Recording>(video);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name === courseId,\n    ),\n  );\n\n  const relatedVideos = useMemo<Recording[]>(() => {\n    return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n      (a, b) => b.date - a.date,\n    );\n  }, [courseData]);\n\n  const {dark, size} = useContext(DeviceContext);\n\n  const {width, height} = useWindowDimensions();\n\n  const memoizedVideoPlayer = useMemo(\n    () => (\n      <VideoPlayerWrapper\n        currentVideo={currentVideo}\n        windowWidth={genericPlatform === 'mobile' ? width : undefined}\n        windowHeight={\n          size >= DeviceSize.lg && genericPlatform === 'mobile'\n            ? height\n            : undefined\n        }\n      />\n    ),\n    [currentVideo, height, size, width],\n  );\n  return (\n    <Screen>\n      <Header title={video.title} headerType={HEADER_TYPE.SECONDARY} />\n      <View style={{flex: 1, overflow: 'scroll'}}>\n        <View\n          style={\n            size >= DeviceSize.lg\n              ? {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  flex: 1,\n                  paddingHorizontal: 64 * p,\n                }\n              : {\n                  flexDirection: 'column',\n                  justifyContent: 'flex-start',\n                  flex: 1,\n                }\n          }>\n          <View\n            style={\n              size >= DeviceSize.lg\n                ? {flex: 2}\n                : genericPlatform === 'mobile' && {flex: 1}\n            }>\n            <View>{memoizedVideoPlayer}</View>\n            <View\n              style={\n                size >= DeviceSize.lg ? {marginTop: 24 * p, flex: 1} : {flex: 1}\n              }>\n              {size >= DeviceSize.lg ? (\n                <VideoInfo\n                  courseData={courseData}\n                  video={currentVideo}\n                  dark={dark}\n                />\n              ) : (\n                <View style={{flex: 1}}>\n                  <RecommendedFlatList\n                    courseData={courseData}\n                    currentVideo={currentVideo}\n                    relatedVideos={relatedVideos}\n                    setCurrentVideo={setCurrentVideo}\n                    dark={dark}\n                  />\n                </View>\n              )}\n            </View>\n          </View>\n          {size >= DeviceSize.lg && (\n            <>\n              <View style={{width: 32 * p}} />\n              <View style={{flex: 1}}>\n                <RecommendedFlatList\n                  currentVideo={currentVideo}\n                  relatedVideos={relatedVideos}\n                  setCurrentVideo={setCurrentVideo}\n                  dark={dark}\n                />\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n    </Screen>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, ScrollView, StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport PressableBase from '../ui/core/PressableBase';\nimport Text from '../ui/core/Text';\nimport {useNavigation} from '@react-navigation/native';\nimport Section from '../ui/Section';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {STATUS} from '../store/status';\nimport Notification from '../ui/Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {ExtendedAlert} from '../types';\n\n// TODO \"quick access\" section using recently opened sections\n// TODO open notification section\n// TODO show update widget\n// TODO show live classes\n\nconst sectionsData = [\n  {name: 'Courses', icon: 'school'},\n  {name: 'Material', icon: 'folders'},\n  {name: 'Email', icon: 'mail'},\n  {name: 'ExamSessions', icon: 'ballpen'},\n];\nconst sectionColors = [colors.accent300, colors.red, '#9b51e0', '#f2c94c'];\n\nconst Home = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n  const navigation = useNavigation();\n\n  const {courses, recentMaterial, loadExtendedCourseInfoStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const latestAlert = useMemo<ExtendedAlert>(() => {\n    return courses\n      .flatMap(\n        c =>\n          c.extendedInfo?.notices.map(notice => {\n            return {\n              ...notice,\n              course_name: c.basicInfo.name,\n              course_code: c.basicInfo.code,\n            };\n          }) || [],\n      )\n      .sort((a, b) => b.date - a.date)[0];\n  }, [courses]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n      topSections: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingBottom: 16,\n      },\n      topSection: {\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionInner: {\n        width: 40 * p,\n        height: 40 * p,\n        borderRadius: 4 * p,\n        marginBottom: 4 * p,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionText: {\n        position: 'absolute',\n        bottom: -16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header title={t('home')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          <PressableBase\n            onPress={() => {\n              navigation.navigate('Search');\n            }}>\n            <TextInput\n              editable={false}\n              placeholder={t('searchForAnything')}\n              dark={dark}\n              icon=\"search\"\n              style={{marginBottom: 32 * p}}\n            />\n          </PressableBase>\n          {/* Top sections */}\n          <View style={_styles.topSections}>\n            {sectionsData.map((btn, i) => (\n              <PressableBase\n                key={btn.name}\n                style={_styles.topSection}\n                onPress={() => {\n                  navigation.navigate(btn.name);\n                }}>\n                <View\n                  style={{\n                    ..._styles.topSectionInner,\n                    backgroundColor: sectionColors[i],\n                  }}>\n                  <TablerIcon\n                    name={btn.icon}\n                    size={24 * p}\n                    color={colors.gray100}\n                  />\n                </View>\n                <Text\n                  numberOfLines={1}\n                  s={10 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}\n                  style={_styles.topSectionText}>\n                  {t(btn.name[0].toLowerCase() + btn.name.slice(1))}\n                </Text>\n              </PressableBase>\n            ))}\n            <PressableBase\n              style={_styles.topSection}\n              onPress={() => {\n                navigation.toggleDrawer();\n              }}>\n              <View\n                style={{\n                  ..._styles.topSectionInner,\n                  borderColor: colors.gray200,\n                  borderWidth: 1 * p,\n                }}>\n                <TablerIcon name=\"plus\" size={24 * p} color={colors.gray200} />\n              </View>\n              <Text\n                numberOfLines={1}\n                s={10 * p}\n                w=\"r\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={_styles.topSectionText}>\n                {t('more')}\n              </Text>\n            </PressableBase>\n          </View>\n\n          {/* Latest files */}\n          <Section\n            dark={dark}\n            title={t('latestFiles')}\n            style={{marginTop: 32 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              recentMaterial.slice(0, 3).map(file => (\n                <View key={file.code}>\n                  <DirectoryItem\n                    relativeDate\n                    dark={dark}\n                    item={file}\n                    course={file.course_name}\n                  />\n                </View>\n              ))\n            )}\n          </Section>\n\n          {/* Latest alert */}\n          <Section\n            dark={dark}\n            title={t('latestAlert')}\n            style={{marginTop: 24 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              <Notification\n                type={NotificationType.NOTICE}\n                notification={latestAlert}\n                dark={dark}\n              />\n            )}\n          </Section>\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n};\n\nexport default Home;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch} from 'react-redux';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch} from '../store/store';\nimport WebView, {WebViewNavigation} from 'react-native-webview';\nimport {getUnreadEmailCount} from '../store/userSlice';\nimport Animated from 'react-native-reanimated';\nimport {emailUrl} from 'open-polito-api/lib/user';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport {genericPlatform} from '../utils/platform';\nimport {Device} from 'open-polito-api/lib/device';\n\n// TODO dark mode in WebView\n\nconst getWebMailUrl = async (device: Device) => {\n  const url = await emailUrl(device);\n  return url;\n};\n\nexport default function Email() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [mounted, setMounted] = useState(true);\n  const [loaded, setLoaded] = useState(false);\n  const [webViewRef, setWebViewRef] = useState<WebView | null>(null);\n  const [webMailUrl, setWebMailUrl] = useState('');\n\n  useEffect(() => {\n    return () => setMounted(false);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      dispatch(getUnreadEmailCount(device));\n      !webMailUrl && mounted && setWebMailUrl(await getWebMailUrl(device));\n      webMailUrl && genericPlatform !== 'mobile' && setLoaded(true);\n    })();\n  }, [device, dispatch, mounted, webMailUrl]);\n\n  const handleNavigationStateChange = (state: WebViewNavigation) => {\n    if (genericPlatform !== 'mobile') {\n      return;\n    }\n    if (!state.loading && !loaded && mounted) {\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <Screen>\n      <Header title={t('email')} headerType={HEADER_TYPE.MAIN} />\n      <Animated.View style={{flex: 1}}>\n        {loaded ? (\n          genericPlatform !== 'mobile' ? (\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('emailCannotBeShownWeb', {\n                  genericPlatform,\n                })}\n              </Text>\n              <Text\n                href={webMailUrl}\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('openBrowser')}\n              </Text>\n            </View>\n          ) : null\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={dark ? colors.gray100 : colors.gray800}\n              style={{marginRight: 16 * p}}>\n              {t('loading')}\n            </Text>\n            <ActivityIndicator />\n          </View>\n        )}\n        {genericPlatform === 'mobile' && (\n          <View\n            style={{\n              flex: loaded ? 1 : 0,\n            }}>\n            <WebView\n              ref={ref => !ref && setWebViewRef(ref)}\n              source={{uri: webMailUrl}}\n              onNavigationStateChange={handleNavigationStateChange}\n            />\n          </View>\n        )}\n      </Animated.View>\n    </Screen>\n  );\n}\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {StyleSheet, Switch, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type SettingsItemProps = {\n  icon?: string;\n  name: string;\n  description?: string;\n  disabled?: boolean;\n  settingsFunction: () => any;\n  toggle?: boolean; // whether to show toggle\n  toggleValue?: boolean; // value of toggle\n  padding?: boolean; // adds horizontal padding\n  paddingBottom?: boolean; // add bottom padding (e.g. when not last item)\n  children?: ReactNode;\n};\n\nconst SettingsItem: FC<SettingsItemProps> = ({\n  icon,\n  name,\n  description,\n  disabled = false,\n  settingsFunction = () => {},\n  toggle = false,\n  toggleValue,\n  padding = false,\n  paddingBottom = true,\n  children = null,\n}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      textContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n      },\n    });\n  }, []);\n\n  return (\n    <View\n      style={[\n        padding ? {paddingHorizontal: 16 * p} : {},\n        paddingBottom ? {paddingBottom: 16 * p} : {},\n      ]}>\n      <PressableBase\n        disabled={!!children || disabled}\n        onPress={settingsFunction}\n        android_ripple={{color: colors.gray200}}\n        style={[_styles.container, disabled ? {opacity: 0.5} : {}]}>\n        {icon ? (\n          <View style={{marginRight: 12 * p}}>\n            <TablerIcon\n              name={icon}\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n          </View>\n        ) : null}\n        <View style={_styles.textContainer}>\n          <Text\n            w=\"m\"\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginBottom: 2 * p}}>\n            {name}\n          </Text>\n          {description ? (\n            <Text w=\"r\" s={10 * p} c={dark ? colors.gray200 : colors.gray700}>\n              {description}\n            </Text>\n          ) : null}\n        </View>\n        {toggle ? (\n          <Switch value={toggleValue} onChange={settingsFunction} />\n        ) : null}\n      </PressableBase>\n      <View>{children}</View>\n    </View>\n  );\n};\nexport default SettingsItem;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig, setToast} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport Logger from '../../utils/Logger';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\n\nconst SettingsEnableLoggingModal = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const enableLogging = () => {\n    dispatch(setConfig({...config, logging: !config.logging}));\n    dispatch(\n      setToast({\n        message: t('restartToastMessage'),\n        type: 'warn',\n        visible: true,\n      }),\n    );\n  };\n\n  return (\n    <BaseActionConfirmModal\n      title={t('debugEnableLogging')}\n      icon=\"alert-triangle\"\n      accentColor={colors.red}\n      onConfirm={enableLogging}>\n      <RenderHTMLSource\n        source={{\n          html: t('debugEnableLoggingDialogMessage', {\n            path: Logger.logsDirectoryPath,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default SettingsEnableLoggingModal;\n","import React, {useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport SettingsItem, {SettingsItemProps} from '../ui/SettingsItem';\nimport {useDispatch} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport {AppDispatch, RootState} from '../store/store';\nimport {resetConfig, setConfig, setToast} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\nimport {Configuration} from '../defaultConfig';\nimport Config from 'react-native-config';\nimport {sendTestPushNotification} from 'open-polito-api/lib/notifications';\nimport Analytics from 'appcenter-analytics';\nimport version from '../../version.json';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport colors from '../colors';\nimport SettingsEnableLoggingModal from '../components/modals/SettingsEnableLoggingModal';\nimport {ModalContext} from '../context/ModalProvider';\n\n/**\n * Creates Settings item component from data\n * @param item Settings item data\n * @returns Settings item component\n */\nexport const buildSettingsItem = (item: SettingsItemProps) => {\n  return <SettingsItem key={item.name} {...item} />;\n};\n\nexport default function Settings() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const {setModal} = useContext(ModalContext);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  // const _setConfig = (config: Configuration) => {\n  //   dispatch(setConfig(config));\n  // };\n\n  // const showRestartAppNeeded = () => {\n  //   dispatch(\n  //     setToast({\n  //       message: t('restartToastMessage'),\n  //       type: 'warn',\n  //       visible: true,\n  //     }),\n  //   );\n  // };\n\n  // const settingsItems: SettingsItemProps[] = [\n  //   {\n  //     icon: 'bell',\n  //     name: t('notifications'),\n  //     description: t('notificationsDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  //   {\n  //     icon: 'moon-stars',\n  //     name: t('darkMode'),\n  //     settingsFunction: () => notImplemented(t),\n  //     toggle: true,\n  //     toggleValue: config.theme == 'dark',\n  //   },\n  //   {\n  //     icon: 'info-circle',\n  //     name: t('about'),\n  //     description: t('aboutDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  // ];\n\n  const debugSettingsItems: SettingsItemProps[] = [\n    {\n      icon: 'bug',\n      name: t('debugEnableLogging'),\n      description: t('debugEnableLoggingDesc'),\n      settingsFunction: () => {\n        if (!config.logging) {\n          setModal(<SettingsEnableLoggingModal />);\n        } else {\n          dispatch(setConfig({...config, logging: false}));\n        }\n      },\n      toggle: true,\n      toggleValue: config.logging,\n    },\n    {\n      icon: 'arrow-back',\n      name: t('debugResetConfig'),\n      description: t('debugResetConfigDesc'),\n      settingsFunction: () => {\n        dispatch(resetConfig());\n      },\n    },\n    {\n      icon: 'bell-ringing',\n      name: t('debugTestNotification'),\n      description: t('debugTestNotificationDesc'),\n      settingsFunction: () => {\n        dispatch(\n          setToast({message: t('pleaseWait'), type: 'info', visible: true}),\n        );\n        (async () => {\n          await sendTestPushNotification(device);\n        })();\n      },\n    },\n  ];\n\n  // const experimentalSettingsItems: SettingsItemProps[] = [];\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('settings')} />\n      <View style={_styles.container}>\n        {/* <Section dark={dark} title={t('generalSettings')}>\n          {settingsItems.map(item => buildSettingsItem(item))}\n        </Section> */}\n\n        {/* Debug options */}\n        {parseInt(Config.ENABLE_DEBUG_OPTIONS!) ? (\n          <Section dark={dark} title={t('debugSettings')}>\n            <View style={{marginTop: -8 * p}}>\n              {debugSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null}\n        {/* Experimental options */}\n        {/* {parseInt(Config.ENABLE_EXPERIMENTAL_OPTIONS) ? (\n          <Section dark={dark} title={t('experimentalSettings')}>\n            <View>\n              {experimentalSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null} */}\n      </View>\n      <View\n        style={{\n          marginTop: 8,\n          marginBottom: 16,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n          {'v' + version.version}\n        </Text>\n      </View>\n    </Screen>\n  );\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useContext} from 'react';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  CourseState,\n  getRecentMaterial,\n  loadCourse,\n} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport {useNavigation} from '@react-navigation/core';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport PressableBase from '../ui/core/PressableBase';\n\n// TODO folder stats (n of files, folder size)\n// TODO download features (e.g. download folders too, selection feature, ...)\n\nconst tabs = ['explore', 'recentlyAdded'];\n\nexport default function Material() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigation = useNavigation();\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const {getRecentMaterialStatus, recentMaterial} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const [materialLoaded, setMaterialLoaded] = useState(false);\n  const [allLoaded, setAllLoaded] = useState(false);\n\n  /**\n   * Initial setup.\n   * Load all course data if not already loaded, set {@link materialLoaded} to true if already loaded.\n   */\n  useEffect(() => {\n    let _materialLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code != STATUS.SUCCESS) {\n        _materialLoaded = false;\n        dispatch(\n          loadCourse({\n            basicCourseInfo: course.basicInfo,\n            device: device,\n          }),\n        );\n      }\n    });\n    _materialLoaded && setMaterialLoaded(true);\n  }, []);\n\n  /**\n   * Called each time {@link courses} changes.\n   * Check if data is loaded, then set {@link materialLoaded} to true if so.\n   */\n  useEffect(() => {\n    if (!materialLoaded) {\n      let _materialLoaded = true;\n      courses.forEach(course => {\n        if (course.status.code != STATUS.SUCCESS) {\n          _materialLoaded = false;\n        }\n      });\n      _materialLoaded && setMaterialLoaded(true);\n    }\n  }, [courses]);\n\n  /**\n   * When {@link materialLoaded}, get recent material only if not already set.\n   */\n  useEffect(() => {\n    if (\n      materialLoaded &&\n      getRecentMaterialStatus.code != STATUS.SUCCESS &&\n      getRecentMaterialStatus.code != STATUS.PENDING\n    ) {\n      dispatch(getRecentMaterial());\n    }\n  }, [materialLoaded]);\n\n  /**\n   * Finally, when recent material has been loaded, set {@link allLoaded} to true.\n   */\n  useEffect(() => {\n    if (getRecentMaterialStatus.code == STATUS.SUCCESS) {\n      setAllLoaded(true);\n    }\n  }, [getRecentMaterialStatus]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('material')} />\n      <FlatList\n        data={[0]}\n        renderItem={() => (\n          <View style={_styles.container}>\n            <PressableBase\n              onPress={() => {\n                navigation.navigate('Search');\n              }}>\n              <TextInput\n                editable={false}\n                placeholder={t('searchForAnything')}\n                dark={dark}\n                icon=\"search\"\n              />\n            </PressableBase>\n            <Tabs\n              style={{marginTop: 24 * p, marginBottom: 16 * p}}\n              onChange={i => setSelectedTab(i)}\n              dark={dark}\n              items={tabs.map(tab => {\n                return {label: t(tab), value: tab};\n              })}\n            />\n            {selectedTab == 0 ? (\n              <MaterialExplorer courseId=\"all\" dark={dark} />\n            ) : (\n              <FlatList\n                data={recentMaterial}\n                keyExtractor={item => item.code}\n                renderItem={({item}) => (\n                  <DirectoryItem\n                    item={item}\n                    key={item.code}\n                    dark={dark}\n                    course={item.course_name}\n                  />\n                )}\n              />\n            )}\n          </View>\n        )}\n      />\n    </Screen>\n  );\n}\n","const sections = [\n  {\n    name: 'general',\n    items: [\n      {\n        name: 'Home',\n        icon: 'layout-dashboard',\n      },\n      {\n        name: 'Email',\n        icon: 'mail',\n      },\n      {\n        name: 'Notifications',\n        icon: 'bell',\n      },\n      {\n        name: 'Settings',\n        icon: 'settings',\n      },\n    ],\n  },\n  {\n    name: 'classes',\n    items: [\n      {\n        name: 'Courses',\n        icon: 'school',\n      },\n      {\n        name: 'Material',\n        icon: 'folders',\n      },\n      {\n        name: 'Bookings',\n        icon: 'ticket',\n      },\n      {\n        name: 'Timetable',\n        icon: 'clock',\n      },\n    ],\n  },\n  {\n    name: 'exams',\n    items: [\n      {\n        name: 'Exams',\n        icon: 'book-2',\n      },\n      {\n        name: 'ExamSessions',\n        icon: 'ballpen',\n      },\n    ],\n  },\n  {\n    name: 'headquarters',\n    items: [\n      {\n        name: 'Maps',\n        icon: 'map-2',\n      },\n      {\n        name: 'Classrooms',\n        icon: 'building-arch',\n      },\n      {\n        name: 'People',\n        icon: 'user',\n      },\n    ],\n  },\n];\n\nexport default sections;\n","import {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport React, {FC, useCallback, useContext, useMemo, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport version from '../../version.json';\nimport sections from '../sections';\nimport {useTranslation} from 'react-i18next';\nimport TablerIcon from './core/TablerIcon';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {PersonalData} from 'open-polito-api/lib/user';\nimport {logout} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\n\n// TODO remove when sections completed\nconst isSectionUnavailable = (name: string) => {\n  return ['Maps', 'Classrooms', 'People'].includes(name);\n};\n\ntype DrawerParams = {\n  dark: boolean;\n} & DrawerContentComponentProps;\n\n// TODO proper separation of logic\n// TODO badges\n\nconst orderedSections = sections.flatMap(sec => sec.items.map(i => i.name));\n\nconst getShortenedDegreeName = (degreeType: string, degreeName: string) => {\n  const prefix =\n    degreeType.toLowerCase() == 'corso di laurea in'\n      ? 'L3'\n      : degreeType.toLowerCase() == 'corso di laurea magistrale in'\n      ? 'LM'\n      : '';\n  const suffix = degreeName\n    .toLowerCase()\n    .replace('ingegneria', '')\n    .toUpperCase()\n    .trim();\n  return `${prefix} ${suffix}`;\n};\n\n// TODO fix bug where highlighted selection doesn't update if pressing back button\n\nconst Drawer: FC<DrawerParams> = ({dark, ...props}) => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const deviceContext = useContext(DeviceContext);\n\n  const userInfo = useSelector<RootState, PersonalData | null>(\n    state => state.user.userInfo,\n  );\n\n  const shortDegreeName = useMemo(() => {\n    if (userInfo == null) {\n      return '';\n    }\n    return getShortenedDegreeName(userInfo.degree_type, userInfo.degree_name);\n  }, [userInfo]);\n\n  const [current, setCurrent] = useState(orderedSections[0]);\n\n  // TODO optimize (maybe with useMemo)\n  const createButtons = () => {\n    return sections.map(sec => (\n      <View style={_styles.category}>\n        <View style={{marginBottom: 8 * p}}>\n          <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {t(sec.name).toUpperCase()}\n          </Text>\n        </View>\n        {sec.items.map(screen => (\n          <PressableBase\n            disabled={isSectionUnavailable(screen.name)}\n            style={{\n              paddingVertical: 4 * p,\n              flexDirection: 'row',\n              alignItems: 'center',\n              opacity: isSectionUnavailable(screen.name) ? 0.3 : 1,\n            }}\n            key={screen.name}\n            onPress={() => {\n              setCurrent(screen.name);\n              props.navigation.navigate(screen.name);\n            }}>\n            <TablerIcon\n              name={screen.icon}\n              size={24 * p}\n              color={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {t(screen.name.charAt(0).toLowerCase() + screen.name.slice(1))}\n            </Text>\n          </PressableBase>\n        ))}\n      </View>\n    ));\n  };\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout(deviceContext.device));\n  }, [dispatch, deviceContext]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      drawerScrollView: {\n        backgroundColor: dark ? colors.gray800 : colors.gray100,\n      },\n      drawer: {\n        flexDirection: 'column',\n        paddingHorizontal: 16 * p,\n        paddingVertical: 24 * p,\n      },\n      hr: {\n        backgroundColor: colors.gray500,\n        height: 1 * p,\n        marginBottom: 16 * p,\n      },\n      category: {\n        marginBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <DrawerContentScrollView style={_styles.drawerScrollView} {...props}>\n      <View style={_styles.drawer}>\n        <View style={{justifyContent: 'flex-start', marginBottom: 16 * p}}>\n          <Text s={14 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n            Open PoliTo\n          </Text>\n          <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n            v{version.version}\n          </Text>\n        </View>\n        <View style={_styles.hr} />\n        {createButtons()}\n        <View style={_styles.hr} />\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <View\n            style={{\n              width: 24 * p,\n              height: 24 * p,\n              borderRadius: 24 * p,\n              backgroundColor: colors.accent100,\n              marginRight: 8 * p,\n            }}\n          />\n          <View style={{justifyContent: 'flex-start', flex: 1}}>\n            <Text\n              numberOfLines={1}\n              w=\"b\"\n              c={dark ? colors.gray100 : colors.gray800}\n              s={12 * p}>\n              {userInfo?.surname} {userInfo?.name}\n            </Text>\n            <Text\n              numberOfLines={1}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}\n              s={10 * p}>\n              {shortDegreeName}\n            </Text>\n          </View>\n          <PressableBase\n            onPress={() => {\n              handleLogout();\n            }}>\n            <TablerIcon name=\"logout\" size={24 * p} color={colors.accent300} />\n          </PressableBase>\n        </View>\n      </View>\n    </DrawerContentScrollView>\n  );\n};\n\nexport default Drawer;\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {LayoutChangeEvent, StyleSheet, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\nimport Text from './Text';\n\ninterface PressableCardProps {\n  dark: boolean;\n  title?: string;\n  description?: string;\n  onPress: () => any;\n  expanded?: boolean;\n  sideElement?: ReactNode; // Element to show right next to title and description\n  expandedElement?: ReactNode; // Element to show only when card expanded\n  children?: ReactNode; // Always shown\n}\n\nconst PressableCard: FC<PressableCardProps> = ({\n  dark,\n  title,\n  description,\n  onPress,\n  expanded,\n  sideElement,\n  expandedElement,\n  children,\n}) => {\n  const rotation = useSharedValue(0);\n\n  /**\n   * Opacity of the whole component\n   */\n  const opacity = useSharedValue(0);\n\n  const sideElementOpacity = useSharedValue(1);\n\n  const [computedHeight, setComputedHeight] = useState<number | null>(null);\n  const expandedElementHeight = useSharedValue(0);\n  const expandedElementOpacity = useSharedValue(0);\n\n  const animCardStyle = useAnimatedStyle(() => ({\n    opacity: opacity.value,\n  }));\n\n  /**\n   * Element that will actually be rendered in the expanded section\n   */\n  const [expandedToRender, setExpandedToRender] = useState<ReactNode | null>(\n    expandedElement,\n  );\n\n  /**\n   * Update expanded element, giving time to complete the animation\n   */\n  useEffect(() => {\n    let result: ReactNode | undefined;\n    if (expanded || !computedHeight) {\n      result = expandedElement;\n    } else {\n      result = <View />;\n    }\n    result &&\n      setTimeout(\n        () => {\n          setExpandedToRender(result);\n        },\n        expanded ? 0 : 200,\n      );\n  }, [expanded, expandedElement, computedHeight]);\n\n  /**\n   * Callback used when the height of the expanded element has been computed\n   */\n  const onExpandedElementLayout = useCallback(\n    (e: LayoutChangeEvent) => {\n      // Only execute once, i.e. when the computedHeight is still null\n      if (computedHeight !== null) {\n        return;\n      }\n      // Make component visible again\n      opacity.value = withTiming(1, {\n        duration: 200,\n      });\n      // Set computed height\n      setComputedHeight(e.nativeEvent.layout.height);\n    },\n    [computedHeight, opacity],\n  );\n\n  useEffect(() => {\n    if (computedHeight === 0) {\n      return;\n    }\n    const condition = expanded && expandedElement;\n    rotation.value = withTiming(condition ? 90 : 0, {duration: 200});\n    expandedElementOpacity.value = withTiming(condition ? 1 : 1, {\n      duration: 400,\n    });\n  }, [\n    expanded,\n    rotation,\n    expandedElementOpacity,\n    expandedElement,\n    computedHeight,\n  ]);\n\n  useEffect(() => {\n    sideElementOpacity.value = withTiming(sideElement ? 1 : 0, {duration: 400});\n  }, [sideElement, sideElementOpacity]);\n\n  const animChevronStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        rotate: `${rotation.value}deg`,\n      },\n    ],\n  }));\n\n  /**\n   * When computed height is set, change the height\n   */\n  useEffect(() => {\n    if (computedHeight) {\n      expandedElementHeight.value = withTiming(expanded ? computedHeight : 0, {\n        duration: 200,\n      });\n    }\n  }, [computedHeight, expandedElementHeight, expanded]);\n\n  const expandedElementStyle = useAnimatedStyle(() => ({\n    ...(computedHeight !== null\n      ? {\n          height: expandedElementHeight.value,\n        }\n      : {}),\n    opacity: withTiming(expanded && computedHeight !== null ? 1 : 0, {\n      duration: 200,\n    }),\n  }));\n\n  const sideElementStyle = useAnimatedStyle(() => ({\n    opacity: sideElementOpacity.value,\n  }));\n\n  const styles = useMemo(() => {\n    return StyleSheet.create({\n      button: {\n        paddingVertical: 8 * p,\n        paddingLeft: 16 * p,\n        paddingRight: 8 * p,\n        marginBottom: 16 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        borderRadius: 4 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Animated.View style={[animCardStyle]}>\n      <PressableBase\n        onPress={onPress}\n        android_ripple={{color: dark ? colors.gray400 : colors.gray500}}\n        style={styles.button}>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: expandedElement ? 'flex-start' : 'center',\n          }}>\n          <View style={{flex: 1}}>\n            <View style={{flexDirection: 'row', alignItems: 'center'}}>\n              <View style={{flex: 4}}>\n                {title && (\n                  <Text\n                    s={12 * p}\n                    c={dark ? colors.gray200 : colors.gray700}\n                    w=\"m\">\n                    {title}\n                  </Text>\n                )}\n                {description && (\n                  <Text\n                    s={10 * p}\n                    c={dark ? colors.gray300 : colors.gray600}\n                    w=\"r\">\n                    {description}\n                  </Text>\n                )}\n              </View>\n              <Animated.View\n                style={[sideElementStyle, {flex: sideElement ? 1 : 0}]}>\n                {sideElement}\n              </Animated.View>\n              <View\n                style={{\n                  justifyContent: 'flex-start',\n                  alignItems: 'center',\n                }}>\n                <View>\n                  <Animated.View style={[animChevronStyle]}>\n                    <TablerIcon\n                      name=\"chevron-right\"\n                      color={dark ? colors.gray200 : colors.gray700}\n                      size={24 * p}\n                    />\n                  </Animated.View>\n                </View>\n              </View>\n            </View>\n            <View style={{paddingRight: 8 * p}}>\n              {children}\n              <Animated.View\n                onLayout={e => onExpandedElementLayout(e)}\n                style={[expandedElementStyle]}>\n                {expandedToRender}\n              </Animated.View>\n            </View>\n          </View>\n        </View>\n      </PressableBase>\n    </Animated.View>\n  );\n};\n\nexport default PressableCard;\n","import i18next from 'i18next';\nimport moment from 'moment';\nimport {\n  barcode_url,\n  Booking,\n  BookingContext,\n  BookingSlot,\n  BookingSubcontext,\n} from 'open-polito-api/lib/booking';\nimport React, {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {\n  ActivityIndicator,\n  Image,\n  Pressable,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {STATUS} from '../store/status';\nimport {AppDispatch, RootState} from '../store/store';\nimport {getBookingContexts, getMyBookings, UserState} from '../store/userSlice';\nimport PressableCard from '../ui/core/PressableCard';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport NoContent from '../ui/NoContent';\nimport Screen from '../ui/Screen';\nimport Tabs from '../ui/Tabs';\nimport {GlyphName} from '../utils/glyph-map';\n\n// TODO add booking capabilities\n\nconst BookingSubctx = ({\n  ctxId,\n  subctx,\n  language,\n  dark,\n}: {\n  ctxId: string;\n  subctx: BookingSubcontext;\n  language: string;\n  dark: boolean;\n}) => {\n  const {device} = useContext(DeviceContext);\n\n  const [state, setState] = useState<{\n    loaded: boolean;\n    expanded: boolean;\n    mounted: boolean;\n    slots: BookingSlot[];\n  }>({\n    loaded: false,\n    expanded: false,\n    mounted: true,\n    slots: [],\n  });\n\n  // TODO re-enable when booking feature added\n  // useEffect(() => {\n  //   const condition =\n  //     state.mounted &&\n  //     state.expanded &&\n  //     !state.loaded &&\n  //     state.slots.length === 0;\n  //   if (!condition) {\n  //     return;\n  //   }\n  //   (async () => {\n  //     const slots = await getSlots(device, ctxId, subctx.id);\n  //     state.mounted && setState(prev => ({...prev, loaded: true, slots}));\n  //   })();\n  // }, [state, device, ctxId, subctx]);\n\n  useEffect(() => {\n    return () => setState(prev => ({...prev, mounted: false}));\n  }, []);\n\n  return (\n    <View key={subctx.id}>\n      <Pressable\n        onPress={() => setState(prev => ({...prev, expanded: !prev.expanded}))}\n        android_ripple={{color: colors.lightGray}}\n        style={{paddingVertical: 8 * p}}>\n        <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n          {language === 'it' ? subctx.ita.name : subctx.eng.name}\n        </Text>\n      </Pressable>\n      <View></View>\n    </View>\n  );\n};\n\nconst BookingCtx = ({\n  ctx,\n  language,\n  dark,\n}: {\n  ctx: BookingContext;\n  language: string;\n  dark: boolean;\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <View>\n      <PressableCard\n        expanded={expanded}\n        dark={dark}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n        description={\n          language === 'it' ? ctx.ita.description : ctx.eng.description\n        }\n        title={language === 'it' ? ctx.ita.name : ctx.eng.name}\n        expandedElement={\n          ctx.subcontexts && ctx.subcontexts.length > 0 ? (\n            <View style={{marginTop: 16 * p}}>\n              {ctx.subcontexts?.map(subctx => (\n                <BookingSubctx\n                  dark={dark}\n                  key={subctx.id}\n                  subctx={subctx}\n                  language={language}\n                  ctxId={ctx.id}\n                />\n              ))}\n            </View>\n          ) : null\n        }\n      />\n    </View>\n  );\n};\n\ninterface BookingCardProps {\n  dark: boolean;\n  booking: Booking;\n  barcodeUrl: string;\n}\n\nconst BookingCard: FC<BookingCardProps> = ({dark, booking, barcodeUrl}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const sections = useMemo<\n    {type: string; label: string; icon: GlyphName}[]\n  >(() => {\n    return [\n      {\n        type: 'date',\n        label: moment(booking.start_time).format('ll'),\n        icon: 'calendar-time',\n      },\n      {\n        type: 'time',\n        label: `${moment(booking.start_time).format('LT')} - ${moment(\n          booking.end_time,\n        ).format('LT')}`,\n        icon: 'clock',\n      },\n    ];\n  }, [booking]);\n\n  return (\n    <PressableCard\n      title={\n        booking.course_id\n          ? `${booking.course_name} - ${booking.course_id}`\n          : booking.subcontext_name\n      }\n      description={booking.context_name}\n      expanded={expanded}\n      dark={dark}\n      sideElement={\n        !expanded && (\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{width: '100%', aspectRatio: 2.5, resizeMode: 'contain'}}\n            resizeMode=\"contain\"\n          />\n        )\n      }\n      expandedElement={\n        <View style={{flex: 1, marginTop: 16 * p}}>\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{\n              width: '100%',\n              aspectRatio: 2.5,\n              resizeMode: 'contain',\n            }}\n          />\n        </View>\n      }\n      onPress={() => setExpanded(prev => !prev)}>\n      <View style={{marginTop: 16 * p}}>\n        {sections.map((section, i) => (\n          <View\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'center',\n              },\n              i > 0 && {marginTop: 8 * p},\n            ]}>\n            <TablerIcon\n              name={section.icon}\n              size={16 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              style={{marginRight: 8 * p}}\n              s={10 * p}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}>\n              {section.label}\n            </Text>\n          </View>\n        ))}\n      </View>\n    </PressableCard>\n  );\n};\n\nconst Bookings = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {\n    userInfo,\n    getBookingsStatus,\n    getBookingContextsStatus,\n    bookings,\n    bookingContexts,\n  } = useSelector<RootState, UserState>(state => state.user);\n\n  const mounted = useRef(true);\n\n  const tabs = useMemo(() => {\n    return ['myBookings', 'newBooking'];\n  }, []);\n\n  const [state, setState] = useState<{\n    currentTab: string;\n    barcodeUrl: string;\n  }>({\n    currentTab: tabs[0],\n    barcodeUrl: '',\n  });\n\n  // Refreshing\n  const refreshing = useMemo(() => {\n    return (\n      getBookingsStatus.code === STATUS.PENDING ||\n      getBookingContextsStatus.code === STATUS.PENDING\n    );\n  }, [getBookingsStatus, getBookingContextsStatus]);\n\n  // Refresh\n  const refresh = useCallback(\n    (tab: 'myBookings' | 'newBooking') => {\n      if (tab === 'myBookings') {\n        dispatch(getMyBookings(device));\n      }\n      if (tab === 'newBooking') {\n        dispatch(getBookingContexts(device));\n      }\n    },\n    [device, dispatch],\n  );\n\n  // Load barcode\n  useEffect(() => {\n    if (state.barcodeUrl === '' && userInfo) {\n      setState(prev => ({\n        ...prev,\n        barcodeUrl: barcode_url(userInfo.current_id),\n      }));\n    }\n  }, [state.barcodeUrl, userInfo]);\n\n  // On tab change\n  useEffect(() => {\n    (async () => {\n      if (state.currentTab === tabs[0]) {\n        dispatch(getMyBookings(device));\n      } else if (state.currentTab === tabs[1]) {\n        dispatch(getBookingContexts(device));\n      }\n    })();\n  }, [state.currentTab, userInfo, device, dispatch, tabs]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('bookings')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i =>\n          setState(prev => ({\n            ...prev,\n            currentTab: tabs[i],\n          }))\n        }\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n      />\n      <View style={_styles.container}>\n        <ScrollView\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={() =>\n                refresh(\n                  state.currentTab === tabs[0] ? 'myBookings' : 'newBooking',\n                )\n              }\n            />\n          }>\n          {(state.currentTab === tabs[0] &&\n            getBookingsStatus.code === STATUS.PENDING) ||\n          (state.currentTab === tabs[1] &&\n            getBookingContextsStatus.code === STATUS.PENDING) ? (\n            <ActivityIndicator />\n          ) : state.currentTab === tabs[0] ? (\n            bookings.length === 0 ? (\n              <NoContent />\n            ) : (\n              bookings.map(booking => (\n                <BookingCard\n                  key={`${booking.context_id}${booking.subcontext_id}${booking.start_time}${booking.end_time}`}\n                  dark={dark}\n                  booking={booking}\n                  barcodeUrl={state.barcodeUrl}\n                />\n              ))\n            )\n          ) : bookingContexts.length === 0 ? (\n            <NoContent />\n          ) : (\n            bookingContexts.map(ctx => (\n              <BookingCtx\n                dark={dark}\n                key={ctx.id}\n                ctx={ctx}\n                language={i18next.language}\n              />\n            ))\n          )}\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Bookings;\n","import React, {ReactNode} from 'react';\nimport {View} from 'react-native';\n\nconst AnimatedGradientBase = ({\n  width,\n  height,\n  children,\n}: {\n  width: number;\n  height: number;\n  children: ReactNode;\n}) => {\n  return (\n    <View\n      style={{\n        width,\n        height,\n      }}>\n      {children}\n    </View>\n  );\n};\n\nexport default AnimatedGradientBase;\n","import React, {ReactNode, useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst LoaderBase = ({children}: {children: ReactNode}) => {\n  const [visible, setVisible] = useState(false);\n  const [mounted, setMounted] = useState(true);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: offset.value,\n      transform: [\n        {translateY: 8 - offset.value * 8},\n        {translateX: 8 - offset.value * 8},\n      ],\n    };\n  });\n\n  useEffect(() => {\n    (async () => {\n      setTimeout(() => {\n        mounted && setVisible(true);\n      }, 150);\n    })();\n    return () => {\n      setMounted(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (visible) {\n      offset.value = withTiming(1, {duration: 200});\n    }\n  }, [visible]);\n\n  return visible ? (\n    <Animated.View style={[animStyle]}>{children}</Animated.View>\n  ) : null;\n};\n\nexport default LoaderBase;\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport {Rect} from 'react-native-svg';\nimport {p} from '../../scaling';\nimport AnimatedGradientBase from './AnimatedGradientBase';\nimport LoaderBase from './LoaderBase';\n\nconst TimetableDayLoader = ({w, h}: {w: number; h: number}) => {\n  const [n] = useState(Math.ceil(Math.random() * 2));\n  const [yPositions] = useState(\n    Array.from({length: n}, (_, i) => (i + 1) * (3 + Math.random()) * h),\n  );\n\n  return (\n    <View style={{height: h * 10, position: 'absolute'}}>\n      <LoaderBase>\n        <AnimatedGradientBase width={w} height={h * 15}>\n          {Array.from({length: n}).map((_, i) => (\n            <Rect\n              key={i}\n              x={0}\n              y={yPositions[i]}\n              rx={4 * p}\n              ry={4 * p}\n              width={w - 4}\n              height={h * 2}\n            />\n          ))}\n        </AnimatedGradientBase>\n      </LoaderBase>\n    </View>\n  );\n};\n\nexport default TimetableDayLoader;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport moment from 'moment';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {p} from '../../scaling';\nimport {DeviceContext} from '../../context/Device';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\n\nconst TimetableEventModal: FC<{slot: TimetableSlot}> = ({slot}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const items: {icon: string; name: string}[] = useMemo(() => {\n    return [\n      {\n        icon: 'map-pin',\n        name: slot.room,\n      },\n      {\n        icon: 'align-justified',\n        name: slot.type,\n      },\n      {\n        icon: 'clock',\n        name:\n          moment(slot.start_time).format('HH:mm') +\n          ' - ' +\n          moment(slot.end_time).format('HH:mm') +\n          ' (' +\n          moment(slot.start_time).format('ll') +\n          ')',\n      },\n      {\n        icon: 'user',\n        name: slot.professor.surname + ' ' + slot.professor.name,\n      },\n    ];\n  }, [slot]);\n\n  return (\n    <ModalBase title={slot.course_name}>\n      {items.map((item, i) => (\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginTop: (i == 0 ? 0 : 8) * p,\n          }}>\n          <TablerIcon\n            name={item.icon}\n            size={16 * p}\n            color={dark ? colors.gray300 : colors.gray600}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n            {item.name}\n          </Text>\n        </View>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default TimetableEventModal;\n","import React, {useContext, useEffect, useState} from 'react';\nimport colors, {courseColors} from '../../colors';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {TouchableOpacity, View} from 'react-native';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableEventModal from '../modals/TimetableEventModal';\n\nconst TimetableEvent = ({\n  overlapGroup,\n  slot,\n  w,\n  h,\n  courseNames,\n  index,\n}: {\n  overlapGroup: TimetableSlot[];\n  slot: TimetableSlot;\n  w: number;\n  h: number;\n  courseNames: string[];\n  index: number;\n}) => {\n  const {setModal} = useContext(ModalContext);\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const textOpacity = useSharedValue(0);\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    opacity.value = 1;\n  }, []);\n\n  useEffect(() => {\n    offset.value = w;\n    if (w >= 60) {\n      setTimeout(() => {\n        textOpacity.value = 1;\n      }, 100);\n    }\n  }, [w]);\n\n  const animTextSectionStyle = useAnimatedStyle(() => {\n    return {opacity: withTiming(textOpacity.value, {duration: 500})};\n  });\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      width: withTiming(\n        overlapGroup.length > 0\n          ? offset.value / overlapGroup.length\n          : offset.value,\n        {duration: 250},\n      ),\n      left: withTiming(\n        overlapGroup.length > 0\n          ? index * (offset.value / overlapGroup.length)\n          : 0,\n        {duration: 250},\n      ),\n    };\n  });\n\n  return (\n    <Animated.View\n      onLayout={e => setWidth(e.nativeEvent.layout.width)}\n      style={[\n        {\n          overflow: 'hidden',\n          position: 'absolute',\n\n          top:\n            h +\n            (moment\n              .duration(\n                moment(slot.start_time).diff(\n                  moment(slot.start_time).set({\n                    h: 8,\n                    m: 0,\n                  }),\n                ),\n              )\n              .as('ms') /\n              (3600 * 1000)) *\n              h -\n            h / 2,\n\n          borderRadius: 4 * p,\n          backgroundColor:\n            courseColors[courseNames.findIndex(val => val == slot.course_name)],\n          height:\n            (moment.duration(slot.end_time - slot.start_time).as('ms') /\n              (3600 * 1000)) *\n            h,\n        },\n        animStyle,\n      ]}>\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          padding: 4 * p,\n        }}\n        onPress={() => {\n          setModal(<TimetableEventModal slot={slot} />);\n        }}>\n        {width >= 25 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <Text w={'r'} s={8 * p} c={colors.white} numberOfLines={2}>\n              {slot.course_name}\n            </Text>\n          </Animated.View>\n        ) : null}\n        {width >= 60 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <View\n              style={{\n                flexDirection: 'row',\n                marginTop: 8 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"map-pin\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.room}\n              </Text>\n            </View>\n            <View\n              style={{\n                opacity: opacity.value,\n                flexDirection: 'row',\n                marginTop: 4 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"list\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.type}\n              </Text>\n            </View>\n          </Animated.View>\n        ) : null}\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nexport default TimetableEvent;\n","import moment from 'moment';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {p} from '../../scaling';\nimport TimetableDayLoader from '../loaders/TimetableDayLoader';\nimport TimetableEvent from './TimetableEvent';\n\nconst TimetableDay = ({\n  fake = false,\n  day,\n  h,\n  courseNames,\n  config,\n  index = 0,\n}: {\n  fake?: boolean;\n  day: TimetableSlot[];\n  h: number;\n  courseNames: string[];\n  config: Configuration;\n  index?: number;\n}) => {\n  const [w, setW] = useState(0);\n\n  /**\n   * Array of slots sorted by priority\n   */\n  const sortedByPriority: TimetableSlot[] = useMemo(() => {\n    return [...day].sort(\n      (a, b) =>\n        config.timetablePriority.indexOf(b.course_name) -\n        config.timetablePriority.indexOf(a.course_name),\n    );\n  }, [config.timetablePriority, day]);\n\n  /**\n   * Array of arrays of overlapping events.\n   *\n   * @remarks\n   * Sub-array length equals number to divide width by.\n   * Show overlapping events in the order given by their sub-array index.\n   *\n   * @example\n   * [\"course a\", \"course b\", \"course c\"] means:\n   *\n   * <------------ WIDTH ------------->\n   * |----------|----------|----------|\n   * | course a | course b | course c |\n   * |----------|----------|----------|\n   */\n  const overlapping: TimetableSlot[][] = useMemo(() => {\n    if (config.timetableOverlap === 'priority') return []; // Only compute if splitting enabled\n    if (day.length === 0) return []; // Only compute when slots fetched\n\n    let _overlapping: TimetableSlot[][] = [];\n    // Go through slots and find overlaps\n    const start = moment(day[0].start_time).set({h: 8, m: 45});\n    for (let i = 0; i < 9; i++) {\n      start.add(90, 'm');\n      let _localOverlapping: TimetableSlot[] = [];\n      day.map(event => {\n        if (\n          event.start_time < start.toDate().getTime() &&\n          start.toDate().getTime() < event.end_time\n        ) {\n          _localOverlapping.push(event);\n        }\n      });\n      if (_localOverlapping.length > 1) _overlapping.push(_localOverlapping);\n    }\n    return _overlapping;\n  }, [day, config.timetableOverlap]);\n\n  /**\n   * Finds and returns overlap group of given slot\n   * @param slot The timetable slot\n   * @returns overlap group\n   */\n  const findOverlapGroup = (slot: TimetableSlot): TimetableSlot[] => {\n    let _group: TimetableSlot[] = [];\n    overlapping.forEach(group => {\n      if (group.includes(slot)) {\n        _group = group;\n        return;\n      }\n    });\n    return _group;\n  };\n\n  return (\n    <View\n      onLayout={e => {\n        setW(e.nativeEvent.layout.width);\n      }}\n      style={{\n        backgroundColor: colors.white,\n        flex: 1,\n        zIndex: 200,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        borderColor: colors.gray200,\n        marginHorizontal: 1 * p,\n      }}>\n      {fake ? (\n        <TimetableDayLoader w={w} h={h} />\n      ) : config.timetableOverlap === 'priority' ? (\n        // If priority enabled, show sorted by priority\n        sortedByPriority.map((slot, i) => {\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup: [], slot, w, h, courseNames, index: i}}\n            />\n          );\n        })\n      ) : (\n        // If priority not enabled\n        day.map((slot, i) => {\n          const overlapGroup = findOverlapGroup(slot);\n          const _index = overlapGroup.findIndex(_slot => slot === _slot);\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup, slot, w, h, courseNames, index: _index}}\n            />\n          );\n        })\n      )}\n    </View>\n  );\n};\n\nexport default TimetableDay;\n","import {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport TimetableDay from './TimetableDay';\nimport {Configuration} from '../../defaultConfig';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport {p} from '../../scaling';\n\nconst TimetableSlots = ({\n  loaded,\n  timetableDays,\n  layout,\n  selectedDay,\n}: {\n  loaded: boolean;\n  timetableDays: TimetableSlot[][];\n  layout: 'week' | 'day';\n  selectedDay: number;\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  const [courseNames, setCourseNames] = useState<string[]>(['', '', '']);\n\n  const days = useMemo<TimetableSlot[][]>(() => {\n    if (timetableDays.length === 1) return timetableDays;\n    return timetableDays.slice(1, 6);\n  }, [timetableDays]);\n\n  const getCourseNames = (): string[] => {\n    let _courseNames: string[] = [];\n    timetableDays.forEach(day => {\n      day.forEach(slot => {\n        if (!_courseNames.includes(slot.course_name)) {\n          _courseNames.push(slot.course_name);\n        }\n      });\n    });\n    return _courseNames.sort();\n  };\n\n  useEffect(() => {\n    setCourseNames(getCourseNames());\n  }, [days]);\n\n  /**\n   * When course names or slots change, if priority enabled, update the priority list\n   */\n  useEffect(() => {\n    if (!config.timetableOverlap || !config.timetablePriority) return;\n    let _list: string[] = [...config.timetablePriority];\n    let changed = false;\n    courseNames.forEach(courseName => {\n      if (\n        courseName.trim() !== '' &&\n        !config.timetablePriority.includes(courseName)\n      ) {\n        _list.push(courseName);\n        changed = true;\n      }\n    });\n    changed && dispatch(setConfig({...config, timetablePriority: _list}));\n  }, [days, courseNames, config, dispatch]);\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        flex: 1,\n        marginLeft: 32 * p,\n        marginRight: 16 * p,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n      }}>\n      {(layout === 'week' ? days : [days[selectedDay - 1]]).map(\n        (day, index) => (\n          <TimetableDay\n            fake={!loaded}\n            config={config}\n            key={index}\n            {...{day, h, index, courseNames}}\n          />\n        ),\n      )}\n    </View>\n  );\n};\n\nexport default TimetableSlots;\n","import moment, {Moment} from 'moment';\nimport React, {useEffect, useState} from 'react';\nimport {Dimensions, StyleSheet, View} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\n\nconst TimetableGrid = ({\n  showLine,\n  dark,\n}: {\n  showLine: boolean;\n  dark: boolean;\n}) => {\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  // Used to update red line position\n  const [currentTime, setCurrentTime] = useState<Moment>(moment());\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [updateTimeout, setUpdateTimeout] = useState<any>(null);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      if (updateTimeout) clearTimeout(updateTimeout);\n      setMounted(false);\n    };\n  }, []);\n\n  /**\n   * Update time every 10 seconds, which will ensure red line is always in correct position\n   */\n  useEffect(() => {\n    setTimeout(() => {\n      mounted && setCurrentTime(moment());\n    }, 10000);\n  }, [currentTime, mounted]);\n\n  const styles = StyleSheet.create({\n    padding: {\n      paddingLeft: 8 * p,\n      paddingRight: 16 * p,\n      paddingBottom: 16 * p,\n    },\n  });\n\n  return (\n    <>\n      <View\n        style={[\n          styles.padding,\n          {\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            alignItems: 'stretch',\n          },\n        ]}>\n        {Array.from({length: 14}).map((_, index) => (\n          <View\n            key={index}\n            style={{\n              width: '100%',\n              height: index == 0 ? h / 2 : h,\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'flex-end',\n            }}>\n            <Text\n              s={8 * p}\n              c={dark ? colors.gray200 : colors.gray700}\n              w=\"r\"\n              style={{\n                transform: [{translateY: 4 * p}],\n              }}>\n              {`${8 + index}:00`}\n            </Text>\n            <View\n              style={{\n                flex: 1,\n                // width: '100%',\n                borderBottomWidth: 0.5 * p,\n                borderColor: dark ? colors.gray500 : colors.gray200,\n                marginLeft: 4 * p,\n\n                height: h,\n                flexDirection: 'row',\n                justifyContent: 'flex-start',\n                alignItems: 'flex-end',\n              }}\n            />\n          </View>\n        ))}\n      </View>\n      {showLine ? (\n        <View\n          style={[\n            styles.padding,\n            {\n              position: 'absolute',\n              left: 0,\n              right: 0,\n              zIndex: 300,\n            },\n          ]}>\n          <View\n            style={{\n              height: 0,\n              borderTopColor: colors.red,\n              borderBottomColor: colors.red,\n              backgroundColor: colors.red,\n              borderTopWidth: 0.5 * p,\n              borderBottomWidth: 0.5 * p,\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              transform: [\n                {\n                  translateY:\n                    h +\n                    (moment\n                      .duration(\n                        currentTime.diff(\n                          moment().set({\n                            h: 8,\n                            m: 0,\n                          }),\n                        ),\n                      )\n                      .as('ms') /\n                      (3600 * 1000)) *\n                      h -\n                    h / 2,\n                },\n              ],\n            }}>\n            <View\n              style={{\n                backgroundColor: colors.red,\n                width: 8 * p,\n                height: 8 * p,\n                borderRadius: 16 * p,\n              }}></View>\n          </View>\n        </View>\n      ) : null}\n    </>\n  );\n};\n\nexport default TimetableGrid;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nconst HorizontalIconSelector = ({\n  items,\n  label = '',\n  onValueChange,\n  defaultValue = items[0].value,\n  dark,\n}: {\n  items: {icon: string; value: string}[];\n  label?: string;\n  onValueChange: Function;\n  defaultValue?: string;\n  dark: boolean;\n}) => {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    onValueChange(value);\n  }, [value]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n      }}>\n      {label ? (\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginRight: 4 * p}}>\n          {label}\n        </Text>\n      ) : null}\n      <View\n        style={{\n          flexDirection: 'row',\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n          marginLeft: 4 * p,\n          borderRadius: 4 * p,\n        }}>\n        {items.map((item, i) => (\n          <PressableBase\n            onPress={() => {\n              setValue(item.value);\n            }}\n            key={item.value}\n            style={[\n              {\n                backgroundColor:\n                  item.value == value ? colors.accent300 : 'rgba(0,0,0,0)',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: 4 * p,\n              },\n              i === 0\n                ? {\n                    borderTopLeftRadius: 4 * p,\n                    borderBottomLeftRadius: 4 * p,\n                  }\n                : i === items.length - 1\n                ? {\n                    borderTopRightRadius: 4 * p,\n                    borderBottomRightRadius: 4 * p,\n                  }\n                : {},\n            ]}>\n            <TablerIcon\n              name={item.icon}\n              size={16 * p}\n              color={\n                item.value == value\n                  ? colors.gray50\n                  : dark\n                  ? colors.gray200\n                  : colors.gray700\n              }\n            />\n          </PressableBase>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default HorizontalIconSelector;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport DraggableFlatList, {\n  RenderItemParams,\n  ScaleDecorator,\n} from 'react-native-draggable-flatlist';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../colors';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst ListRank = ({\n  items,\n  callback,\n  disabled,\n  dark,\n}: {\n  items: Array<{label: string; value: string}>;\n  callback: (data: string[]) => void;\n  disabled: boolean;\n  dark: boolean;\n}) => {\n  const [data, setData] = useState(items);\n\n  useEffect(() => {\n    callback(data.map(item => item.label));\n  }, [data]);\n\n  const renderItem = ({\n    item,\n    index,\n    drag,\n  }: RenderItemParams<{label: string; value: string}>) => {\n    return (\n      <ScaleDecorator>\n        <TouchableOpacity\n          disabled={disabled}\n          onLongPress={drag}\n          onPressIn={drag}\n          onPress={drag}\n          style={{\n            paddingVertical: 4 * p,\n          }}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              marginLeft: 0 * p,\n              opacity: disabled ? 0.5 : 1,\n            }}>\n            <TablerIcon\n              name=\"grid-dots\"\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View style={{marginLeft: 8 * p}}>\n              <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n                {item.label}\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </ScaleDecorator>\n    );\n  };\n\n  return (\n    <GestureHandlerRootView>\n      <DraggableFlatList\n        onDragEnd={({data}) => setData(data)}\n        data={data}\n        keyExtractor={item => item.value}\n        renderItem={renderItem}\n      />\n    </GestureHandlerRootView>\n  );\n};\n\nexport default ListRank;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport ListRank from '../ListRank';\nimport SettingsItem, {SettingsItemProps} from '../../ui/SettingsItem';\nimport {DeviceContext} from '../../context/Device';\nimport ModalBase from './ModalBase';\nimport colors from '../../colors';\n\nconst TimetableOptionsModal = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const [showListRank, setShowListRank] = useState(false);\n\n  //  Ugly hack to make the modal actually show.\n  //  If I render the children elements immediately,\n  //  for some reason the whole modal won't render.\n  //  The problem seems to be caused by the draggable elements,\n  //  but for now this fix does the job.\n  useEffect(() => {\n    setTimeout(() => setShowListRank(true), 0);\n  }, []);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const rankItems = useMemo(() => {\n    return config.timetablePriority.map(item => {\n      return {label: item, value: item};\n    });\n  }, [config]);\n\n  const toggleOverlapMode = useCallback(() => {\n    const mode: Configuration['timetableOverlap'] =\n      config.timetableOverlap === 'split' ? 'priority' : 'split';\n    dispatch(setConfig({...config, timetableOverlap: mode}));\n  }, [config, dispatch]);\n\n  const timetableOptionsItems = useMemo<SettingsItemProps[]>(() => {\n    return [\n      {\n        name: t('timetablePriority'),\n        description: t('timetablePriorityDesc'),\n        icon: 'stack-2',\n        toggle: true,\n        toggleValue: config.timetableOverlap === 'priority',\n        settingsFunction: toggleOverlapMode,\n      },\n      {\n        name: t('timetablePriorityList'),\n        settingsFunction: () => {},\n        disabled: config.timetableOverlap !== 'priority',\n        children: (\n          <View>\n            <ListRank\n              dark={dark}\n              disabled={config.timetableOverlap !== 'priority'}\n              items={rankItems}\n              callback={data =>\n                dispatch(\n                  setConfig({\n                    ...config,\n                    timetablePriority: data.filter(d => d !== ''),\n                  }),\n                )\n              }\n            />\n          </View>\n        ),\n        paddingBottom: false,\n      },\n    ];\n  }, [config, dark, dispatch, rankItems, t, toggleOverlapMode]);\n\n  return (\n    <ModalBase title={t('timetableOptions')}>\n      <View>\n        {showListRank ? (\n          timetableOptionsItems.map(item => (\n            <SettingsItem key={item.name} {...item} />\n          ))\n        ) : (\n          <ActivityIndicator color={colors.accent300} />\n        )}\n      </View>\n    </ModalBase>\n  );\n};\n\nexport default TimetableOptionsModal;\n","import React, {useContext, useMemo} from 'react';\nimport {Platform, Pressable, View} from 'react-native';\nimport colors from '../../colors';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {useTranslation} from 'react-i18next';\nimport Toggles from '../../ui/HorizontalIconSelector';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Text from '../../ui/core/Text';\nimport {DeviceContext} from '../../context/Device';\nimport {p} from '../../scaling';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableOptionsModal from '../modals/TimetableOptionsModal';\nimport ExamsBookExamModal from '../modals/ExamsBookExamModal';\nimport SettingsEnableLoggingModal from '../modals/SettingsEnableLoggingModal';\n\nconst showDatePicker = (callback: (date: number | undefined) => any) => {\n  DateTimePickerAndroid.open({\n    mode: 'date',\n    value: new Date(),\n    onChange: date => callback(date.nativeEvent.timestamp),\n  });\n};\n\nconst TimetableHeader = ({\n  selectedDay = null,\n  timetableDays,\n  weekStartDate,\n  onLayoutChanged,\n  onDayChanged,\n  onWeekStartDateChanged,\n}: {\n  selectedDay: number | null;\n  timetableDays: TimetableSlot[][];\n  weekStartDate: Date | null;\n  onLayoutChanged: Function;\n  onDayChanged: Function;\n  onWeekStartDateChanged: Function;\n}) => {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const _onLayoutChanged = (value: string) => {\n    onLayoutChanged(value);\n  };\n\n  const _onDayChanged = (value: number) => {\n    onDayChanged(value);\n  };\n\n  const _onWeekStartDateChanged = (value: Date) => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(1, {duration: 250}),\n    );\n    onWeekStartDateChanged(value);\n  };\n\n  const opacity = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {opacity: opacity.value};\n  });\n\n  const headerTitle: string = useMemo(() => {\n    const weekStartMoment = moment(weekStartDate);\n    const weekEndMoment = moment(weekStartDate).add(4, 'day');\n    return weekStartDate\n      ? weekStartDate.getTime() == moment().startOf('w').toDate().getTime()\n        ? t('thisWeek')\n        : `${weekStartMoment.get('date')} ${\n            weekStartMoment.get('month') != weekEndMoment.get('month')\n              ? weekStartMoment.format('MMM ')\n              : ''\n          }${\n            weekStartMoment.get('year') != weekEndMoment.get('year')\n              ? weekStartMoment.format('YYYY ')\n              : ''\n          }- ${weekEndMoment.format('D MMM YYYY')}`\n      : t('thisWeek');\n  }, [weekStartDate, t]);\n\n  return (\n    <View style={{borderBottomWidth: 1 * p, borderBottomColor: colors.gray200}}>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        {Platform.OS === 'android' ? (\n          <Button\n            secondary\n            small\n            text={t('jumpToDate')}\n            icon=\"chevrons-right\"\n            onPress={() =>\n              showDatePicker(date => {\n                if (!date) return;\n                _onWeekStartDateChanged(new Date(date));\n              })\n            }\n          />\n        ) : (\n          <View />\n        )}\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <Toggles\n            defaultValue=\"week\"\n            onValueChange={(value: string) => {\n              _onLayoutChanged(value);\n            }}\n            label=\"Layout:\"\n            items={[\n              {icon: 'layout-rows', value: 'day'},\n              {icon: 'layout-columns', value: 'week'},\n            ]}\n            dark={dark}\n          />\n          <TouchableOpacity\n            style={{marginLeft: 24 * p}}\n            onPress={() => setModal(<TimetableOptionsModal />)}>\n            <TablerIcon\n              name=\"settings\"\n              size={20 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(\n              moment(weekStartDate).subtract(1, 'w').toDate(),\n            )\n          }>\n          <TablerIcon\n            name=\"arrow-left\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n        <Animated.View style={[animStyle]}>\n          <Text c={dark ? colors.gray100 : colors.gray800} s={12 * p} w=\"m\">\n            {headerTitle}\n          </Text>\n        </Animated.View>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(moment(weekStartDate).add(1, 'w').toDate())\n          }>\n          <TablerIcon\n            name=\"arrow-right\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n      </View>\n      <View\n        style={{\n          // ...styles.withHorizontalPadding,\n          marginLeft: 12,\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'space-around',\n          paddingBottom: 12,\n        }}>\n        {timetableDays.slice(1, 6).map((day, index) => (\n          <Pressable\n            onPress={() => {\n              _onDayChanged(index + 1);\n            }}\n            key={index}\n            style={{\n              opacity: weekStartDate ? 1 : 0,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              paddingHorizontal: 12,\n              paddingVertical: 4,\n              borderRadius: 4,\n              backgroundColor:\n                selectedDay == index + 1\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray700\n                  : colors.gray200,\n            }}>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').format('ddd')\n                : ''}\n            </Text>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              key={index}>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').date()\n                : ''}\n            </Text>\n          </Pressable>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default TimetableHeader;\n","import moment from 'moment';\nimport {getTimetable, TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, View} from 'react-native';\nimport {DeviceContext} from '../context/Device';\nimport TimetableSlots from '../components/timetable/TimetableSlots';\nimport TimetableGrid from '../components/timetable/TimetableGrid';\nimport TimetableHeader from '../components/timetable/TimetableHeader';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\n\nconst Timetable = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n\n  const [loaded, setLoaded] = useState(false);\n  const [weekStartDate, setWeekStartDate] = useState<Date | null>(null);\n\n  const [slots, setSlots] = useState<TimetableSlot[]>([]);\n\n  /**\n   * When slots change, update {@link timetableDays}\n   */\n  const timetableDays = useMemo(() => {\n    let _timetableDays: TimetableSlot[][] = Array.from({length: 7}, () => []);\n    slots.forEach(slot => {\n      _timetableDays[moment(slot.start_time).day()].push(slot);\n    });\n    return _timetableDays;\n  }, [slots]);\n\n  const [layout, setLayout] = useState<'day' | 'week'>('day');\n\n  const [mounted, setMounted] = useState(true);\n\n  const [selectedDay, setSelectedDay] = useState(1); // Today's day index. TODO display first day of week when week is not current\n\n  const [fetchTimer, setFetchTimer] = useState<any>(null);\n  const [doUpdate, setDoUpdate] = useState<boolean>(false); // Flip it to trigger effect\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: withTiming(opacity.value, {duration: 500}),\n      transform: [{translateX: offset.value}],\n    };\n  });\n\n  /**\n   * Controls the \"scrolling\" effect animation\n   * @param direction left or right\n   */\n  const controlTransition = (direction: 'l' | 'r') => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(0, {duration: 500}),\n      withTiming(1, {duration: 250}),\n    );\n    offset.value =\n      direction === 'l'\n        ? withSequence(\n            withTiming(32, {duration: 750}),\n            withTiming(-32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          )\n        : withSequence(\n            withTiming(-32, {duration: 750}),\n            withTiming(32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          );\n  };\n\n  /**\n   * Get slots and set {@link weekStartDate}\n   */\n  useEffect(() => {\n    (async () => {\n      if (!weekStartDate) controlTransition('r');\n      if (fetchTimer) clearTimeout(fetchTimer);\n      setFetchTimer(\n        setTimeout(async () => {\n          setLoaded(false);\n          let slots: TimetableSlot[] = [];\n          setSlots([]);\n          try {\n            slots = await getTimetable(device, weekStartDate ?? new Date());\n            setLoaded(true);\n          } catch (e) {\n            // console.log(e);\n          } finally {\n            if (!weekStartDate) {\n              const date = moment().startOf('isoWeek').toDate();\n              mounted && setWeekStartDate(date);\n            }\n            setSlots(slots);\n          }\n        }, 250),\n      );\n    })();\n    return () => {\n      clearTimeout(fetchTimer);\n      setMounted(false);\n    };\n  }, [doUpdate]);\n\n  /**\n   * Whether to show red line\n   */\n  const showLine: boolean = useMemo(() => {\n    return (\n      (layout === 'week' &&\n        weekStartDate?.getTime() ===\n          moment().startOf('isoWeek').toDate().getTime()) ||\n      (layout === 'day' &&\n        moment(weekStartDate)\n          .add(selectedDay - 1, 'days')\n          .toDate()\n          .getTime() === moment().startOf('day').toDate().getTime())\n    );\n  }, [weekStartDate, selectedDay, layout]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('timetable')} />\n      <View\n        style={{\n          flex: 1,\n          paddingTop: 24 * p,\n        }}>\n        <View style={{paddingHorizontal: 16 * p}}>\n          <TimetableHeader\n            selectedDay={layout === 'week' ? null : selectedDay}\n            onDayChanged={(value: number) => {\n              setSelectedDay(value);\n            }}\n            onLayoutChanged={(value: 'day' | 'week') => {\n              setLayout(value);\n            }}\n            weekStartDate={weekStartDate}\n            onWeekStartDateChanged={(value: Date) => {\n              if (weekStartDate && value.getTime() < weekStartDate.getTime()) {\n                controlTransition('l');\n              } else {\n                controlTransition('r');\n              }\n              setWeekStartDate(moment(value).startOf('isoWeek').toDate());\n              setDoUpdate(!doUpdate);\n            }}\n            timetableDays={timetableDays}\n          />\n        </View>\n        <ScrollView style={{flex: 1}}>\n          <Animated.View style={[animStyle, {flex: 1}]}>\n            <TimetableGrid showLine={showLine} dark={dark} />\n            <TimetableSlots\n              loaded={loaded}\n              timetableDays={timetableDays}\n              layout={layout}\n              selectedDay={selectedDay}\n            />\n          </Animated.View>\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Timetable;\n","import React, {ReactNode, useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport Svg, {Circle} from 'react-native-svg';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst ProgressCircle = ({\n  label, // Optional label to display instead of the value\n  value,\n  max,\n  radius,\n  strokeWidth = 4 * p,\n  fontSize,\n  backgroundColor,\n  dark,\n  children,\n}: {\n  label?: string | null;\n  value: number | string;\n  max: number;\n  radius: number;\n  strokeWidth?: number;\n  fontSize?: number;\n  backgroundColor?: Color;\n  dark: boolean;\n  children?: ReactNode;\n}) => {\n  const circ = 2 * Math.PI * radius;\n\n  const _value = useMemo(() => {\n    return value <= max ? value : max; // Avoid going over max value\n  }, [value, max]);\n\n  return (\n    <View style={{position: 'relative'}}>\n      <Svg\n        width={2 * (radius + strokeWidth)}\n        height={2 * (radius + strokeWidth)}>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={backgroundColor || 'transparent'}\n          stroke={dark ? colors.gray700 : colors.gray200}\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={'transparent'}\n          stroke={colors.accent300}\n          strokeDasharray={circ}\n          strokeDashoffset={\n            typeof _value === 'number'\n              ? ((100 - (100 * _value) / max) * circ) / 100\n              : 0\n          }\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n      </Svg>\n      <View\n        style={{\n          position: 'absolute',\n          width: 2 * (radius + strokeWidth),\n          height: 2 * (radius + strokeWidth),\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text\n          s={\n            fontSize || (label || typeof _value === 'string' ? 10 * p : 16 * p)\n          }\n          c={dark ? colors.gray100 : colors.gray800}\n          w=\"b\">\n          {label || _value}\n        </Text>\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default ProgressCircle;\n","import moment from 'moment';\nimport {PermanentMark} from 'open-polito-api/lib/courses';\nimport React, {useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useWindowDimensions, View} from 'react-native';\nimport LineChart, {\n  LineChartData,\n} from 'react-native-chart-kit/dist/line-chart/LineChart';\nimport colors from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {p} from '../../scaling';\nimport {DeviceSize} from '../../types';\nimport Text from '../../ui/core/Text';\n\nconst Progress = ({marks, dark}: {marks: PermanentMark[]; dark: boolean}) => {\n  const {t} = useTranslation();\n  const {width} = useWindowDimensions();\n  const {size} = useContext(DeviceContext);\n\n  const addedSpace = (size >= DeviceSize.lg ? 300 : 32) * p;\n  const chartWidth = width - addedSpace;\n\n  /**\n   * Marks sorted by date ascending and filtered to be at most 1 year ago\n   */\n  const sorted_marks = useMemo(() => {\n    return [\n      ...marks.filter(\n        mark =>\n          parseInt(mark.mark) &&\n          moment.duration(Date.now() - mark.date).asDays() <= 365,\n      ),\n    ].sort((mark1, mark2) => mark1.date - mark2.date);\n  }, [marks]);\n\n  /**\n   * Weighted averages over time\n   */\n  const avgs = useMemo(() => {\n    let _avgs = new Array<number>(sorted_marks.length);\n    let weights = 0; // Cumulative weight counter\n\n    for (let i = 0; i < sorted_marks.length; i++) {\n      if (i === 0) {\n        weights += sorted_marks[i].num_credits;\n        _avgs[i] = parseInt(sorted_marks[i].mark) || 0;\n      } else {\n        _avgs[i] =\n          (_avgs[i - 1] * weights +\n            (parseInt(sorted_marks[i].mark) || 0) *\n              sorted_marks[i].num_credits) /\n          (weights + sorted_marks[i].num_credits);\n        weights += sorted_marks[i].num_credits;\n      }\n    }\n\n    return _avgs;\n  }, [sorted_marks]);\n\n  /**\n   * Data for the chart\n   */\n  const data = useMemo<LineChartData>(\n    () => ({\n      labels: sorted_marks.map(mark => moment(mark.date).format('MMM D')),\n      datasets: [\n        {\n          data: avgs,\n          color: () => colors.accent300,\n          strokeWidth: 2 * p,\n        },\n      ],\n      legend: [t('weightedAverage')],\n    }),\n    [sorted_marks, avgs, t],\n  );\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      {sorted_marks.length === 0 ? (\n        <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n          You'll see your progress when you get at least 1 permament mark.\n        </Text>\n      ) : (\n        <LineChart\n          data={data}\n          width={chartWidth}\n          height={220}\n          yAxisInterval={1}\n          chartConfig={{\n            backgroundColor: '#e26a00',\n            backgroundGradientFrom: colors.gray900,\n            backgroundGradientTo: colors.gray700,\n            decimalPlaces: 2,\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n            style: {\n              borderRadius: 16,\n            },\n            propsForDots: {\n              r: '6',\n              strokeWidth: '2',\n              stroke: colors.accent300,\n            },\n          }}\n          style={{\n            borderRadius: 4 * p,\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Progress;\n","import {PermanentMark, ProvisionalMark} from 'open-polito-api/lib/courses';\nimport React, {useContext, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {DeviceContext} from '../context/Device';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport Section from '../ui/Section';\nimport NoContent from '../ui/NoContent';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport moment from 'moment';\nimport i18next from 'i18next';\nimport ProgressCircle from '../ui/ProgressCircle';\nimport Progress from '../components/exams/Progress';\nimport openURL from '../utils/openUrl';\nimport {GlyphName} from '../utils/glyph-map';\n\nconst tabs = ['overview', 'permanentMarks', 'provisionalMarks'];\n\nconst get_avg = (marks: PermanentMark[]) => {\n  const _marks = marks.filter(mark => !!parseInt(mark.mark || ''));\n\n  const total_credits = _marks.reduce((acc, mark) => {\n    return acc + mark.num_credits;\n  }, 0);\n\n  return parseFloat(\n    (\n      _marks.reduce((acc, mark) => {\n        return acc + parseInt(mark.mark) * mark.num_credits;\n      }, 0) / total_credits\n    ).toFixed(2),\n  );\n};\n\nconst Exams = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const {marks} = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const [tab, setTab] = useState<string>(tabs[0]);\n\n  const filteredMarks = useMemo<(PermanentMark | ProvisionalMark)[]>(() => {\n    if (tab == tabs[1]) return marks.permanent;\n    if (tab == tabs[2]) return marks.provisional;\n    return [];\n  }, [marks, tab]);\n\n  const avg = useMemo(() => get_avg(marks.permanent), [marks]);\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  return (\n    <Screen>\n      <Header title={t('exams')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n        onChange={idx => setTab(tabs[idx])}\n      />\n\n      <View style={styles.container}>\n        {tab === tabs[2] ? (\n          <View style={styles.paddingHorizontal}>\n            <TouchableOpacity\n              onPress={async () =>\n                await openURL('https://didattica.polito.it/img/RE_stati.jpg')\n              }\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 16 * p,\n              }}>\n              <TablerIcon\n                name=\"help\"\n                size={12 * p}\n                color={dark ? colors.gray200 : colors.gray700}\n                style={{marginRight: 8 * p}}\n              />\n              <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n                {t('statusCodeHelp')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : null}\n        {tab === tabs[0] ? (\n          <View style={styles.list}>\n            <AvgWidget avg={avg} dark={dark} />\n            <View\n              style={{\n                height: 1 * p,\n                backgroundColor: colors.gray500,\n                marginVertical: 24 * p,\n              }}\n            />\n            <Section title={t('progressOverTime')} dark={dark}>\n              <View>\n                <Progress marks={marks.permanent || []} dark={dark} />\n              </View>\n            </Section>\n          </View>\n        ) : (\n          <FlatList\n            contentContainerStyle={styles.list}\n            data={filteredMarks}\n            keyExtractor={item => item.date + item.name}\n            renderItem={({item}) => (\n              <MarkWidget\n                mark={\n                  tab == tabs[1]\n                    ? (item as PermanentMark)\n                    : (item as ProvisionalMark)\n                }\n                provisional={tab == tabs[2]}\n                dark={dark}\n              />\n            )}\n            ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n            ListEmptyComponent={<NoContent />}\n          />\n        )}\n      </View>\n    </Screen>\n  );\n};\n\nconst AvgWidget = ({avg, dark}: {avg: number; dark: boolean}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View style={{flexDirection: 'row', alignItems: 'center'}}>\n      <ProgressCircle\n        strokeWidth={8 * p}\n        radius={30 * p}\n        value={avg}\n        dark={dark}\n        max={30}\n      />\n      <View style={{marginLeft: 16 * p}}>\n        <Text\n          s={16 * p}\n          w=\"m\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginBottom: 8 * p}}>\n          {t('yourAverageMark')}*\n        </Text>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray300 : colors.gray600}>\n          *{t('yourAverageMarkNotice')}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst MarkWidget = ({\n  mark,\n  provisional,\n  dark,\n}: {\n  mark: PermanentMark | ProvisionalMark;\n  provisional: boolean;\n  dark: boolean;\n}) => {\n  const fields = useMemo(\n    () => getFields(mark, provisional, dark),\n    [mark, provisional, dark],\n  );\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        padding: 16 * p,\n        borderRadius: 4 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        alignItems: 'flex-start',\n      }}>\n      <View style={{flexDirection: 'column', flex: 1}}>\n        <View style={{flexDirection: 'row'}}>\n          {provisional ? (\n            <View\n              style={{\n                width: 16 * p,\n                height: 16 * p,\n                borderRadius: 16 * p,\n                marginRight: 8 * p,\n                backgroundColor: colors.gray200,\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}>\n              <Text s={10} w=\"b\" c={colors.gray900}>\n                {(mark as ProvisionalMark).status}\n              </Text>\n            </View>\n          ) : null}\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {mark.name}\n          </Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: provisional ? 'column' : 'row',\n            marginTop: 16 * p,\n          }}>\n          {fields}\n        </View>\n      </View>\n      {parseInt(mark.mark!) ? (\n        <ProgressCircle\n          radius={20 * p}\n          value={parseInt(mark.mark!)}\n          max={30}\n          dark={dark}>\n          {(mark.mark?.toLowerCase() === '30 e lode' ||\n            parseInt(mark.mark!) > 30) && (\n            <>\n              <Text\n                style={{marginTop: -4 * p}} // make the text fit better\n                s={8 * p}\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"b\">\n                LODE\n              </Text>\n            </>\n          )}\n        </ProgressCircle>\n      ) : (\n        <View\n          style={[\n            {\n              padding: 8 * p,\n              borderRadius: 4 * p,\n              backgroundColor: colors.accent300,\n            },\n            !mark.mark ||\n            (mark as ProvisionalMark).failed ||\n            (mark as ProvisionalMark).absent\n              ? {\n                  backgroundColor: colors.red,\n                }\n              : null,\n          ]}>\n          {(mark as ProvisionalMark).failed ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examFailed')}\n            </Text>\n          ) : null}\n          {(mark as ProvisionalMark).absent ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examAbsent')}\n            </Text>\n          ) : null}\n          {mark.mark ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {mark.mark}\n            </Text>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst getFields = (\n  mark: PermanentMark | ProvisionalMark,\n  provisional: boolean,\n  dark: boolean,\n) => {\n  const perm_fields = ['date', 'credits'];\n  const prov_fields = ['date', 'message'];\n\n  const fields = provisional ? prov_fields : perm_fields;\n\n  let icons: (GlyphName | null)[] = [];\n  let values: string[] = [];\n\n  fields.forEach(name => {\n    switch (name) {\n      case 'date':\n        icons.push('calendar-time');\n        values.push(moment(mark.date).format('ll'));\n        break;\n      case 'credits':\n        icons.push('north-star');\n        values.push(\n          (mark as PermanentMark).num_credits + ' ' + i18next.t('credits'),\n        );\n        break;\n      case 'message':\n        icons.push('message');\n        values.push((mark as ProvisionalMark).message || '');\n        break;\n      default:\n        icons.push(null);\n        values.push('');\n        break;\n    }\n  });\n\n  return fields.map((name, i) => (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          alignItems: name == 'message' ? 'flex-start' : 'center',\n          flex: 1,\n        },\n        provisional && i > 0 ? {marginTop: 8 * p} : {},\n      ]}>\n      {icons[i] !== null && (\n        <TablerIcon\n          name={icons[i]!}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n      )}\n      <Text\n        style={{marginRight: 8 * p}}\n        s={10 * p}\n        w=\"r\"\n        c={dark ? colors.gray200 : colors.gray700}>\n        {values[i] || ''}\n      </Text>\n    </View>\n  ));\n};\n\nexport default Exams;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {bookExamSession, ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {Device} from 'open-polito-api/lib/device';\nimport {DeviceContext} from '../../context/Device';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\n\nconst bookExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await bookExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamBookedToastMessage'\n              : 'examsExamBookingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsBookExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('confirmExamBooking')}\n      onConfirm={() => bookExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('confirmExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsBookExamModal;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport colors from '../../colors';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {Device} from 'open-polito-api/lib/device';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {cancelExamSession} from 'open-polito-api/lib/exam_sessions';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\nimport {DeviceContext} from '../../context/Device';\n\nconst cancelExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await cancelExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamCanceledToastMessage'\n              : 'examsExamCancelingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsCancelExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('cancelExamBooking')}\n      accentColor={colors.red}\n      icon=\"alert-triangle\"\n      onConfirm={() => cancelExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('cancelExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsCancelExamModal;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, RefreshControl, TouchableOpacity, View} from 'react-native';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport colors from '../colors';\nimport moment from 'moment';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {ExamsState, getExams} from '../store/examsSlice';\nimport {STATUS} from '../store/status';\nimport {DeviceContext} from '../context/Device';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport NoContent from '../ui/NoContent';\nimport ExamsBookExamModal from '../components/modals/ExamsBookExamModal';\nimport ExamsCancelExamModal from '../components/modals/ExamsCancelExamModal';\nimport {ModalContext} from '../context/ModalProvider';\nimport {getLanguageCode} from '../utils/l10n';\n\nconst isExamBooked = (examSession: ExamSession): boolean => {\n  return examSession.user_is_signed_up;\n};\n\nconst isExamAvailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id === 0;\n};\n\nconst isExamUnavailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id !== 0;\n};\n\nconst tabs = ['allExams', 'myBookings', 'availableToBook', 'unavailableExams'];\n\nexport default function ExamSessions() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {dark, device} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const {exams, getExamsStatus} = useSelector<RootState, ExamsState>(\n    state => state.exams,\n  );\n\n  const [tab, setTab] = useState(tabs[0]);\n\n  const [errorMsgLanguage, setErrorMsgLanguage] = useState('en');\n\n  // Initial setup\n  useEffect(() => {\n    if (\n      getExamsStatus.code === STATUS.IDLE ||\n      getExamsStatus.code === STATUS.ERROR\n    ) {\n      dispatch(getExams(device));\n    }\n    (async () => {\n      // Set language for error messages\n      switch (getLanguageCode()) {\n        case 'en':\n          setErrorMsgLanguage('en');\n          break;\n        case 'it':\n          setErrorMsgLanguage('it');\n          break;\n        default:\n          setErrorMsgLanguage('en');\n          break;\n      }\n    })();\n  }, [device, dispatch, getExamsStatus.code]);\n\n  /**\n   * Refresh exams\n   */\n  const refresh = useMemo(() => {\n    if (getExamsStatus.code !== STATUS.PENDING) {\n      dispatch(getExams(device));\n    }\n  }, [getExamsStatus, device, dispatch]);\n\n  // If tab or exams change, re-filter the exam sessions based on the active tab\n  const filteredSessions = useMemo(() => {\n    switch (tab) {\n      case tabs[0]:\n        return exams;\n      case tabs[1]:\n        return exams.filter(e => isExamBooked(e));\n      case tabs[2]:\n        return exams.filter(e => isExamAvailable(e));\n      case tabs[3]:\n        return exams.filter(e => isExamUnavailable(e));\n      default:\n        return [];\n    }\n  }, [tab, exams]);\n\n  const buildField = (type: string, e: ExamSession) => {\n    const icon =\n      type === 'date'\n        ? 'calendar-time'\n        : type === 'course'\n        ? 'grid-pattern'\n        : type === 'type'\n        ? 'writing'\n        : type === 'deadline'\n        ? 'alert-triangle'\n        : type === 'rooms'\n        ? 'map-pin'\n        : 'user-circle';\n    const text =\n      type === 'date'\n        ? `${moment(e.date).format('lll')} (${moment(e.date).fromNow()})`\n        : type === 'course'\n        ? e.course_id\n        : type === 'type'\n        ? e.type\n        : type === 'deadline'\n        ? `${t('bookingDeadline')}: ${moment(e.signup_deadline).format(\n            'lll',\n          )} (${moment(e.signup_deadline).fromNow()})`\n        : type === 'rooms'\n        ? e.rooms.join(', ')\n        : '(coming soon)';\n    return (\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n        <Text\n          numberOfLines={1}\n          style={{marginRight: 8 * p}}\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const examSessionCard = (examSession: ExamSession) => (\n    <View style={{flexDirection: 'row'}}>\n      <View\n        style={{\n          flexDirection: 'column',\n          flex: 1,\n          padding: 16 * p,\n          paddingRight: 8 * p,\n          paddingBottom: 8 * p,\n          borderTopLeftRadius: 4 * p,\n          borderBottomLeftRadius: 4 * p,\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n        }}>\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <TablerIcon\n            name={\n              examSession.user_is_signed_up\n                ? 'circle-check'\n                : examSession.error.id === 0\n                ? 'circle'\n                : 'circle-off'\n            }\n            color={\n              examSession.user_is_signed_up\n                ? colors.green\n                : examSession.error.id === 0\n                ? colors.accent200\n                : colors.red\n            }\n            size={24 * p}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {examSession.exam_name}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: 'column',\n            marginTop: 16 * p,\n          }}>\n          {['course', 'date', 'deadline', 'rooms'].map(field =>\n            buildField(field, examSession),\n          )}\n        </View>\n        {examSession.error.id !== 0 &&\n        (examSession.error.eng !== '' || examSession.error.ita !== '') ? (\n          <Text s={10 * p} w=\"r\" c={colors.red} style={{marginVertical: 8 * p}}>\n            {errorMsgLanguage === 'it'\n              ? examSession.error.ita\n              : examSession.error.eng}\n          </Text>\n        ) : null}\n      </View>\n      <View\n        style={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          borderTopRightRadius: 4 * p,\n          borderBottomRightRadius: 4 * p,\n          backgroundColor: dark ? colors.gray600 : colors.gray300,\n        }}>\n        {isExamAvailable(examSession) || isExamBooked(examSession) ? (\n          <TouchableOpacity\n            onPress={() =>\n              setModal(\n                isExamAvailable(examSession) ? (\n                  <ExamsBookExamModal examSession={examSession} />\n                ) : (\n                  <ExamsCancelExamModal examSession={examSession} />\n                ),\n              )\n            }>\n            <View\n              style={{\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 8 * p,\n              }}>\n              <View style={{marginBottom: 4 * p}}>\n                <TablerIcon\n                  name={\n                    isExamAvailable(examSession) ? 'circle-plus' : 'circle-x'\n                  }\n                  color={\n                    isExamAvailable(examSession) ? colors.accent300 : colors.red\n                  }\n                  size={20 * p}\n                />\n              </View>\n              <Text\n                s={10 * p}\n                w=\"m\"\n                c={\n                  isExamAvailable(examSession) ? colors.accent300 : colors.red\n                }>\n                {t(isExamAvailable(examSession) ? 'bookVerb' : 'cancel')}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    </View>\n  );\n\n  return (\n    <Screen>\n      <Header title={t('examSessions')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n        onChange={idx => setTab(tabs[idx])}\n      />\n      <FlatList\n        contentContainerStyle={{\n          paddingTop: 24 * p,\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        }}\n        data={filteredSessions}\n        keyExtractor={item => item.session_id + item.course_id + item.date}\n        renderItem={({item}) => examSessionCard(item)}\n        ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n        ListEmptyComponent={<NoContent />}\n        refreshing={getExamsStatus.code == STATUS.PENDING}\n        refreshControl={\n          <RefreshControl\n            refreshing={getExamsStatus.code == STATUS.PENDING}\n            onRefresh={refresh}\n          />\n        }\n      />\n    </Screen>\n  );\n}\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Maps = () => {\n  return <View></View>;\n};\n\nexport default Maps;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Classrooms = () => {\n  return <View></View>;\n};\n\nexport default Classrooms;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst People = () => {\n  return <View></View>;\n};\n\nexport default People;\n","import React, {useCallback, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport PressableCard from '../ui/core/PressableCard';\n\nexport default function Courses({navigation}) {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const gotoCourse = useCallback(\n    (course: CourseState) => {\n      navigation.navigate('Course', {\n        courseCode: course.basicInfo.code + course.basicInfo.name,\n      });\n    },\n    [navigation],\n  );\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('courses')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          {courses\n            .filter(course => course.isMain)\n            .map(mainCourse => (\n              <PressableCard\n                dark={dark}\n                onPress={() => gotoCourse(mainCourse)}\n                key={mainCourse.basicInfo.code + mainCourse.basicInfo.name}\n                title={mainCourse.basicInfo.name}\n              />\n            ))}\n          {courses.filter(course => !course.isMain).length > 0 ? (\n            <Section\n              dark={dark}\n              title={t('otherCourses')}\n              style={{marginTop: 8}}>\n              {courses\n                .filter(course => !course.isMain)\n                .map(secondaryCourse => (\n                  <PressableCard\n                    dark={dark}\n                    onPress={() => gotoCourse(secondaryCourse)}\n                    key={\n                      secondaryCourse.basicInfo.code +\n                      secondaryCourse.basicInfo.name\n                    }\n                    title={secondaryCourse.basicInfo.name}\n                  />\n                ))}\n            </Section>\n          ) : null}\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n}\n","import React, {FC, useEffect} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\n\ninterface CheckboxProps {\n  selected: boolean;\n  onChange: (value: boolean) => any;\n}\n\nconst Checkbox: FC<CheckboxProps> = ({selected, onChange}) => {\n  const offset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 20 * p * offset.value,\n    height: 20 * p * offset.value,\n    borderRadius: 4 * p,\n    backgroundColor: colors.accent300,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }));\n\n  /**\n   * Handle selection change\n   */\n  const handlePress = () => {\n    // Callback function\n    onChange(!selected);\n  };\n\n  /**\n   * Animate on change\n   */\n  useEffect(() => {\n    if (selected) {\n      offset.value = withTiming(1, {duration: 100});\n    } else {\n      offset.value = withTiming(0, {duration: 100});\n    }\n  }, [selected]);\n\n  return (\n    <PressableBase style={{padding: 4 * p}} onPress={handlePress}>\n      <View\n        style={{\n          width: 20 * p,\n          height: 20 * p,\n          backgroundColor: colors.gray700,\n          borderColor: colors.gray600,\n          borderWidth: 1 * p,\n          borderRadius: 4 * p,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Animated.View style={[animStyle]}>\n          <TablerIcon name=\"check\" size={12 * p} color={colors.gray50} />\n        </Animated.View>\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default Checkbox;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport {\n  deleteNotification,\n  markNotificationRead,\n  Notification,\n  NotificationType,\n} from 'open-polito-api/lib/notifications';\nimport {\n  ActivityIndicator,\n  BackHandler,\n  FlatList,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport store, {AppDispatch, RootState} from '../store/store';\nimport {\n  getNotificationList,\n  setNotifications,\n  UserState,\n} from '../store/userSlice';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport NotificationComponent from '../ui/Notification';\nimport NoContent from '../ui/NoContent';\nimport {STATUS} from '../store/status';\nimport PressableBase from '../ui/core/PressableBase';\nimport {CoursesState} from '../store/coursesSlice';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../colors';\nimport Checkbox from '../ui/core/Checkbox';\nimport {LongPressGestureHandler, State} from 'react-native-gesture-handler';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst _SelectableNotification = ({\n  dark,\n  n,\n  handlePress,\n  courseName,\n  selecting,\n  setSelecting,\n  selected,\n  onSelectionChange,\n}: {\n  dark: boolean;\n  n: Notification;\n  handlePress: (id: number) => any;\n  courseName: string;\n  selecting: boolean;\n  setSelecting: (selecting: boolean) => any;\n  selected: boolean;\n  onSelectionChange: (id: number, selected: boolean) => any;\n}) => {\n  const offset = useSharedValue(0);\n\n  const animStyleCheckbox = useAnimatedStyle(() => ({\n    width: 32 * p * offset.value,\n    transform: [\n      {\n        scale: offset.value,\n      },\n    ],\n    alignItems: 'flex-start',\n  }));\n\n  /**\n   * Show/hide checkbox\n   */\n  useEffect(() => {\n    offset.value = withTiming(selecting ? 1 : 0, {duration: 150});\n  }, [selecting]);\n\n  return (\n    <View style={{flex: 1}}>\n      <LongPressGestureHandler\n        onHandlerStateChange={({nativeEvent}) => {\n          if (nativeEvent.state === State.ACTIVE) {\n            if (!selecting) {\n              setSelecting(true);\n              onSelectionChange(n.id, true);\n            }\n          }\n        }}>\n        <Animated.View\n          style={{\n            marginBottom: 24 * p,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}>\n          <Animated.View style={[animStyleCheckbox]}>\n            <Checkbox\n              selected={selected}\n              onChange={sel => onSelectionChange(n.id, sel)}\n            />\n          </Animated.View>\n          <PressableBase style={{flex: 1}} onPress={() => handlePress(n.id)}>\n            <NotificationComponent\n              type={n.topic}\n              notification={n}\n              dark={dark}\n              read={n.is_read}\n              courseName={courseName}\n            />\n          </PressableBase>\n        </Animated.View>\n      </LongPressGestureHandler>\n    </View>\n  );\n};\n\nconst Notifications = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationTypes = [\n    {label: t('allF'), value: 'all'},\n    {label: t('readF'), value: 'read'},\n    {label: t('unreadF'), value: 'unread'},\n    {label: t('directAlerts'), value: 'direct'},\n    {label: t('courses'), value: 'course'},\n    {label: t('material'), value: 'material'},\n  ];\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  const {notifications, getNotificationsStatus} = useSelector<\n    RootState,\n    UserState\n  >(state => state.user);\n\n  const courses = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [refreshing, setRefreshing] = useState(false);\n\n  const refreshNotifications = () => {\n    setRefreshing(true);\n    dispatch(getNotificationList(device));\n  };\n\n  const getNotificationCourseName = (notification: Notification): string => {\n    return (\n      courses.courses.find(\n        course => course.basicInfo.id_incarico === (notification as any).course,\n      )?.basicInfo.name || ''\n    );\n  };\n\n  /**\n   * Set refreshing to false when done refreshing\n   */\n  useEffect(() => {\n    if (refreshing && getNotificationsStatus.code !== STATUS.PENDING) {\n      setRefreshing(false);\n    }\n  }, [notifications, refreshing, getNotificationsStatus.code, courses]);\n\n  /**\n   * Set notification as read.\n   * @param id The id of the notification\n   */\n  const handlePress = (id: number): void => {\n    // Find the notification index\n    const index = notifications.findIndex(n => n.id == id);\n\n    // Don't proceed if not found or if already read\n    if (index === -1) return;\n    if (notifications[index].is_read) return;\n\n    // Send read\n    (async () => {\n      await markNotificationRead(device, id);\n    })();\n\n    // Send updated array to store\n    let copy = {...notifications[index]};\n    copy.is_read = true;\n    store.dispatch(\n      setNotifications([\n        ...notifications.slice(0, index),\n        copy,\n        ...notifications.slice(index + 1),\n      ]),\n    );\n  };\n\n  const visible = useMemo<Notification[]>(() => {\n    switch (selectedCategory) {\n      case 'all':\n        return notifications;\n      case 'read':\n        return notifications.filter(n => n.is_read);\n      case 'unread':\n        return notifications.filter(n => !n.is_read);\n      case 'direct':\n        return notifications.filter(n => n.topic === NotificationType.DIRECT);\n      case 'course':\n        return notifications.filter(n => n.topic === NotificationType.NOTICE);\n      case 'material':\n        return notifications.filter(n => n.topic === NotificationType.MATERIAL);\n      default:\n        return [];\n    }\n  }, [notifications, selectedCategory]);\n\n  /**\n   * Whether we're in selection mode\n   */\n  const [selecting, setSelecting] = useState(false);\n  /**\n   * Selected notification ids in selection mode\n   */\n  const [selected, setSelected] = useState<number[]>([]);\n\n  const tabOffset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        scale: 0.75 + 0.25 * tabOffset.value,\n      },\n      {\n        translateY: 128 * p * (1 - tabOffset.value),\n      },\n    ],\n  }));\n\n  /**\n   * Show/hide bottom bar\n   */\n  useEffect(() => {\n    tabOffset.value = withTiming(selecting ? 1 : 0, {duration: 200});\n  }, [selecting]);\n\n  /**\n   * On exiting selection mode\n   */\n  useEffect(() => {\n    if (!selecting) setSelected([]);\n  }, [selecting]);\n\n  const handleSelectionChange = (id: number, sel: boolean) => {\n    if (sel) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter(s => s !== id));\n    }\n  };\n\n  /**\n   * Quit selection mode if no selected items\n   */\n  useEffect(() => {\n    if (selected.length === 0) {\n      setSelecting(false);\n    }\n  }, [selected]);\n\n  /**\n   * When in selection mode, if the hardware back button is pressed,\n   * exit selection mode instead of going back\n   */\n  const onHardwareBackButtonPressed = useCallback(() => {\n    if (selecting) {\n      setSelecting(false);\n      return true;\n    }\n    setSelected([]);\n    return false;\n  }, [selecting]);\n\n  /**\n   * When changing tab, exit selection mode\n   */\n  useEffect(() => {\n    setSelected([]);\n    setSelecting(false);\n  }, [selectedCategory]);\n\n  /**\n   * Setup & Cleanup\n   */\n  useEffect(() => {\n    BackHandler.addEventListener(\n      'hardwareBackPress',\n      onHardwareBackButtonPressed,\n    );\n    return () => {\n      setSelecting(false);\n      setSelected([]);\n      BackHandler.removeEventListener(\n        'hardwareBackPress',\n        onHardwareBackButtonPressed,\n      );\n    };\n  }, []);\n\n  const [deleting, setDeleting] = useState(false);\n\n  const deleteSelected = () => {\n    (async () => {\n      setDeleting(true);\n      for (let i = 0; i < selected.length; i++) {\n        await deleteNotification(device, selected[i]);\n      }\n      setTimeout(() => {\n        setDeleting(false);\n        setSelecting(false);\n      }, 500);\n      refreshNotifications();\n    })();\n  };\n\n  const areAllSelected = () => {\n    let allSelected = true;\n    for (let i = 0; i < visible.length; i++) {\n      if (!selected.includes(visible[i].id)) {\n        allSelected = false;\n        break;\n      }\n    }\n    return allSelected;\n  };\n\n  const selectionOptions = [\n    {\n      icon: areAllSelected() ? 'circle-minus' : 'circle-plus',\n      value: 'selectAll',\n      label: areAllSelected() ? t('deselectAll') : t('selectAll'),\n      action: () =>\n        areAllSelected()\n          ? setSelected([])\n          : setSelected(visible.map(n => n.id)),\n    },\n    {\n      icon: deleting ? 'loading' : 'trash',\n      value: 'delete',\n      label: t('delete'),\n      action: deleteSelected,\n    },\n    {\n      icon: 'checks',\n      value: 'markAsRead',\n      label: t('markAsRead'),\n      action: () => {\n        selected.forEach(id => handlePress(id));\n        setSelecting(false);\n      },\n    },\n  ];\n\n  return (\n    <Screen>\n      <Animated.View\n        style={[\n          animStyle,\n          {\n            position: 'absolute',\n            bottom: 16 * p,\n            left: 0,\n            right: 0,\n            zIndex: 1000,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            paddingVertical: 8 * p,\n            marginHorizontal: 16 * p,\n            borderRadius: 16 * p,\n            borderWidth: 1 * p,\n            borderColor: dark ? colors.gray600 : colors.gray300,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n          },\n        ]}>\n        {selectionOptions.map(opt => (\n          <View\n            style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n            <PressableBase\n              disabled={opt.icon === 'loading'}\n              style={{justifyContent: 'center', alignItems: 'center'}}\n              onPress={opt.action}>\n              {opt.icon === 'loading' ? (\n                <ActivityIndicator color={colors.accent300} size={20 * p} />\n              ) : (\n                <TablerIcon\n                  name={opt.icon}\n                  color={colors.accent300}\n                  size={20 * p}\n                />\n              )}\n              <View style={{height: 4 * p}} />\n              <Text c={colors.accent300} w=\"r\" s={10 * p}>\n                {opt.label}\n              </Text>\n            </PressableBase>\n          </View>\n        ))}\n      </Animated.View>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('notifications')} />\n      <Tabs\n        adjusted\n        dark={dark}\n        items={notificationTypes}\n        onChange={(index: number) =>\n          setSelectedCategory(notificationTypes[index].value)\n        }\n      />\n      <View style={styles.container}>\n        <FlatList\n          contentContainerStyle={styles.paddingHorizontal}\n          data={visible}\n          keyExtractor={item => item.id.toString()}\n          ListEmptyComponent={<NoContent />}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={refreshNotifications}\n            />\n          }\n          initialNumToRender={10}\n          maxToRenderPerBatch={10}\n          renderItem={n => (\n            <_SelectableNotification\n              dark={dark}\n              n={n.item}\n              handlePress={id => handlePress(id)}\n              courseName={getNotificationCourseName(n.item)}\n              selecting={selecting}\n              setSelecting={sel => setSelecting(sel)}\n              selected={selected.includes(n.item.id)}\n              onSelectionChange={(id, sel) => handleSelectionChange(id, sel)}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  );\n};\n\nexport default Notifications;\n","import React, {useCallback, useContext, useEffect} from 'react';\nimport Home from '../screens/Home';\nimport Email from '../screens/Email';\nimport Settings from '../screens/Settings';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Material from '../screens/Material';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  getRecentMaterial,\n  loadCourse,\n  loadCoursesData,\n  setLoadExtendedCourseInfoStatus,\n} from '../store/coursesSlice';\nimport {DeviceContext} from '../context/Device';\nimport {\n  getNotificationList,\n  getUnreadEmailCount,\n  UserState,\n} from '../store/userSlice';\nimport {registerPushNotifications} from 'open-polito-api/lib/notifications';\nimport {NativeModules, Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport {pendingStatus, STATUS, successStatus} from '../store/status';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport Drawer from '../ui/Drawer';\nimport {login, SessionState} from '../store/sessionSlice';\nimport Bookings from '../screens/Bookings';\nimport Timetable from '../screens/Timetable';\nimport Exams from '../screens/Exams';\nimport ExamSessions from '../screens/ExamSessions';\nimport Maps from '../screens/Maps';\nimport Classrooms from '../screens/Classrooms';\nimport People from '../screens/People';\nimport Courses from '../screens/Courses';\nimport Notifications from '../screens/Notifications';\nimport {DrawerContentComponentProps} from '@react-navigation/drawer';\nimport {DeviceSize} from '../types';\n\nexport type DrawerStackParamList = {\n  Home: undefined;\n  Material: undefined;\n  Email: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n  ExamSessions: undefined;\n  Timetable: undefined;\n  Exams: undefined;\n  Bookings: undefined;\n  Courses: undefined;\n  Maps: undefined;\n  People: undefined;\n  Classrooms: undefined;\n};\n\nconst DrawerStack = createDrawerNavigator<DrawerStackParamList>();\n\nexport default function HomeRouter() {\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark, device, size} = useContext(DeviceContext);\n\n  const {getNotificationsStatus} = useSelector<RootState, UserState>(\n    state => state.user,\n  );\n\n  const {loginStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  const {courses, getRecentMaterialStatus, loadCoursesStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  /**\n   * Login with token\n   */\n  useEffect(() => {\n    if (loginStatus.code === STATUS.IDLE) {\n      dispatch(login({method: 'token', device}));\n    }\n  }, [loginStatus, device, dispatch]);\n\n  /**\n   * Whenever notifications status is set to IDLE,\n   * load them again\n   */\n  useEffect(() => {\n    if (\n      getNotificationsStatus.code !== STATUS.IDLE ||\n      loginStatus.code !== STATUS.SUCCESS\n    ) {\n      return;\n    }\n    dispatch(getNotificationList(device));\n  }, [getNotificationsStatus, loginStatus]);\n\n  /**\n   * Load everything else only after login successful\n   */\n  useEffect(() => {\n    if (loginStatus.code !== STATUS.SUCCESS) {\n      return;\n    }\n    dispatch(loadCoursesData(device));\n    dispatch(getUnreadEmailCount(device));\n\n    /**\n     * After user successfully logged in, register FCM notifications\n     * with current messaging token.\n     * TODO iOS support.\n     */\n    (async () => {\n      if (Platform.OS === 'android' && Config.VARIANT !== 'debug') {\n        const FCMToken = await NativeModules.NotificationModule.getToken();\n        await registerPushNotifications(device, FCMToken);\n      }\n    })();\n  }, [loginStatus]);\n\n  /**\n   * Load full course data when basic data loaded\n   * TODO change when persistence implemented\n   */\n  useEffect(() => {\n    (async () => {\n      if (loadCoursesStatus.code !== STATUS.SUCCESS) {\n        return; // Cancel if basic data not loaded\n      }\n      dispatch(setLoadExtendedCourseInfoStatus(pendingStatus())); // Pending\n      courses.forEach(course => {\n        if (course.status.code === STATUS.IDLE) {\n          dispatch(loadCourse({basicCourseInfo: course.basicInfo, device}));\n        }\n      });\n    })();\n  }, [loadCoursesStatus]);\n\n  /**\n   * When all courses fully loaded, get recent material\n   */\n  useEffect(() => {\n    if (\n      getRecentMaterialStatus.code !== STATUS.IDLE ||\n      loadCoursesStatus.code !== STATUS.SUCCESS\n    ) {\n      return; // Cancel if already computed/computing or basic data not even loaded\n    }\n    let allLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code !== STATUS.SUCCESS) {\n        allLoaded = false;\n      }\n    });\n    if (allLoaded) {\n      dispatch(setLoadExtendedCourseInfoStatus(successStatus())); // Success\n      dispatch(getRecentMaterial());\n    }\n  }, [courses, getRecentMaterialStatus]);\n\n  const getDrawerComponent = useCallback(\n    (props: DrawerContentComponentProps) => <Drawer dark={dark} {...props} />,\n    [dark],\n  );\n\n  return (\n    <DrawerStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        drawerType: size >= DeviceSize.lg ? 'permanent' : 'front',\n      }}\n      useLegacyImplementation\n      drawerContent={props => getDrawerComponent(props)}>\n      <DrawerStack.Screen name=\"Home\" component={Home} />\n      <DrawerStack.Screen name=\"Email\" component={Email} />\n      <DrawerStack.Screen name=\"Notifications\" component={Notifications} />\n      <DrawerStack.Screen name=\"Settings\" component={Settings} />\n      <DrawerStack.Screen name=\"Courses\" component={Courses} />\n      <DrawerStack.Screen name=\"Material\" component={Material} />\n      <DrawerStack.Screen name=\"Bookings\" component={Bookings} />\n      <DrawerStack.Screen name=\"Timetable\" component={Timetable} />\n      <DrawerStack.Screen name=\"Exams\" component={Exams} />\n      <DrawerStack.Screen name=\"ExamSessions\" component={ExamSessions} />\n      <DrawerStack.Screen name=\"Maps\" component={Maps} />\n      <DrawerStack.Screen name=\"Classrooms\" component={Classrooms} />\n      <DrawerStack.Screen name=\"People\" component={People} />\n    </DrawerStack.Navigator>\n  );\n}\n","import React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport Course from '../screens/Course';\nimport Search from '../screens/Search';\nimport Video from '../screens/Video';\nimport HomeRouter from './HomeRouter';\n\nexport type AppStackParamList = {\n  HomeRouter: undefined;\n  Search: undefined;\n  Course: undefined;\n  Video: undefined;\n};\n\nconst AppStack = createNativeStackNavigator<AppStackParamList>();\n\nconst AppStackNavigator = () => {\n  return (\n    <NavigationContainer>\n      <AppStack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}>\n        <AppStack.Screen name=\"HomeRouter\" component={HomeRouter} />\n        <AppStack.Screen name=\"Search\" component={Search} />\n        <AppStack.Screen name=\"Course\" component={Course} />\n        <AppStack.Screen name=\"Video\" component={Video} />\n      </AppStack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppStackNavigator;\n","import React, {\n  ReactNode,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\n\nimport {useSelector} from 'react-redux';\nimport {SessionState} from '../store/sessionSlice';\nimport {Configuration} from '../defaultConfig';\nimport {AUTH_STATUS} from '../store/status';\nimport {RootState} from '../store/store';\nimport {\n  checkForUpdates,\n  ReleaseJsonEntry,\n  updateCleanup,\n} from '../utils/updater';\nimport {ModalContext} from '../context/ModalProvider';\nimport BaseActionConfirmModal from '../components/modals/BaseActionConfirmModal';\nimport Text from '../ui/core/Text';\nimport {p} from '../scaling';\nimport {DeviceContext} from '../context/Device';\nimport {getLocales} from 'react-native-localize';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport Updater from '../screens/Updater';\nimport AppStackNavigator from './AppStackNavigator';\nimport {getLanguageCode, setMomentLocale} from '../utils/l10n';\nimport {genericPlatform} from '../utils/platform';\nimport HTMLRenderEngineProvider from '../context/HTMLRenderEngineProvider';\n\n/**\n * Types for React Navigation\n */\nexport type AuthStackParamList = {\n  Login: undefined;\n};\n\nexport type UpdaterState = {\n  checked: boolean;\n  acceptedUpdate: boolean;\n  releaseData?: ReleaseJsonEntry;\n};\n\n/**\n * Main routing component. Manages login and access to {@link AuthStack} and {@link AppStack}.\n */\nexport default function Router() {\n  const {t} = useTranslation();\n  const {setModal} = useContext(ModalContext);\n  const {dark} = useContext(DeviceContext);\n\n  // Setup moment locale.\n  // WARNING: Moment shouldn't be called by Router's parent components!\n  // Reason: Initial load time will be slower for new users on web\n  useEffect(() => {\n    setMomentLocale(getLanguageCode());\n  }, []);\n\n  // Update checking-related stuff\n  const [updaterState, setUpdaterState] = useState<UpdaterState>({\n    checked: false,\n    acceptedUpdate: false,\n  });\n\n  /**\n   * Check for updates and cleanup\n   */\n  useEffect(() => {\n    if (!updaterState.checked) {\n      checkForUpdates().then(data =>\n        setUpdaterState(prev => ({...prev, releaseData: data, checked: true})),\n      );\n    }\n    updateCleanup();\n  }, [updaterState.checked]);\n\n  // Show modal if update available\n  useEffect(() => {\n    if (updaterState.releaseData) {\n      const locale = getLocales()[0].languageCode;\n      let notes = updaterState.releaseData.notes.find(\n        n => n.language === locale,\n      );\n\n      setModal(\n        <BaseActionConfirmModal\n          title={t('newUpdateModalTitle')}\n          icon=\"download\"\n          accentColor={'#2dba2a'}\n          onConfirm={() =>\n            setUpdaterState(prev => ({\n              ...prev,\n              acceptedUpdate: true,\n            }))\n          }>\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n            {t('newUpdateModalText') + '\\n\\n' + t('newUpdateModalNotes') + '\\n'}\n          </Text>\n          {updaterState.releaseData.format === 'text'\n            ? (notes?.content || []).map(note => (\n                <Text\n                  s={12 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}>\n                  {`  • ${note}`}\n                </Text>\n              ))\n            : (notes?.content || []).map(note => (\n                <RenderHTMLSource source={{html: note}} />\n              ))}\n        </BaseActionConfirmModal>,\n      );\n    }\n  }, [updaterState.releaseData, dark, setModal, t]);\n\n  const {authStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  // Logging-related stuff\n  const {logging} = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [message, setMessage] = useState<ReactNode>(null);\n\n  // If loggingEnabled changes, set whether to show top message\n  useEffect(() => {\n    logging\n      ? setMessage(buildMessage({text: t('Logging enabled'), type: 'warn'}))\n      : setMessage(null);\n  }, [logging, t]);\n\n  // Returns message component\n  const buildMessage = ({text = '', type = 'warn'}) => {\n    return (\n      <View\n        style={{\n          backgroundColor: type == 'warn' ? colors.orange : colors.black,\n          paddingVertical: 4,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"m\" c={colors.white}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const children = useMemo(\n    () => (\n      <>\n        {message}\n        {updaterState.acceptedUpdate ? (\n          <Updater releaseData={updaterState.releaseData!} />\n        ) : authStatus !== AUTH_STATUS.NOT_VALID ? (\n          <AppStackNavigator />\n        ) : null}\n      </>\n    ),\n    [authStatus, message, updaterState],\n  );\n\n  /**\n   * If on web, {@link HTMLRenderEngineProvider} has not been created\n   * in the parent App component. We need to insert it now.\n   */\n  return genericPlatform === 'web' ? (\n    <HTMLRenderEngineProvider>{children}</HTMLRenderEngineProvider>\n  ) : (\n    children\n  );\n}\n"],"sourceRoot":""}