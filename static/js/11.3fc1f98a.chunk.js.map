{"version":3,"sources":["src/ui/DirectoryItem.tsx","src/ui/core/TextInput.tsx","src/screens/Search.tsx","src/components/modals/ListSelectorModal.tsx","src/ui/core/BadgeContainer.tsx","src/utils/getFileIcon.tsx","src/ui/Screen.tsx","src/ui/Tabs.tsx"],"names":["sizes","computeSizeLabel","size","_size","Math","floor","index","min","log10","length","toFixed","downloadFile","device","item","getDownloadURL","then","url","openURL","relativeDate","dark","course","onPress","children","sizeLabel","useMemo","type","useContext","DeviceContext","iconComponent","getFileIcon","filename","name","color","colors","gray200","gray700","p","View","style","flexDirection","android_ripple","lightGray","justifyContent","alignItems","paddingVertical","flex","marginLeft","marginRight","c","gray100","gray800","w","s","numberOfLines","gray300","moment","creation_date","fromNow","format","Pressable","accent300","width","backgroundColor","gray600","icon","initiallyFocused","inputStyle","props","ref","useRef","useEffect","current","focus","_styles","StyleSheet","create","textInputContainer","height","paddingHorizontal","borderRadius","textInput","padding","fontFamily","fontSize","inputRef","placeholderTextColor","navigation","t","useTranslation","useDispatch","setModal","ModalContext","courses","useSelector","state","useState","query","setQuery","results","setResults","searchFilter","setSearchFilter","quickLoad","setQuickLoad","searchTimer","setSearchTimer","loadTimer","setLoadTimer","items","label","value","map","basicInfo","code","handleNewSearch","txt","_query","toLowerCase","trim","clearTimeout","setTimeout","searchMaterial","findFiles","_items","course_name","course_code","_results","forEach","includes","push","res","_course","find","extendedInfo","material","goBack","placeholder","autoFocus","onChangeText","title","onSelect","number","onChange","adjusted","FlatList","paddingTop","contentContainerStyle","flexGrow","data","slice","keyExtractor","initialNumToRender","maxToRenderPerBatch","renderItem","key","ListEmptyComponent","marginTop","marginBottom","ListFooterComponent","hideModal","_onSelect","useCallback","dismissable","TouchableOpacity","badge","position","red","right","top","badgeText","ext","split","pop","i","FILE_TYPES","extensions","colorLight","gray500","black","gradient1","orange","green","chosenTheme","screen","StatusBar","barStyle","defaultIndex","selectedIndex","setSelectedIndex","container","tab","selectedIndicator","ScrollView","horizontal","showsHorizontalScrollIndicator"],"mappings":"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","file":"static/js/11.3fc1f98a.chunk.js","sourcesContent":["import moment from 'moment';\nimport {File, getDownloadURL, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {Pressable, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport getFileIcon from '../utils/getFileIcon';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport Text from './core/Text';\nimport PressableBase from './core/PressableBase';\nimport {Device} from 'open-polito-api/lib/device';\nimport openURL from '../utils/openUrl';\n\nexport type DirectoryItemProps = {\n  item: MaterialItem;\n  relativeDate?: boolean;\n  dark: boolean;\n  course?: string;\n  onPress?: Function;\n  children?: ReactNode;\n};\n\nconst sizes = ['B', 'kB', 'MB', 'GB', 'TB'];\n\nexport const computeSizeLabel = (size: number) => {\n  const _size = Math.floor(size);\n  const index = Math.min(\n    _size > 0 ? Math.floor(Math.floor(Math.log10(_size)) / 3) : 0,\n    sizes.length - 1,\n  );\n  return `${(_size / 10 ** (index === 0 ? 1 : 3 * index)).toFixed(2)} ${\n    sizes[index]\n  }`;\n};\n\nconst downloadFile = (device: Device, item: File) => {\n  getDownloadURL(device, item).then(url => openURL(url));\n};\n\nconst DirectoryItem: FC<DirectoryItemProps> = ({\n  item,\n  relativeDate = false, // show as \"X days/hours ago instead of plain date\"\n  dark,\n  course = '',\n  onPress = () => {},\n  children,\n}) => {\n  const sizeLabel = useMemo(() => {\n    return item.type === 'file' ? computeSizeLabel(item.size * 1000) : '';\n  }, [item]);\n\n  const {device} = useContext(DeviceContext);\n\n  const iconComponent = useMemo(() => {\n    return item.type === 'file' ? (\n      getFileIcon(item.filename, dark)\n    ) : (\n      <TablerIcon\n        name=\"folder\"\n        color={dark ? colors.gray200 : colors.gray700}\n        size={24 * p}\n      />\n    );\n  }, [item, dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n      }}>\n      <PressableBase\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          item.type === 'file' ? () => downloadFile(device, item) : onPress();\n        }} // download file if file, otherwise use onPress prop\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 8,\n        }}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            flex: 1,\n          }}>\n          {iconComponent}\n          <View\n            style={{\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n              marginLeft: 10 * p,\n              flex: 1,\n            }}>\n            <View style={{marginRight: 10 * p}}>\n              <Text\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"m\"\n                s={12 * p}\n                numberOfLines={1}>\n                {item.name}\n              </Text>\n            </View>\n            {item.type === 'file' && (\n              <View style={{flexDirection: 'column', flex: 1}}>\n                <Text numberOfLines={1} w=\"r\" s={10 * p} c={colors.gray300}>\n                  {sizeLabel + ' · '}\n                  {relativeDate\n                    ? moment(item.creation_date).fromNow()\n                    : moment(item.creation_date).format('ll')}\n                  {course ? ` · ${course}` : ''}\n                </Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {item.type === 'file' ? (\n          <Pressable\n            android_ripple={{color: colors.lightGray}}\n            onPress={() => downloadFile(device, item)}>\n            <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={colors.accent300}\n            />\n          </Pressable>\n        ) : null}\n      </PressableBase>\n      {item.type === 'dir' ? (\n        <View style={{flexDirection: 'row'}}>\n          <View\n            style={{\n              width: 16 * p,\n              alignItems: 'flex-start',\n            }}>\n            <View\n              style={{\n                flex: 1,\n                marginLeft: 4 * p,\n                width: 2 * p,\n                backgroundColor: dark ? colors.gray600 : colors.gray300,\n              }}\n            />\n          </View>\n          <View style={{flex: 1}}>{children}</View>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default DirectoryItem;\n","import React, {FC, MutableRefObject, useEffect, useMemo, useRef} from 'react';\nimport {StyleSheet, TextStyle, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport TablerIcon from './TablerIcon';\nimport {TextInput as RNTextInput, TextInputProps} from 'react-native';\nimport {p} from '../../scaling';\n\ntype TextInputParams = {\n  dark: boolean;\n  icon?: string;\n  initiallyFocused?: boolean;\n  inputStyle?: TextStyle;\n  style?: ViewStyle;\n} & TextInputProps;\n\nconst TextInput: FC<TextInputParams> = ({\n  dark,\n  icon = '',\n  initiallyFocused = false,\n  inputStyle = {},\n  style = {},\n  ...props\n}) => {\n  const ref = useRef<RNTextInput | null>(null);\n\n  useEffect(() => {\n    if (initiallyFocused) ref.current?.focus();\n  }, [initiallyFocused]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      textInputContainer: {\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        // paddingVertical: 8 * p,\n        height: 40 * p,\n        paddingHorizontal: 12 * p,\n        borderRadius: 4 * p,\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      textInput: {\n        padding: 0,\n        fontFamily: 'Inter-Regular',\n        fontSize: 10 * p,\n        flex: 1,\n        color: dark ? colors.gray200 : colors.gray700,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View style={{..._styles.textInputContainer, ...(style as Object)}}>\n      {icon ? (\n        <TablerIcon\n          name={icon}\n          size={18 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n      ) : null}\n      <RNTextInput\n        ref={inputRef => (ref.current = inputRef)}\n        {...props}\n        style={{\n          ..._styles.textInput,\n          ...(inputStyle as Object),\n        }}\n        placeholderTextColor={dark ? colors.gray300 : colors.gray600}\n      />\n    </View>\n  );\n};\n\nexport default TextInput;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {FlatList, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch, useSelector} from 'react-redux';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport {DropdownItem, ExtendedFile} from '../types';\nimport {MaterialItem} from 'open-polito-api/lib/material';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport PressableBase from '../ui/core/PressableBase';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport {DeviceContext} from '../context/Device';\nimport Tabs from '../ui/Tabs';\nimport Text from '../ui/core/Text';\nimport BadgeContainer from '../ui/core/BadgeContainer';\nimport {ModalContext} from '../context/ModalProvider';\nimport ListSelectorModal from '../components/modals/ListSelectorModal';\n\n// TODO more searchable categories\nconst tabs = ['files'];\n\nexport default function Search({navigation}) {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<ExtendedFile[]>([]);\n\n  const [searchFilter, setSearchFilter] = useState('');\n\n  const [quickLoad, setQuickLoad] = useState(true);\n\n  // Timer controlling when to search again\n  const [searchTimer, setSearchTimer] = useState<any>(null);\n\n  // Timer controlling when to show full list\n  const [loadTimer, setLoadTimer] = useState<any>(null);\n\n  const items = useMemo<DropdownItem[]>(() => {\n    return [\n      {\n        label: t('allCourses'),\n        value: '',\n      },\n      ...courses.map(c => ({\n        label: c.basicInfo.name,\n        value: c.basicInfo.code + c.basicInfo.name,\n      })),\n    ];\n  }, [courses]);\n\n  useEffect(() => {\n    handleNewSearch(query);\n  }, [searchFilter, query]);\n\n  /**\n   * Handles a new search\n   * @param txt The query\n   */\n  const handleNewSearch = (txt: string) => {\n    const _query = txt.toLowerCase().trim();\n    if (searchTimer) {\n      clearTimeout(searchTimer);\n    }\n    if (loadTimer) {\n      clearTimeout(loadTimer);\n    }\n    setQuickLoad(true);\n    setSearchTimer(\n      setTimeout(() => {\n        searchMaterial(_query);\n        setLoadTimer(\n          setTimeout(() => {\n            setQuickLoad(false);\n          }, 500),\n        );\n      }, 50),\n    );\n  };\n\n  /**\n   * Recursively finds files that match query\n   *\n   * @param _query Search string\n   * @param _items Array of files or dirs\n   * @param course_name\n   * @param course_code\n   * @returns files\n   */\n  const findFiles = (\n    _query: string,\n    _items: MaterialItem[],\n    course_name: string,\n    course_code: string,\n  ): ExtendedFile[] => {\n    let _results: ExtendedFile[] = [];\n    _items.forEach(item => {\n      if (item.type == 'file') {\n        if ((item.name + item.filename).toLowerCase().includes(_query)) {\n          _results.push({...item, course_code, course_name});\n        }\n      } else if (item.type == 'dir') {\n        _results.push(\n          ...findFiles(_query, item.children, course_name, course_code),\n        );\n      }\n    });\n    return _results;\n  };\n\n  /**\n   * Searches files matching specific query and course, and updates state.\n   */\n  const searchMaterial = (_query: string): void => {\n    // Using setTimeout is a bit hacky, but it works.\n    (async () => {\n      setTimeout(() => {\n        let res: ExtendedFile[] = [];\n        if (_query === '') {\n          setResults([]);\n          return;\n        }\n\n        if (searchFilter) {\n          const _course = courses.find(\n            course =>\n              searchFilter ===\n              `${course.basicInfo.code}${course.basicInfo.name}`,\n          );\n          if (!_course) {\n            res = [];\n            return;\n          }\n          res.push(\n            ...findFiles(\n              _query,\n              _course.extendedInfo?.material || [],\n              _course.basicInfo.name,\n              _course.basicInfo.code,\n            ),\n          );\n        } else {\n          courses.forEach(course => {\n            res.push(\n              ...findFiles(\n                _query,\n                course.extendedInfo?.material || [],\n                course.basicInfo.name,\n                course.basicInfo.code,\n              ),\n            );\n          });\n        }\n\n        setResults(res);\n      }, 0);\n    })();\n  };\n\n  return (\n    <Screen>\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: 12 * p,\n          paddingVertical: 16 * p,\n        }}>\n        <PressableBase\n          onPress={navigation.goBack}\n          style={{marginRight: 16 * p}}>\n          <TablerIcon\n            name=\"arrow-left\"\n            color={dark ? colors.gray200 : colors.gray700}\n            size={24 * p}\n          />\n        </PressableBase>\n        <TextInput\n          initiallyFocused\n          icon=\"search\"\n          dark={dark}\n          placeholder={t('searchForAnything')}\n          autoFocus={true}\n          onChangeText={txt => {\n            const _query = txt.toLowerCase().trim();\n            setQuery(_query);\n            handleNewSearch(_query);\n          }}\n          style={{flex: 1}}\n        />\n        <PressableBase\n          onPress={() => {\n            setModal(\n              <ListSelectorModal\n                items={items}\n                title={t('selectCourseDropdown')}\n                onSelect={value => setSearchFilter(value)}\n              />,\n            );\n          }}\n          style={{marginLeft: 16 * p}}>\n          <BadgeContainer number={searchFilter === '' ? 0 : ''}>\n            <TablerIcon\n              name=\"adjustments\"\n              color={dark ? colors.gray200 : colors.gray700}\n              size={24 * p}\n            />\n          </BadgeContainer>\n        </PressableBase>\n      </View>\n      <Tabs\n        dark={dark}\n        items={[{label: t('files'), value: 'files'}]}\n        onChange={() => {}}\n        adjusted\n      />\n      <FlatList\n        style={{paddingTop: 24 * p, paddingHorizontal: 16 * p}}\n        contentContainerStyle={{flexGrow: 1}}\n        data={quickLoad ? results.slice(0, 10) : results}\n        keyExtractor={item => item.code}\n        initialNumToRender={10}\n        maxToRenderPerBatch={10}\n        renderItem={({item}) => {\n          return (\n            <View key={item.code}>\n              <DirectoryItem\n                item={item}\n                key={item.code}\n                dark={dark}\n                course={item.course_name}\n              />\n            </View>\n          );\n        }}\n        ListEmptyComponent={\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <TablerIcon\n              name=\"search-off\"\n              size={64 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View\n              style={{\n                marginTop: 8 * p,\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray200 : colors.gray700}\n                style={{marginBottom: 8 * p}}>\n                {t('noResults')}\n              </Text>\n              <Text s={10 * p} w=\"m\" c={dark ? colors.gray300 : colors.gray600}>\n                {t('tryADifferentTerm')}\n              </Text>\n            </View>\n          </View>\n        }\n        ListFooterComponent={<View style={{marginBottom: 24 * p}}></View>}\n      />\n    </Screen>\n  );\n}\n","import React, {FC, useCallback, useContext} from 'react';\nimport {View} from 'react-native';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\n\nexport interface ListSelectorModalProps {\n  title: string;\n  items: {label: string; value: string}[];\n  onSelect: (value: string) => any;\n}\n\nconst ListSelectorModal: FC<ListSelectorModalProps> = ({\n  title,\n  items,\n  onSelect,\n}) => {\n  const {dark} = useContext(DeviceContext);\n  const {hideModal} = useContext(ModalContext);\n\n  const _onSelect = useCallback(\n    (value: string) => {\n      onSelect(value);\n      hideModal();\n    },\n    [onSelect, hideModal],\n  );\n\n  return (\n    <ModalBase title={title} dismissable>\n      {items.map(item => (\n        <TouchableOpacity\n          key={item.value}\n          onPress={() => _onSelect(item.value)}>\n          <View\n            style={{\n              paddingVertical: 8 * p,\n            }}>\n            <Text s={12 * p} w=\"r\" c={dark ? colors.gray100 : colors.gray800}>\n              {item.label}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default ListSelectorModal;\n","import React, {FC, ReactNode, useMemo} from 'react';\nimport {StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from './Text';\n\n/**\n * Wraps a component inside a view showing a badge.\n *\n * The badge is hidden if the number is 0.\n *\n * @param param0\n * @returns\n */\nconst BadgeContainer: FC<{\n  children: ReactNode;\n  style?: ViewStyle;\n  number: number | string;\n}> = ({children, style = {}, number}) => {\n  const badgeText = useMemo(() => {\n    return typeof number === 'string' ? number : number > 99 ? '99+' : number;\n  }, [number]);\n\n  return (\n    <View style={{...style}}>\n      {children}\n      {badgeText !== 0 ? (\n        <View style={_styles.badge}>\n          <Text w=\"r\" s={10 * p} c={colors.gray100}>\n            {badgeText}\n          </Text>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst _styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    width: 20 * p,\n    height: 20 * p,\n    borderRadius: 20 * p,\n    backgroundColor: colors.red,\n    right: -10 * p,\n    top: -10 * p,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default BadgeContainer;\n","import React from 'react';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\n\nconst FILE_TYPES = [\n  {\n    icon: 'file-text',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['csv', 'log', 'md', 'txt'],\n  },\n  {\n    icon: 'archive',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['7z', 'bz', 'gz', 'rar', 'tar', 'zip', 'xz'],\n  },\n  {\n    icon: 'file-code',\n    color: colors.black,\n    extensions: [\n      'asm',\n      'c',\n      'cpp',\n      'cs',\n      'css',\n      'go',\n      'h',\n      'hpp',\n      'htm',\n      'html',\n      'java',\n      'js',\n      'json',\n      'jsx',\n      'ts',\n      'tsx',\n      'php',\n      'py',\n      'rs',\n      'xml',\n    ],\n  },\n  {\n    icon: 'photo',\n    color: colors.gradient1,\n    extensions: ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'svg', 'tiff'],\n  },\n  {\n    icon: 'movie',\n    color: colors.gradient1,\n    extensions: ['flv', 'mkv', 'mp4', 'mov', 'wmv', 'avi', 'webm'],\n  },\n  {\n    icon: 'headphones',\n    color: colors.red,\n    extensions: ['aac', 'alac', 'flac', 'm4a', 'mp3', 'ogg', 'wav', 'wma'],\n  },\n  {\n    icon: 'file-text',\n    color: colors.gradient1,\n    extensions: ['doc', 'docm', 'docx', 'odt'],\n  },\n  {\n    icon: 'file-text',\n    color: '#ff3848',\n    extensions: ['pdf'],\n  },\n  {\n    icon: 'presentation',\n    color: colors.orange,\n    extensions: ['odp', 'ppt', 'pptm', 'pptx'],\n  },\n  {\n    icon: 'table',\n    color: colors.green,\n    extensions: ['ods', 'xls', 'xlsm', 'xlsx'],\n  },\n];\n\nexport default function getFileIcon(filename: string, dark: boolean) {\n  const ext = filename.split('.').pop()!.toLowerCase();\n  for (let i = 0; i < FILE_TYPES.length; i++) {\n    const {icon, extensions} = FILE_TYPES[i];\n    if (extensions.includes(ext)) {\n      const color = !dark\n        ? FILE_TYPES[i].colorLight || FILE_TYPES[i].color\n        : FILE_TYPES[i].color;\n      return <TablerIcon name={icon} color={color} size={24 * p} />;\n    }\n  }\n  return (\n    <TablerIcon name=\"file-unknown\" color={colors.gray500} size={24 * p} />\n  );\n}\n","import React, {ReactNode, useContext, useMemo} from 'react';\nimport {StatusBar, StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\n\nconst Screen = ({children}: {children: ReactNode}) => {\n  const {dark, chosenTheme} = useContext(DeviceContext);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      screen: {\n        backgroundColor: dark ? colors.gray800 : colors.gray100,\n        flex: 1,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View style={{flex: 1}}>\n      <StatusBar\n        barStyle={\n          chosenTheme == 'system'\n            ? 'default'\n            : dark\n            ? 'dark-content'\n            : 'light-content'\n        }\n      />\n      <View style={_styles.screen}>{children}</View>\n    </View>\n  );\n};\n\nexport default Screen;\n","import React, {FC, useMemo, useState} from 'react';\nimport {ScrollView, StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\n// TODO animation\n\nexport type TabsParams = {\n  adjusted?: boolean; // Proper margins\n  items: {label: string; value: string}[];\n  onChange: (i: number) => any;\n  defaultIndex?: number;\n  dark: boolean;\n  style?: ViewStyle;\n};\n\nconst Tabs: FC<TabsParams> = ({\n  adjusted = false,\n  items,\n  onChange,\n  defaultIndex = 0,\n  dark,\n  style = {},\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n  const select = (index: number) => {\n    setSelectedIndex(index);\n    onChange(index);\n  };\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {},\n      adjusted: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n      },\n      tab: {},\n      selectedIndicator: {\n        marginTop: 4 * p,\n        height: 2 * p,\n        backgroundColor: colors.accent300,\n      },\n    });\n  }, [dark, adjusted]);\n\n  return (\n    <View>\n      <ScrollView\n        contentContainerStyle={{\n          ..._styles.container,\n          ...style,\n          ...(adjusted ? _styles.adjusted : {}),\n        }}\n        horizontal\n        showsHorizontalScrollIndicator={false}>\n        {items.map((tab, i) => (\n          <View style={_styles.tab} key={tab.value}>\n            <PressableBase\n              style={{marginRight: 24 * p}}\n              onPress={() => select(i)}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={\n                  i == selectedIndex\n                    ? colors.accent300\n                    : dark\n                    ? colors.gray100\n                    : colors.gray800\n                }>\n                {tab.label}\n              </Text>\n              {i == selectedIndex ? (\n                <View style={_styles.selectedIndicator} />\n              ) : null}\n            </PressableBase>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Tabs;\n"],"sourceRoot":""}