{"version":3,"sources":["src/screens/Course.tsx","src/ui/CourseVideos.tsx","src/ui/Filters.tsx","src/ui/CourseOverview.tsx","src/utils/material.ts","src/components/widgets/LiveWidget.tsx","../src/LinearGradient.tsx","../src/NativeLinearGradient.web.tsx","../src/normalizeColor.ts","src/components/AnimatedLiveCircle.tsx","src/components/widgets/WidgetBase.tsx","src/ui/CourseAlerts.tsx","src/ui/VideoCard.tsx","src/styles.ts"],"names":["navigation","route","dispatch","useDispatch","t","useTranslation","useContext","DeviceContext","device","dark","code","params","courseCode","courseData","useSelector","state","courses","find","course","basicInfo","name","useState","currentTab","setCurrentTab","tabs","useMemo","useEffect","status","STATUS","PENDING","SUCCESS","loadCourse","basicCourseInfo","refresh","refreshing","_styles","StyleSheet","create","container","paddingHorizontal","p","paddingBottom","section","ScrollView","refreshControl","RefreshControl","onRefresh","style","View","height","changeTab","courseId","marginBottom","alerts","extendedInfo","notices","map","alert","course_code","course_name","title","headerType","HEADER_TYPE","SECONDARY","adjusted","onChange","i","items","tab","label","value","flex","CourseVideosHeader","onYearChange","marginLeft","Object","keys","vc_recordings","sort","a","b","key","y","useNavigation","selectedYear","setSelectedYear","videos","current","date","parseInt","FlatList","data","ListEmptyComponent","ListHeaderComponent","renderItem","item","onPress","navigate","video","length","selected","setSelected","flexDirection","TouchableOpacity","paddingVertical","borderWidth","borderRadius","borderColor","colors","accent300","gray200","marginRight","s","w","c","materialTree","material","buildField","icon","index","alignItems","size","color","gray700","fields","professor","surname","num_credits","degree_year","year_period","ActivityIndicator","slice","field","live_lessons","liveClass","meeting_id","courseName","marginTop","getRecentCourseMaterial","file","notification","type","NotificationType","NOTICE","tree","filter","getMaterialList","flatMap","concat","children","creation_date","mounted","setMounted","setTime","intervalID","useRef","calculateTime","moment","utc","Date","now","diff","format","setInterval","clearInterval","withButton","withPadding","action","openURL","getLessonURL","url","LinearGradient","start","x","end","styles","elevatedSmooth","border","justifyContent","withHorizontalPadding","width","white","this","props","locations","resolvedLocations","console","warn","Platform","select","web","default","processColor","startPoint","_normalizePoint","endPoint","React","Component","point","Array","isArray","layout","setLayout","pseudoAngle","correctedStartPoint","correctedEndPoint","getControlPoints","py","px","Math","atan2","PI","colorStyle","output","normalizeColor","max","min","join","backgroundImage","onLayout","event","nativeEvent","oldLayout","opacity","isWebColor","colorInt","r","g","alpha","toFixed","indexOf","coeff","Animated","Value","loop","timing","toValue","duration","useNativeDriver","backgroundColor","subtract","transform","scale","position","left","top","compact","fullHeight","Pressable","android_ripple","lightGray","gray100","gray800","padding","marginVertical","initialNumToRender","keyExtractor","id","text","Dimensions","get","hours","minsString","ceil","floor","toString","lengthString","Image","source","uri","cover_url","undefined","resizeMode","right","bottom","numberOfLines","blackText","black","whiteText","grayText","gray","textRegular","fontFamily","textMedium","textBold","textExtraSmall","fontSize","textSmall","textNormal","textMediumSize","textLarge","textExtraLarge","textTitleLarge","withRoundedBorder","safePaddingTop","paddingTop","alignContent","paddingFromHeader","titleBar","tabNavigator","tabBarActiveTintColor","elevated","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","file":"static/js/10.fb27c6d8.chunk.js","sourcesContent":["import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {RefreshControl, ScrollView, StyleSheet, View} from 'react-native';\nimport CourseVideos from '../ui/CourseVideos';\nimport {useTranslation} from 'react-i18next';\nimport CourseOverview from '../ui/CourseOverview';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport CourseAlerts from '../ui/CourseAlerts';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState, loadCourse} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\n\nexport default function Course({navigation, route}) {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const code = route.params.courseCode;\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const tabs = useMemo(() => {\n    return ['overview', 'material', 'alerts', 'videos'];\n  }, [courseData]);\n\n  // Populate course data if empty\n  useEffect(() => {\n    if (\n      courseData &&\n      courseData?.status.code != STATUS.PENDING &&\n      courseData?.status.code != STATUS.SUCCESS\n    ) {\n      dispatch(\n        loadCourse({\n          basicCourseInfo: courseData.basicInfo,\n          device: device,\n        }),\n      );\n    }\n  }, []);\n\n  const refresh = () => {\n    dispatch(\n      loadCourse({\n        basicCourseInfo: courseData!.basicInfo,\n        device: device,\n      }),\n    );\n  };\n\n  const refreshing = useMemo(() => {\n    return courseData?.status.code == STATUS.PENDING;\n  }, [courseData]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  const section = useMemo(() => {\n    switch (tabs[currentTab]) {\n      case 'overview':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <CourseOverview code={code} changeTab={setCurrentTab} />\n            <View style={{height: 16 * p}} />\n          </ScrollView>\n        );\n      case 'material':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <MaterialExplorer dark={dark} courseId={code} />\n            <View style={{marginBottom: 16 * p}} />\n          </ScrollView>\n        );\n      case 'alerts':\n        return (\n          <CourseAlerts\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            alerts={\n              courseData?.extendedInfo?.notices.map(alert => {\n                return {\n                  ...alert,\n                  course_code: courseData.basicInfo.code,\n                  course_name: courseData.basicInfo.name,\n                };\n              }) || []\n            }\n          />\n        );\n      case 'videos':\n        return (\n          <CourseVideos\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            courseId={code}\n          />\n        );\n    }\n  }, [currentTab]);\n\n  return (\n    <Screen>\n      <Header\n        title={courseData?.basicInfo.name || ''}\n        headerType={HEADER_TYPE.SECONDARY}\n      />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i => {\n          setCurrentTab(i);\n        }}\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n      />\n      <View style={{flex: 1}}>{section}</View>\n    </Screen>\n  );\n}\n","import {useNavigation} from '@react-navigation/core';\nimport React, {ReactElement, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {p} from '../scaling';\nimport {CourseState} from '../store/coursesSlice';\nimport {RootState} from '../store/store';\nimport Filters from './Filters';\nimport NoContent from './NoContent';\nimport VideoCard from './VideoCard';\n\nconst CourseVideos = ({\n  courseId,\n  dark,\n  refreshControl,\n}: {\n  courseId: string;\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const {t} = useTranslation();\n  const navigation = useNavigation();\n\n  const [selectedYear, setSelectedYear] = useState('current');\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == courseId,\n    ),\n  );\n\n  const videos = useMemo(() => {\n    if (selectedYear === 'current') {\n      return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n        (a, b) => b.date - a.date,\n      );\n    }\n    return [\n      ...(courseData?.extendedInfo?.vc_recordings[parseInt(selectedYear, 10)] ||\n        []),\n    ].sort((a, b) => b.date - a.date);\n  }, [courseData, selectedYear]);\n\n  return (\n    <View>\n      <FlatList\n        data={videos}\n        ListEmptyComponent={<NoContent />}\n        refreshControl={refreshControl}\n        ListHeaderComponent={\n          <CourseVideosHeader\n            courseData={courseData}\n            onYearChange={y => setSelectedYear(y)}\n          />\n        }\n        renderItem={({item}) => (\n          <VideoCard\n            item={item}\n            dark={dark}\n            onPress={() => {\n              navigation.navigate('Video', {\n                video: {\n                  video: item,\n                  courseId: courseId,\n                }, // Directly convert Date to localized date string because react-navigation wants serialized data\n              });\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nconst CourseVideosHeader = ({\n  courseData,\n  onYearChange,\n}: {\n  courseData: CourseState | undefined;\n  onYearChange: (arg0: string) => any;\n}) => {\n  return (\n    <View style={{marginLeft: 16 * p}}>\n      <View style={{height: 16 * p}} />\n      <Filters\n        items={Object.keys(courseData?.extendedInfo?.vc_recordings || {})\n          .sort((a, b) => (a < b ? 1 : -1))\n          .map(key => ({label: key, value: key}))}\n        onChange={y => onYearChange(y)}\n      />\n      <View style={{height: 8 * p}} />\n    </View>\n  );\n};\n\nexport default CourseVideos;\n","import React, {useState} from 'react';\nimport {TouchableOpacity, View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst Filters = ({\n  items,\n  onChange,\n}: {\n  items: {label: string; value: string}[];\n  onChange: (arg0: string) => any;\n}) => {\n  const [selected, setSelected] = useState<string>(\n    items && items.length > 0 ? items[0].value : '',\n  );\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      {items.map(item => (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              onChange(item.value);\n              setSelected(item.value);\n            }}>\n            <View\n              style={{\n                paddingHorizontal: 8 * p,\n                paddingVertical: 4 * p,\n                borderWidth: 1 * p,\n                borderRadius: 16 * p,\n                borderColor:\n                  item.value === selected ? colors.accent300 : colors.gray200,\n                marginRight: 8 * p,\n              }}>\n              <Text\n                s={10 * p}\n                w=\"r\"\n                c={item.value === selected ? colors.accent300 : colors.gray200}>\n                {item.label}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Filters;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {getRecentCourseMaterial} from '../utils/material';\nimport LiveWidget from '../components/widgets/LiveWidget';\nimport {CourseState} from '../store/coursesSlice';\nimport Section from './Section';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {STATUS} from '../store/status';\nimport DirectoryItem from './DirectoryItem';\nimport Notification from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\n\n// TODO \"Exam is taken?\" feature\n\nconst CourseOverview: FC<{\n  code: string;\n  changeTab: Function;\n}> = ({code, changeTab}) => {\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const materialTree = courseData?.extendedInfo?.material || [];\n\n  const buildField = (name: string, icon: string, index: number) => {\n    return (\n      <View\n        key={icon}\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: (index + 1) % 3 == 0 ? 0 : 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n        />\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}\n          style={{marginLeft: 8 * p}}>\n          {name}\n        </Text>\n      </View>\n    );\n  };\n\n  const fields = useMemo(() => {\n    return [\n      {\n        name:\n          courseData?.extendedInfo?.professor.surname +\n          ' ' +\n          courseData?.extendedInfo?.professor.name,\n        icon: 'user-circle',\n      },\n      {\n        name: courseData?.basicInfo.num_credits + ' ' + t('credits'),\n        icon: 'north-star',\n      },\n      {\n        name: courseData?.basicInfo.code,\n        icon: 'grid-pattern',\n      },\n      {\n        name:\n          t('year') +\n            ' ' +\n            (courseData?.extendedInfo?.degree_year || '') +\n            ', ' +\n            t('period') +\n            ' ' +\n            courseData?.extendedInfo?.year_period || '',\n        icon: 'calendar-time',\n      },\n      // {\n      //   name: '(feature coming soon)',\n      //   icon: 'writing',\n      // },\n    ];\n  }, [courseData]);\n\n  return (\n    <View>\n      {/* Summary */}\n      <Section dark={dark} title={t('summary')}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (\n          <View style={{flexDirection: 'row'}}>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(0, 2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n          </View>\n        )}\n      </Section>\n      {courseData?.extendedInfo?.live_lessons.map(liveClass => (\n        <LiveWidget\n          key={liveClass.meeting_id}\n          liveClass={liveClass}\n          courseName={courseData.basicInfo.name}\n          device={device}\n        />\n      )) || null}\n      {/* Latest files */}\n      <Section dark={dark} title={t('latestFiles')} style={{marginTop: 24}}>\n        <View style={{marginTop: -8}}>\n          {courseData?.status.code == STATUS.PENDING ? (\n            <ActivityIndicator />\n          ) : (\n            getRecentCourseMaterial(materialTree || []).map(file => (\n              <DirectoryItem item={file} dark={dark} />\n            ))\n          )}\n        </View>\n      </Section>\n      {/* Latest alert */}\n      <Section dark={dark} title={t('latestAlert')} style={{marginTop: 16}}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (courseData?.extendedInfo?.notices || []).length > 0 ? (\n          <Notification\n            notification={{\n              ...courseData?.extendedInfo?.notices[0]!,\n              course_code: courseData?.basicInfo.code || '',\n              course_name: courseData?.basicInfo.name || '',\n            }}\n            type={NotificationType.NOTICE}\n            dark={dark}\n          />\n        ) : null}\n      </Section>\n    </View>\n  );\n};\n\nexport default CourseOverview;\n","import {File, MaterialItem} from 'open-polito-api/lib/material';\n\n/**\n * Returns all files from the current directory level only\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getLevelMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree.filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns all files from the whole material tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree\n    .flatMap(item =>\n      item.type == 'file'\n        ? [item]\n        : [item as MaterialItem].concat(getMaterialList(item.children)),\n    )\n    .filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns 3 most recent files from tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getRecentCourseMaterial = (\n  tree: MaterialItem[] | undefined,\n): File[] => {\n  return getMaterialList(tree || [])\n    .sort((a, b) => b.creation_date - a.creation_date)\n    .slice(0, 3);\n};\n","import moment from 'moment';\nimport {getLessonURL, LiveLesson} from 'open-polito-api/lib/course';\nimport {Device} from 'open-polito-api/lib/device';\nimport React, {FC, useEffect, useRef, useState} from 'react';\nimport {View} from 'react-native';\nimport {LinearGradient} from 'expo-linear-gradient';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport styles from '../../styles';\nimport Text from '../../ui/core/Text';\nimport AnimatedLiveCircle from '../AnimatedLiveCircle';\nimport WidgetBase from './WidgetBase';\nimport openURL from '../../utils/openUrl';\n\nexport type LiveWidgetProps = {\n  liveClass: LiveLesson;\n  courseName: string;\n  device: Device;\n};\n\nconst LiveWidget: FC<LiveWidgetProps> = ({liveClass, courseName, device}) => {\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [time, setTime] = useState<number | string>(0);\n  let intervalID = useRef<any>();\n\n  const calculateTime = () => {\n    return moment\n      .utc(moment(Date.now()).diff(moment(liveClass.date)))\n      .format('HH:mm:ss');\n  };\n\n  const gotoLiveClass = () => {\n    (async () => {\n      await openURL((await getLessonURL(device, liveClass)).url || '');\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      intervalID.current = setInterval(() => {\n        mounted && setTime(calculateTime());\n      }, 1000);\n    })();\n    return () => {\n      clearInterval(intervalID.current);\n      setMounted(false);\n    };\n  }, []);\n\n  return (\n    <WidgetBase withButton={false} withPadding={false} action={gotoLiveClass}>\n      <LinearGradient\n        start={{x: 0.2, y: 0.1}}\n        end={{x: 0.7, y: 0.9}}\n        colors={['#EA0000', '#C30000']}\n        style={{\n          paddingVertical: 16,\n          paddingHorizontal: 24,\n          ...styles.elevatedSmooth,\n          ...styles.border,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginLeft: -styles.withHorizontalPadding.paddingHorizontal / 2,\n          }}>\n          <View style={{marginRight: 8}}>\n            <AnimatedLiveCircle width={40}></AnimatedLiveCircle>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n            }}>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              LIVE\n            </Text>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              {calculateTime()}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n          }}>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {liveClass.title}\n          </Text>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {courseName}\n          </Text>\n        </View>\n      </LinearGradient>\n    </WidgetBase>\n  );\n};\n\nexport default LiveWidget;\n","import * as React from 'react';\nimport { Platform, processColor, ViewProps } from 'react-native';\n\nimport NativeLinearGradient from './NativeLinearGradient';\nimport { NativeLinearGradientPoint } from './NativeLinearGradient.types';\n\n// @needsAudit\n/**\n * An object `{ x: number; y: number }` or array `[x, y]` that represents the point\n * at which the gradient starts or ends, as a fraction of the overall size of the gradient ranging\n * from `0` to `1`, inclusive.\n */\nexport type LinearGradientPoint =\n  | {\n      /**\n       * A number ranging from `0` to `1`, representing the position of gradient transformation.\n       */\n      x: number;\n      /**\n       * A number ranging from `0` to `1`, representing the position of gradient transformation.\n       */\n      y: number;\n    }\n  | NativeLinearGradientPoint;\n\n// @needsAudit\nexport type LinearGradientProps = ViewProps & {\n  /**\n   * An array of colors that represent stops in the gradient. At least two colors are required\n   * (for a single-color background, use the `style.backgroundColor` prop on a `View` component).\n   */\n  colors: string[];\n  /**\n   * An array that contains `number`s ranging from `0` to `1`, inclusive, and is the same length as the `colors` property.\n   * Each number indicates a color-stop location where each respective color should be located.\n   * If not specified, the colors will be distributed evenly across the gradient.\n   *\n   * For example, `[0.5, 0.8]` would render:\n   * - the first color, solid, from the beginning of the gradient view to 50% through (the middle);\n   * - a gradient from the first color to the second from the 50% point to the 80% point; and\n   * - the second color, solid, from the 80% point to the end of the gradient view.\n   *\n   * > The color-stop locations must be ascending from least to greatest.\n   * @default []\n   */\n  locations?: number[] | null;\n  /**\n   * For example, `{ x: 0.1, y: 0.2 }` means that the gradient will start `10%` from the left and `20%` from the top.\n   *\n   * **On web**, this only changes the angle of the gradient because CSS gradients don't support changing the starting position.\n   * @default { x: 0.5, y: 0.0 }\n   */\n  start?: LinearGradientPoint | null;\n  /**\n   * For example, `{ x: 0.1, y: 0.2 }` means that the gradient will end `10%` from the left and `20%` from the bottom.\n   *\n   * **On web**, this only changes the angle of the gradient because CSS gradients don't support changing the end position.\n   * @default { x: 0.5, y: 1.0 }\n   */\n  end?: LinearGradientPoint | null;\n};\n\n/**\n * Renders a native view that transitions between multiple colors in a linear direction.\n */\nexport class LinearGradient extends React.Component<LinearGradientProps> {\n  render() {\n    const { colors, locations, start, end, ...props } = this.props;\n    let resolvedLocations = locations;\n    if (locations && colors.length !== locations.length) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      resolvedLocations = locations.slice(0, colors.length);\n    }\n\n    return (\n      <NativeLinearGradient\n        {...props}\n        colors={Platform.select({\n          web: colors as any,\n          default: colors.map(processColor),\n        })}\n        locations={resolvedLocations}\n        startPoint={_normalizePoint(start)}\n        endPoint={_normalizePoint(end)}\n      />\n    );\n  }\n}\n\nfunction _normalizePoint(\n  point: LinearGradientPoint | null | undefined\n): NativeLinearGradientPoint | undefined {\n  if (!point) {\n    return undefined;\n  }\n\n  if (Array.isArray(point) && point.length !== 2) {\n    console.warn('start and end props for LinearGradient must be of the format [x,y] or {x, y}');\n    return undefined;\n  }\n\n  return Array.isArray(point) ? point : [point.x, point.y];\n}\n","import * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\n\nimport { NativeLinearGradientPoint, NativeLinearGradientProps } from './NativeLinearGradient.types';\nimport { normalizeColor } from './normalizeColor';\n\nexport default function NativeLinearGradient({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: NativeLinearGradientProps): React.ReactElement {\n  const [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n  const { width = 1, height = 1 } = layout ?? {};\n\n  const pseudoAngle = React.useMemo(() => {\n    const getControlPoints = (): NativeLinearGradientPoint[] => {\n      let correctedStartPoint: NativeLinearGradientPoint = [0, 0];\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [\n          startPoint[0] != null ? startPoint[0] : 0.0,\n          startPoint[1] != null ? startPoint[1] : 0.0,\n        ];\n      }\n      let correctedEndPoint: NativeLinearGradientPoint = [0.0, 1.0];\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [\n          endPoint[0] != null ? endPoint[0] : 0.0,\n          endPoint[1] != null ? endPoint[1] : 1.0,\n        ];\n      }\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    const [start, end] = getControlPoints();\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    const py = end[1] - start[1];\n    const px = end[0] - start[0];\n\n    return 90 + (Math.atan2(py, px) * 180) / Math.PI;\n  }, [width, height, startPoint, endPoint]);\n\n  const gradientColors = React.useMemo(() => {\n    return colors.map((color: number, index: number): string | void => {\n      const hexColor = normalizeColor(color);\n      let output = hexColor;\n      if (locations && locations[index]) {\n        const location = Math.max(0, Math.min(1, locations[index]));\n        // Convert 0...1 to 0...100\n        const percentage = location * 100;\n        output += ` ${percentage}%`;\n      }\n      return output;\n    });\n  }, [colors, locations]);\n\n  const colorStyle = gradientColors.join(',');\n  const backgroundImage = `linear-gradient(${pseudoAngle}deg, ${colorStyle})`;\n  // TODO(Bacon): In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage },\n      ]}\n      onLayout={(event) => {\n        const { x, y, width, height } = event.nativeEvent.layout;\n        const oldLayout = layout ?? { x: 0, y: 0, width: 1, height: 1 };\n        // don't set new layout state unless the layout has actually changed\n        if (\n          x !== oldLayout.x ||\n          y !== oldLayout.y ||\n          width !== oldLayout.width ||\n          height !== oldLayout.height\n        ) {\n          setLayout({ x, y, width, height });\n        }\n\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n}\n","/**\n * Copyright (c) Expo.\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { processColor } from 'react-native';\n\nconst isWebColor = (color: string): boolean =>\n  color === 'currentcolor' ||\n  color === 'currentColor' ||\n  color === 'inherit' ||\n  color.indexOf('var(') === 0;\n\nexport function normalizeColor(color?: number | string, opacity: number = 1): void | string {\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  const colorInt = processColor(color) as number | undefined;\n  if (colorInt != null) {\n    const r = (colorInt >> 16) & 255;\n    const g = (colorInt >> 8) & 255;\n    const b = colorInt & 255;\n    const a = ((colorInt >> 24) & 255) / 255;\n    const alpha = (a * opacity).toFixed(2);\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n}\n","import React, {useEffect, useRef} from 'react';\nimport {Animated, View} from 'react-native';\nimport colors from '../colors';\n\nexport default function AnimatedLiveCircle({width}: {width: number}) {\n  const coeff = useRef(new Animated.Value(0)).current;\n\n  const animate = () => {\n    Animated.loop(\n      Animated.timing(coeff, {\n        toValue: 1.5,\n        duration: 2000,\n        useNativeDriver: true,\n      }),\n    ).start();\n  };\n\n  useEffect(animate, []);\n\n  return (\n    <View\n      style={{\n        width: width,\n        height: width,\n        borderRadius: width / 2,\n      }}>\n      <Animated.View\n        style={[\n          {\n            backgroundColor: colors.white,\n            width: width,\n            height: width,\n            borderRadius: width / 2,\n            opacity: Animated.subtract(1.5, coeff),\n          },\n          {transform: [{scale: coeff}]},\n        ]}></Animated.View>\n      <View\n        style={{\n          position: 'absolute',\n          left: width / 4,\n          top: width / 4,\n          width: width / 2,\n          height: width / 2,\n          borderRadius: width / 4,\n          backgroundColor: colors.white,\n        }}></View>\n    </View>\n  );\n}\n","import React, {FC, ReactNode} from 'react';\nimport {Pressable, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport styles from '../../styles';\nimport {useTranslation} from 'react-i18next';\nimport Text from '../../ui/core/Text';\nimport {p} from '../../scaling';\n\nexport type WidgetBaseProps = {\n  name?: string;\n  action?: Function;\n  compact?: boolean;\n  withButton?: boolean;\n  withPadding?: boolean;\n  fullHeight?: boolean;\n  style?: ViewStyle;\n  dark?: boolean;\n  children: ReactNode;\n};\n\nconst WidgetBase: FC<WidgetBaseProps> = ({\n  name = '',\n  action = () => {},\n  compact = false,\n  withButton = true,\n  withPadding = true,\n  fullHeight = false,\n  children,\n  dark,\n  style,\n}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        ...styles.elevatedSmooth,\n        ...styles.border,\n        backgroundColor: colors.white,\n        width: compact ? '48%' : '100%',\n        flex: 0,\n        ...style,\n      }}>\n      <Pressable\n        style={{\n          paddingHorizontal: withPadding ? 12 : 0,\n          paddingVertical: withPadding ? 8 : 0,\n          flex: fullHeight ? 1 : 0,\n        }}\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          action();\n        }}>\n        <View\n          style={{\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n            flex: 1,\n          }}>\n          {name ? (\n            <Text w=\"m\" s={12 * p} c={dark ? colors.gray100 : colors.gray800}>\n              {name}\n            </Text>\n          ) : null}\n          {children}\n\n          {withButton && (\n            <View\n              style={{\n                backgroundColor: colors.lightGray,\n                padding: 8,\n                borderRadius: 8,\n                marginVertical: 4,\n                width: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n              }}>\n              <Text w=\"m\" s={10 * p} c={dark ? colors.gray100 : colors.gray800}>\n                {t('open')}\n              </Text>\n            </View>\n          )}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nexport default WidgetBase;\n","import React, {ReactElement, useEffect, useMemo} from 'react';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport NoContent from './NoContent';\nimport NotificationComponent from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\n\nconst CourseAlerts = ({\n  alerts,\n  dark,\n  refreshControl,\n}: {\n  alerts: ExtendedAlert[];\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n        flex: 1,\n      }}>\n      <FlatList\n        style={_styles.container}\n        ListEmptyComponent={<NoContent />}\n        ListHeaderComponent={() => <View style={{height: 24 * p}} />}\n        refreshControl={refreshControl}\n        data={alerts}\n        initialNumToRender={1}\n        keyExtractor={alert => alert.id + alert.date + alert.text.slice(0, 10)}\n        renderItem={a => (\n          <View style={{marginBottom: 24 * p}}>\n            <NotificationComponent\n              type={NotificationType.NOTICE}\n              notification={a.item}\n              dark={dark}\n            />\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default CourseAlerts;\n","import {useNavigation} from '@react-navigation/native';\nimport moment from 'moment';\nimport {Recording} from 'open-polito-api/lib/course';\nimport React from 'react';\nimport {Dimensions, Image, View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\nconst VideoCard = ({\n  item,\n  onPress,\n  dark,\n}: {\n  item: Recording;\n  onPress: () => any;\n  dark: boolean;\n}) => {\n  const width = Dimensions.get('window').width;\n\n  let hours = item.length / 60;\n  let minsString = Math.ceil((hours - Math.floor(hours)) * 60).toString();\n  if (minsString.length == 1) {\n    minsString = '0' + minsString;\n  }\n  const lengthString = Math.floor(hours) + ':' + minsString + ':00';\n  return (\n    <PressableBase\n      onPress={onPress}\n      android_ripple={{color: colors.lightGray}}\n      key={item.date + item.title}\n      style={[\n        {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          paddingVertical: 12 * p,\n          paddingHorizontal: 16 * p,\n        },\n      ]}>\n      <View>\n        <Image\n          source={{\n            uri: item.cover_url.length != 0 ? item.cover_url : undefined,\n          }}\n          style={{\n            width: width * 0.4,\n            height: width * 0.23,\n            backgroundColor: '#000',\n          }}\n          resizeMode=\"contain\"\n        />\n        <View\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            padding: 4 * p,\n            backgroundColor: '#000',\n          }}>\n          <Text s={10 * p} w=\"m\" c={colors.gray100}>\n            {lengthString}\n          </Text>\n        </View>\n      </View>\n      <View\n        style={{\n          marginLeft: 16 * p,\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n        }}>\n        <View>\n          <Text\n            w=\"m\"\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            numberOfLines={2}>\n            {item.title}\n          </Text>\n          <Text\n            w=\"r\"\n            s={10 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            numberOfLines={1}\n            style={{marginVertical: 8 * p}}>\n            {moment(item.date).format('ll')}\n          </Text>\n        </View>\n        {/* TODO video downloader */}\n        {/* <View style={{flexDirection: 'row', alignItems: 'center'}}>\n                <TablerIcon\n                  name=\"download\"\n                  size={16 * p}\n                  color={colors.accent300}\n                  style={{marginRight: 4 * p}}\n                />\n                <Text\n                  w=\"r\"\n                  s={10 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  numberOfLines={1}>\n                  {item.url}\n                </Text>\n              </View> */}\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default VideoCard;\n","import {StyleSheet} from 'react-native';\nimport colors from './colors';\n\nconst styles = StyleSheet.create({\n  // Text color varieties\n  blackText: {\n    color: colors.black,\n  },\n  whiteText: {\n    color: colors.white,\n  },\n  grayText: {\n    color: colors.gray,\n  },\n  // Text font weights\n  textRegular: {\n    fontFamily: 'Inter-Regular',\n  },\n  textMedium: {\n    fontFamily: 'Inter-Medium',\n  },\n  textBold: {\n    fontFamily: 'Inter-Bold',\n  },\n  // Text sizes\n  textExtraSmall: {\n    fontSize: 10,\n  },\n  textSmall: {\n    fontSize: 12,\n  },\n  textNormal: {\n    fontSize: 16,\n  },\n  textMediumSize: {\n    fontSize: 20,\n  },\n  textLarge: {\n    fontSize: 24,\n  },\n  textExtraLarge: {\n    fontSize: 32,\n  },\n  textTitleLarge: {\n    fontSize: 42,\n  },\n\n  // General styles\n  withHorizontalPadding: {\n    paddingHorizontal: 24,\n  },\n  withRoundedBorder: {\n    borderRadius: 4,\n  },\n  safePaddingTop: {\n    paddingTop: 40,\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignContent: 'space-between',\n  },\n  paddingFromHeader: {\n    paddingTop: 32,\n  },\n  titleBar: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  tabNavigator: {\n    backgroundColor: colors.white,\n    height: 60,\n    tabBarActiveTintColor: colors.white,\n    paddingBottom: 8,\n  },\n  elevated: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n\n    elevation: 4,\n  },\n  elevatedSmooth: {\n    shadowColor: '#bbb',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.0,\n\n    elevation: 24,\n  },\n  border: {\n    borderRadius: 8,\n    borderColor: colors.lightGray,\n    borderWidth: 0.5,\n  },\n});\n\nexport default styles;\n"],"sourceRoot":""}