{"version":3,"sources":["src/context/HTMLRenderEngineProvider.tsx"],"names":["HTMLRenderEngineProvider","children","dark","useContext","DeviceContext","color","useMemo","colors","gray200","undefined","tagsStyles","p","marginVertical"],"mappings":"sFAAA,0DAmCeA,UAzBkB,SAAH,GAA2C,IAAtCC,EAAQ,EAARA,SAC1BC,EAAQC,qBAAWC,KAAnBF,KAEDG,EAAQC,mBACZ,kBAAOJ,EAAOK,IAAOC,aAAUC,IAC/B,CAACP,IAGGQ,EAAaJ,mBACjB,iBAAO,CACLK,EAAG,CACDC,eAAgB,EAAID,IACpBN,YAGJ,CAACA,IAGH,OACE,cAAC,wBAAqB,CAACK,WAAYA,EAAW,SAC5C,cAAC,2BAAwB,UAAET","file":"static/js/6.332f3b14.chunk.js","sourcesContent":["import React, {ReactNode, useContext, useMemo} from 'react';\nimport {\n  MixedStyleDeclaration,\n  RenderHTMLConfigProvider,\n  TRenderEngineProvider,\n} from 'react-native-render-html';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport {DeviceContext} from './Device';\n\nconst HTMLRenderEngineProvider = ({children}: {children: ReactNode}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const color = useMemo<Color | undefined>(\n    () => (dark ? colors.gray200 : undefined),\n    [dark],\n  );\n\n  const tagsStyles = useMemo<Readonly<Record<string, MixedStyleDeclaration>>>(\n    () => ({\n      p: {\n        marginVertical: 4 * p,\n        color,\n      },\n    }),\n    [color],\n  );\n\n  return (\n    <TRenderEngineProvider tagsStyles={tagsStyles}>\n      <RenderHTMLConfigProvider>{children}</RenderHTMLConfigProvider>\n    </TRenderEngineProvider>\n  );\n};\n\nexport default HTMLRenderEngineProvider;\n"],"sourceRoot":""}