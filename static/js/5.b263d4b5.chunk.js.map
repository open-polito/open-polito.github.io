{"version":3,"sources":["src/utils/Logger.ts","node_modules/moment/locale sync /^/.//.*$","src/context/HTMLRenderEngineProvider.tsx","src/utils/updater.common.ts","src/utils/updater.web.ts","src/components/modals/ModalBase.tsx","src/components/modals/BaseActionConfirmModal.tsx","src/screens/Updater.web.tsx","src/ui/Filters.tsx","src/ui/NoContent.tsx","src/ui/VideoCard.tsx","src/ui/CourseVideos.tsx","src/styles.ts","src/components/AnimatedLiveCircle.tsx","src/components/widgets/WidgetBase.tsx","src/components/widgets/LiveWidget.tsx","src/ui/Section.tsx","src/utils/getFileIcon.tsx","src/ui/DirectoryItem.tsx","src/utils/html.ts","src/ui/Notification.tsx","src/ui/CourseOverview.tsx","src/utils/material.ts","src/ui/DirectoryItemRecursive.tsx","src/ui/MaterialExplorer.tsx","src/ui/CourseAlerts.tsx","src/ui/core/BadgeContainer.tsx","src/ui/Header.tsx","src/ui/Tabs.tsx","src/screens/Course.tsx","src/components/modals/ListSelectorModal.tsx","src/screens/Search.tsx","src/ui/VideoPlayer.web.tsx","src/screens/Video.tsx","src/screens/Home.tsx","src/screens/Email.tsx","src/ui/SettingsItem.tsx","src/components/modals/SettingsEnableLoggingModal.tsx","src/screens/Settings.tsx","src/screens/Material.tsx","src/sections.ts","src/ui/Drawer.tsx","src/ui/core/PressableCard.tsx","src/screens/Bookings.tsx","src/components/loaders/AnimatedGradientBase.web.tsx","src/components/loaders/LoaderBase.tsx","src/components/loaders/TimetableDayLoader.tsx","src/components/modals/TimetableEventModal.tsx","src/components/timetable/TimetableEvent.tsx","src/components/timetable/TimetableDay.tsx","src/components/timetable/TimetableSlots.tsx","src/components/timetable/TimetableGrid.tsx","src/ui/HorizontalIconSelector.tsx","src/components/ListRank.tsx","src/components/modals/TimetableOptionsModal.tsx","src/components/timetable/TimetableHeader.tsx","src/screens/Timetable.tsx","src/ui/ProgressCircle.tsx","src/components/exams/Progress.tsx","src/screens/Exams.tsx","src/components/modals/ExamsBookExamModal.tsx","src/components/modals/ExamsCancelExamModal.tsx","src/screens/ExamSessions.tsx","src/screens/Maps.tsx","src/screens/Classrooms.tsx","src/screens/People.tsx","src/screens/Courses.tsx","src/ui/core/Checkbox.tsx","src/screens/Notifications.tsx","src/routes/HomeRouter.tsx","src/routes/AppStackNavigator.tsx","src/routes/Router.tsx"],"names":["Logger","entry","appendFile","logFilePath","JSON","stringify","catch","err","console","log","hasLoggedBasicDeviceInfo","type","appBuildNumber","DeviceInfo","getBuildNumber","appBuildVariant","Config","VARIANT","appVersion","version","appVersionBinary","getVersion","osApiLevel","getApiLevelSync","osName","getSystemName","getBaseOsSync","osVersion","getSystemVersion","theme","store","getState","session","config","writeToFile","logBasicDeviceInfo","parseInt","ENABLE_DEBUG_OPTIONS","endpoint","includes","logRequest","error","logsDirectoryPath","getDocumentsPath","moment","format","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HTMLRenderEngineProvider","children","dark","useContext","DeviceContext","color","useMemo","colors","gray200","undefined","tagsStyles","p","marginVertical","isGitHubOnline","fetch","status","fetchReleaseJson","json","checkForUpdates","tag","headers","Accept","Platform","OS","from","find","r","versionCode","updateCleanup","ModalBase","title","actions","dismissable","onDismiss","icon","accentColor","ModalContext","visible","hideModal","useState","internalVisible","setInternalVisible","dismiss","useCallback","setTimeout","offset","useSharedValue","animStyle","useAnimatedStyle","backgroundColor","value","opacity","transform","scale","useEffect","withTiming","duration","Modal","transparent","animationType","statusBarTranslucent","onRequestClose","View","style","flex","justifyContent","TouchableOpacity","onPress","maxHeight","gray700","borderRadius","marginHorizontal","ScrollView","paddingVertical","paddingHorizontal","flexDirection","alignItems","name","size","width","Text","s","w","c","gray100","gray800","marginTop","paddingBottom","action","i","marginLeft","Button","accent300","secondary","text","label","onSelect","then","BaseActionConfirmModal","onConfirm","onCancel","customLabels","t","useTranslation","cancel","confirm","Updater","Filters","items","onChange","length","selected","setSelected","item","borderWidth","borderColor","marginRight","NoContent","VideoCard","Dimensions","get","hours","minsString","Math","ceil","floor","toString","lengthString","PressableBase","android_ripple","lightGray","Image","source","uri","cover_url","height","resizeMode","position","right","bottom","padding","numberOfLines","date","CourseVideosHeader","courseData","onYearChange","extendedInfo","vc_recordings","sort","a","b","key","y","CourseVideos","courseId","refreshControl","navigation","useNavigation","selectedYear","setSelectedYear","useSelector","state","courses","course","basicInfo","videos","current","FlatList","data","ListEmptyComponent","ListHeaderComponent","renderItem","navigate","video","styles","StyleSheet","create","blackText","black","whiteText","white","grayText","gray","textRegular","fontFamily","textMedium","textBold","textExtraSmall","fontSize","textSmall","textNormal","textMediumSize","textLarge","textExtraLarge","textTitleLarge","withHorizontalPadding","withRoundedBorder","safePaddingTop","paddingTop","container","alignContent","paddingFromHeader","titleBar","tabNavigator","tabBarActiveTintColor","elevated","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","elevatedSmooth","border","AnimatedLiveCircle","coeff","useRef","Animated","Value","loop","timing","toValue","useNativeDriver","start","subtract","left","top","WidgetBase","compact","withButton","withPadding","fullHeight","Pressable","LiveWidget","liveClass","courseName","device","mounted","setMounted","setTime","intervalID","calculateTime","utc","Date","now","diff","setInterval","clearInterval","openURL","getLessonURL","url","LinearGradient","x","end","Section","FILE_TYPES","colorLight","extensions","gradient1","red","orange","green","sizes","downloadFile","getDownloadURL","DirectoryItem","relativeDate","sizeLabel","_size","index","min","log10","toFixed","iconComponent","filename","ext","split","pop","toLowerCase","gray500","getFileIcon","gray300","creation_date","fromNow","gray600","htmlTags","isCourseAlert","n","topic","NotificationComponent","notification","read","NotificationType","TEST","DIRECT","NOTICE","MATERIAL","input","decode","replace","body","dateString","time","course_name","html","CourseOverview","tree","changeTab","materialTree","material","buildField","marginBottom","fields","professor","surname","num_credits","degree_year","year_period","STATUS","PENDING","ActivityIndicator","slice","field","live_lessons","meeting_id","getMaterialList","flatMap","concat","filter","file","notices","Notification","course_code","DirectoryItemRecursive","opened","setOpened","MaterialExplorer","CourseAlerts","alerts","_styles","initialNumToRender","keyExtractor","alert","HEADER_TYPE","badge","BadgeContainer","number","badgeText","Header","headerType","notifications","user","dispatch","useDispatch","notificationCount","is_read","themeToggleIconName","toggleTheme","setConfig","header","headerSection","headerMiddle","headerEnd","MAIN","DrawerActions","toggleDrawer","genericPlatform","SECONDARY","goBack","Tabs","adjusted","defaultIndex","selectedIndex","setSelectedIndex","tab","selectedIndicator","contentContainerStyle","horizontal","showsHorizontalScrollIndicator","Course","route","params","courseCode","currentTab","setCurrentTab","tabs","SUCCESS","loadCourse","basicCourseInfo","refresh","refreshing","section","RefreshControl","onRefresh","Screen","ListSelectorModal","_onSelect","Search","setModal","query","setQuery","results","setResults","searchFilter","setSearchFilter","quickLoad","setQuickLoad","searchTimer","setSearchTimer","loadTimer","setLoadTimer","handleNewSearch","txt","_query","trim","clearTimeout","searchMaterial","findFiles","_items","_results","forEach","push","res","_course","TextInput","initiallyFocused","placeholder","autoFocus","onChangeText","flexGrow","maxToRenderPerBatch","ListFooterComponent","VideoPlayer","src","controls","autoPlay","Video","currentVideo","setCurrentVideo","relatedVideos","sectionsData","sectionColors","Home","recentMaterial","loadExtendedCourseInfoStatus","latestAlert","notice","topSections","topSection","topSectionInner","topSectionText","editable","btn","getWebMailUrl","emailUrl","Email","loaded","setLoaded","setWebViewRef","webMailUrl","setWebMailUrl","getUnreadEmailCount","href","ref","onNavigationStateChange","loading","SettingsItem","description","disabled","settingsFunction","toggle","toggleValue","textContainer","Switch","SettingsEnableLoggingModal","logging","setToast","message","path","Settings","debugSettingsItems","resetConfig","sendTestPushNotification","buildSettingsItem","Material","getRecentMaterialStatus","selectedTab","setSelectedTab","materialLoaded","setMaterialLoaded","setAllLoaded","_materialLoaded","getRecentMaterial","sections","isSectionUnavailable","orderedSections","sec","Drawer","props","deviceContext","userInfo","shortDegreeName","degreeType","degree_type","degreeName","degree_name","toUpperCase","setCurrent","handleLogout","logout","drawerScrollView","drawer","hr","category","DrawerContentScrollView","screen","charAt","accent100","PressableCard","expanded","sideElement","expandedElement","rotation","expandedElementOpacity","sideElementOpacity","condition","animChevronStyle","rotate","expandedElementStyle","sideElementStyle","button","paddingLeft","paddingRight","gray400","BookingSubctx","ctxId","subctx","language","slots","setState","prev","ita","eng","BookingCtx","ctx","setExpanded","subcontexts","BookingCard","booking","barcodeUrl","start_time","end_time","course_id","subcontext_name","context_name","aspectRatio","Bookings","getBookingsStatus","getBookingContextsStatus","bookings","bookingContexts","getMyBookings","getBookingContexts","barcode_url","current_id","context_id","subcontext_id","i18next","AnimatedGradientBase","LoaderBase","setVisible","translateY","translateX","TimetableDayLoader","h","random","Array","_","yPositions","rx","ry","TimetableEventModal","slot","room","TimetableEvent","overlapGroup","courseNames","textOpacity","setWidth","animTextSectionStyle","onLayout","nativeEvent","layout","overflow","set","m","as","courseColors","findIndex","val","gray50","TimetableDay","fake","day","setW","sortedByPriority","timetablePriority","indexOf","overlapping","timetableOverlap","_overlapping","add","_localOverlapping","event","toDate","getTime","zIndex","_group","group","findOverlapGroup","_index","_slot","TimetableSlots","timetableDays","selectedDay","setCourseNames","days","_courseNames","_list","changed","TimetableGrid","showLine","currentTime","setCurrentTime","updateTimeout","borderTopColor","borderBottomColor","borderTopWidth","borderBottomWidth","HorizontalIconSelector","onValueChange","defaultValue","setValue","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ListRank","callback","setData","onDragEnd","drag","onLongPress","onPressIn","TimetableOptionsModal","showListRank","setShowListRank","rankItems","toggleOverlapMode","mode","timetableOptionsItems","d","TimetableHeader","weekStartDate","onLayoutChanged","onDayChanged","onWeekStartDateChanged","_onWeekStartDateChanged","withSequence","headerTitle","weekStartMoment","weekEndMoment","startOf","small","DateTimePickerAndroid","open","timestamp","_onLayoutChanged","Timetable","setWeekStartDate","setSlots","_timetableDays","setLayout","setSelectedDay","fetchTimer","setFetchTimer","doUpdate","setDoUpdate","controlTransition","direction","getTimetable","ProgressCircle","max","radius","strokeWidth","circ","PI","_value","fill","stroke","cx","cy","strokeDasharray","strokeDashoffset","Progress","marks","useWindowDimensions","sorted_marks","mark","asDays","mark1","mark2","avgs","_avgs","weights","labels","datasets","legend","LineChart","yAxisInterval","chartConfig","backgroundGradientFrom","gray900","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","AvgWidget","avg","MarkWidget","provisional","getFields","failed","absent","icons","values","Exams","setTab","filteredMarks","permanent","_marks","total_credits","reduce","acc","parseFloat","get_avg","list","idx","ItemSeparatorComponent","ExamsBookExamModal","examSession","success","bookExamSession","session_id","bookExamSync","exam_name","rooms","ExamsCancelExamModal","cancelExamSession","cancelExamSync","isExamBooked","user_is_signed_up","isExamAvailable","ExamSessions","exams","getExamsStatus","errorMsgLanguage","setErrorMsgLanguage","IDLE","ERROR","getExams","getLanguageCode","filteredSessions","examSessionCard","accent200","signup_deadline","join","Maps","Classrooms","People","Courses","gotoCourse","isMain","mainCourse","secondaryCourse","Checkbox","_SelectableNotification","handlePress","selecting","setSelecting","onSelectionChange","animStyleCheckbox","onHandlerStateChange","State","ACTIVE","sel","Notifications","notificationTypes","getNotificationsStatus","selectedCategory","setSelectedCategory","setRefreshing","refreshNotifications","getNotificationList","markNotificationRead","copy","setNotifications","tabOffset","onHardwareBackButtonPressed","BackHandler","addEventListener","removeEventListener","deleting","setDeleting","areAllSelected","allSelected","selectionOptions","deleteNotification","opt","id_incarico","handleSelectionChange","DrawerStack","createDrawerNavigator","HomeRouter","loginStatus","loadCoursesStatus","login","method","loadCoursesData","FCMToken","NativeModules","NotificationModule","getToken","registerPushNotifications","setLoadExtendedCourseInfoStatus","pendingStatus","allLoaded","successStatus","getDrawerComponent","Navigator","screenOptions","headerShown","drawerType","DeviceSize","lg","useLegacyImplementation","drawerContent","component","AppStack","createNativeStackNavigator","AppStackNavigator","NavigationContainer","Router","setMomentLocale","checked","acceptedUpdate","updaterState","setUpdaterState","releaseData","locale","getLocales","languageCode","notes","content","note","authStatus","setMessage","buildMessage","AUTH_STATUS","NOT_VALID"],"mappings":"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","file":"static/js/5.b263d4b5.chunk.js","sourcesContent":["import moment from 'moment';\nimport {Entry} from 'open-polito-api/lib/device';\nimport Config from 'react-native-config';\nimport DeviceInfo from 'react-native-device-info';\nimport store from '../store/store';\nimport version from '../../version.json';\nimport {appendFile, getDocumentsPath} from './fs';\n\nexport type BasicDeviceInfoLogEntry = {\n  type: 'DEVICE_INFO';\n  appBuildNumber: string;\n  appBuildVariant: string;\n  appVersion: string;\n  appVersionBinary: string;\n  osApiLevel: number;\n  osName: string;\n  osVersion: string;\n  theme: 'light' | 'dark' | 'system';\n};\n\nexport type RequestLogEntry = Entry & {\n  type: 'REQUEST';\n};\n\nexport type ErrorLogEntry = Error & {\n  type: 'ERROR';\n};\n\nexport type LogEntry =\n  | BasicDeviceInfoLogEntry\n  | RequestLogEntry\n  | ErrorLogEntry;\n\nexport default class Logger {\n  public static logsDirectoryPath = getDocumentsPath();\n\n  public static logFilePath =\n    Logger.logsDirectoryPath +\n    '/' +\n    'request_log-' +\n    moment().format('YYYY-MM-DD-THHmmssSSS') +\n    '.txt';\n\n  public static hasLoggedBasicDeviceInfo: boolean = false;\n\n  /**\n   * Writes log entry to log file\n   * @param entry\n   *\n   * @remarks\n   * Uses ExternalDirectoryPath (/storage/emulated/0/Android/data/org.openpolito.app/files/) on Android,\n   * DocumentDirectoryPath on iOS\n   */\n  static async writeToFile(entry: LogEntry) {\n    await appendFile(Logger.logFilePath, JSON.stringify(entry) + '\\n').catch(\n      err => console.log(err),\n    );\n  }\n\n  /**\n   * Logs basic device info\n   */\n  static async logBasicDeviceInfo() {\n    if (Logger.hasLoggedBasicDeviceInfo) return;\n    const entry: BasicDeviceInfoLogEntry = {\n      type: 'DEVICE_INFO',\n      appBuildNumber: DeviceInfo.getBuildNumber(),\n      appBuildVariant: Config.VARIANT || '',\n      appVersion: version.version,\n      appVersionBinary: DeviceInfo.getVersion(),\n      osApiLevel: DeviceInfo.getApiLevelSync(),\n      osName: DeviceInfo.getSystemName() || DeviceInfo.getBaseOsSync(),\n      osVersion: DeviceInfo.getSystemVersion(),\n      theme: store.getState().session.config.theme,\n    };\n    await Logger.writeToFile(entry);\n    Logger.hasLoggedBasicDeviceInfo = true;\n  }\n\n  /**\n   * Logs a network request\n   *\n   * @remarks See {@link Entry}\n   * @param entry\n   */\n  static async logRequest(entry: Entry) {\n    await Logger.logBasicDeviceInfo();\n    // Don't log if debug options not enabled\n    if (!parseInt(Config.ENABLE_DEBUG_OPTIONS!, 10)) return;\n    // Don't log if login endpoint\n    if (entry.endpoint.includes('login')) return;\n    await Logger.writeToFile({\n      type: 'REQUEST',\n      ...entry,\n    });\n  }\n\n  /**\n   * Like {@link logRequest}, but called synchronously\n   * @param entry\n   */\n  static logRequestSync(entry: Entry) {\n    (async () => {\n      await Logger.logBasicDeviceInfo();\n      await Logger.logRequest(entry);\n    })();\n  }\n\n  /**\n   * Logs an error's name, message, and stack trace\n   * @param error\n   */\n  static async logError(error: Error) {\n    await Logger.logBasicDeviceInfo();\n    await Logger.writeToFile({\n      type: 'ERROR',\n      ...error,\n    });\n  }\n}\n","var map = {\n\t\"./af\": 295,\n\t\"./af.js\": 295,\n\t\"./ar\": 296,\n\t\"./ar-dz\": 297,\n\t\"./ar-dz.js\": 297,\n\t\"./ar-kw\": 298,\n\t\"./ar-kw.js\": 298,\n\t\"./ar-ly\": 299,\n\t\"./ar-ly.js\": 299,\n\t\"./ar-ma\": 300,\n\t\"./ar-ma.js\": 300,\n\t\"./ar-sa\": 301,\n\t\"./ar-sa.js\": 301,\n\t\"./ar-tn\": 302,\n\t\"./ar-tn.js\": 302,\n\t\"./ar.js\": 296,\n\t\"./az\": 303,\n\t\"./az.js\": 303,\n\t\"./be\": 304,\n\t\"./be.js\": 304,\n\t\"./bg\": 305,\n\t\"./bg.js\": 305,\n\t\"./bm\": 306,\n\t\"./bm.js\": 306,\n\t\"./bn\": 307,\n\t\"./bn-bd\": 308,\n\t\"./bn-bd.js\": 308,\n\t\"./bn.js\": 307,\n\t\"./bo\": 309,\n\t\"./bo.js\": 309,\n\t\"./br\": 310,\n\t\"./br.js\": 310,\n\t\"./bs\": 311,\n\t\"./bs.js\": 311,\n\t\"./ca\": 312,\n\t\"./ca.js\": 312,\n\t\"./cs\": 313,\n\t\"./cs.js\": 313,\n\t\"./cv\": 314,\n\t\"./cv.js\": 314,\n\t\"./cy\": 315,\n\t\"./cy.js\": 315,\n\t\"./da\": 316,\n\t\"./da.js\": 316,\n\t\"./de\": 317,\n\t\"./de-at\": 318,\n\t\"./de-at.js\": 318,\n\t\"./de-ch\": 319,\n\t\"./de-ch.js\": 319,\n\t\"./de.js\": 317,\n\t\"./dv\": 320,\n\t\"./dv.js\": 320,\n\t\"./el\": 321,\n\t\"./el.js\": 321,\n\t\"./en-au\": 322,\n\t\"./en-au.js\": 322,\n\t\"./en-ca\": 323,\n\t\"./en-ca.js\": 323,\n\t\"./en-gb\": 324,\n\t\"./en-gb.js\": 324,\n\t\"./en-ie\": 325,\n\t\"./en-ie.js\": 325,\n\t\"./en-il\": 326,\n\t\"./en-il.js\": 326,\n\t\"./en-in\": 327,\n\t\"./en-in.js\": 327,\n\t\"./en-nz\": 328,\n\t\"./en-nz.js\": 328,\n\t\"./en-sg\": 329,\n\t\"./en-sg.js\": 329,\n\t\"./eo\": 330,\n\t\"./eo.js\": 330,\n\t\"./es\": 331,\n\t\"./es-do\": 332,\n\t\"./es-do.js\": 332,\n\t\"./es-mx\": 333,\n\t\"./es-mx.js\": 333,\n\t\"./es-us\": 334,\n\t\"./es-us.js\": 334,\n\t\"./es.js\": 331,\n\t\"./et\": 335,\n\t\"./et.js\": 335,\n\t\"./eu\": 336,\n\t\"./eu.js\": 336,\n\t\"./fa\": 337,\n\t\"./fa.js\": 337,\n\t\"./fi\": 338,\n\t\"./fi.js\": 338,\n\t\"./fil\": 339,\n\t\"./fil.js\": 339,\n\t\"./fo\": 340,\n\t\"./fo.js\": 340,\n\t\"./fr\": 341,\n\t\"./fr-ca\": 342,\n\t\"./fr-ca.js\": 342,\n\t\"./fr-ch\": 343,\n\t\"./fr-ch.js\": 343,\n\t\"./fr.js\": 341,\n\t\"./fy\": 344,\n\t\"./fy.js\": 344,\n\t\"./ga\": 345,\n\t\"./ga.js\": 345,\n\t\"./gd\": 346,\n\t\"./gd.js\": 346,\n\t\"./gl\": 347,\n\t\"./gl.js\": 347,\n\t\"./gom-deva\": 348,\n\t\"./gom-deva.js\": 348,\n\t\"./gom-latn\": 349,\n\t\"./gom-latn.js\": 349,\n\t\"./gu\": 350,\n\t\"./gu.js\": 350,\n\t\"./he\": 351,\n\t\"./he.js\": 351,\n\t\"./hi\": 352,\n\t\"./hi.js\": 352,\n\t\"./hr\": 353,\n\t\"./hr.js\": 353,\n\t\"./hu\": 354,\n\t\"./hu.js\": 354,\n\t\"./hy-am\": 355,\n\t\"./hy-am.js\": 355,\n\t\"./id\": 356,\n\t\"./id.js\": 356,\n\t\"./is\": 357,\n\t\"./is.js\": 357,\n\t\"./it\": 358,\n\t\"./it-ch\": 359,\n\t\"./it-ch.js\": 359,\n\t\"./it.js\": 358,\n\t\"./ja\": 360,\n\t\"./ja.js\": 360,\n\t\"./jv\": 361,\n\t\"./jv.js\": 361,\n\t\"./ka\": 362,\n\t\"./ka.js\": 362,\n\t\"./kk\": 363,\n\t\"./kk.js\": 363,\n\t\"./km\": 364,\n\t\"./km.js\": 364,\n\t\"./kn\": 365,\n\t\"./kn.js\": 365,\n\t\"./ko\": 366,\n\t\"./ko.js\": 366,\n\t\"./ku\": 367,\n\t\"./ku.js\": 367,\n\t\"./ky\": 368,\n\t\"./ky.js\": 368,\n\t\"./lb\": 369,\n\t\"./lb.js\": 369,\n\t\"./lo\": 370,\n\t\"./lo.js\": 370,\n\t\"./lt\": 371,\n\t\"./lt.js\": 371,\n\t\"./lv\": 372,\n\t\"./lv.js\": 372,\n\t\"./me\": 373,\n\t\"./me.js\": 373,\n\t\"./mi\": 374,\n\t\"./mi.js\": 374,\n\t\"./mk\": 375,\n\t\"./mk.js\": 375,\n\t\"./ml\": 376,\n\t\"./ml.js\": 376,\n\t\"./mn\": 377,\n\t\"./mn.js\": 377,\n\t\"./mr\": 378,\n\t\"./mr.js\": 378,\n\t\"./ms\": 379,\n\t\"./ms-my\": 380,\n\t\"./ms-my.js\": 380,\n\t\"./ms.js\": 379,\n\t\"./mt\": 381,\n\t\"./mt.js\": 381,\n\t\"./my\": 382,\n\t\"./my.js\": 382,\n\t\"./nb\": 383,\n\t\"./nb.js\": 383,\n\t\"./ne\": 384,\n\t\"./ne.js\": 384,\n\t\"./nl\": 385,\n\t\"./nl-be\": 386,\n\t\"./nl-be.js\": 386,\n\t\"./nl.js\": 385,\n\t\"./nn\": 387,\n\t\"./nn.js\": 387,\n\t\"./oc-lnc\": 388,\n\t\"./oc-lnc.js\": 388,\n\t\"./pa-in\": 389,\n\t\"./pa-in.js\": 389,\n\t\"./pl\": 390,\n\t\"./pl.js\": 390,\n\t\"./pt\": 391,\n\t\"./pt-br\": 392,\n\t\"./pt-br.js\": 392,\n\t\"./pt.js\": 391,\n\t\"./ro\": 393,\n\t\"./ro.js\": 393,\n\t\"./ru\": 394,\n\t\"./ru.js\": 394,\n\t\"./sd\": 395,\n\t\"./sd.js\": 395,\n\t\"./se\": 396,\n\t\"./se.js\": 396,\n\t\"./si\": 397,\n\t\"./si.js\": 397,\n\t\"./sk\": 398,\n\t\"./sk.js\": 398,\n\t\"./sl\": 399,\n\t\"./sl.js\": 399,\n\t\"./sq\": 400,\n\t\"./sq.js\": 400,\n\t\"./sr\": 401,\n\t\"./sr-cyrl\": 402,\n\t\"./sr-cyrl.js\": 402,\n\t\"./sr.js\": 401,\n\t\"./ss\": 403,\n\t\"./ss.js\": 403,\n\t\"./sv\": 404,\n\t\"./sv.js\": 404,\n\t\"./sw\": 405,\n\t\"./sw.js\": 405,\n\t\"./ta\": 406,\n\t\"./ta.js\": 406,\n\t\"./te\": 407,\n\t\"./te.js\": 407,\n\t\"./tet\": 408,\n\t\"./tet.js\": 408,\n\t\"./tg\": 409,\n\t\"./tg.js\": 409,\n\t\"./th\": 410,\n\t\"./th.js\": 410,\n\t\"./tk\": 411,\n\t\"./tk.js\": 411,\n\t\"./tl-ph\": 412,\n\t\"./tl-ph.js\": 412,\n\t\"./tlh\": 413,\n\t\"./tlh.js\": 413,\n\t\"./tr\": 414,\n\t\"./tr.js\": 414,\n\t\"./tzl\": 415,\n\t\"./tzl.js\": 415,\n\t\"./tzm\": 416,\n\t\"./tzm-latn\": 417,\n\t\"./tzm-latn.js\": 417,\n\t\"./tzm.js\": 416,\n\t\"./ug-cn\": 418,\n\t\"./ug-cn.js\": 418,\n\t\"./uk\": 419,\n\t\"./uk.js\": 419,\n\t\"./ur\": 420,\n\t\"./ur.js\": 420,\n\t\"./uz\": 421,\n\t\"./uz-latn\": 422,\n\t\"./uz-latn.js\": 422,\n\t\"./uz.js\": 421,\n\t\"./vi\": 423,\n\t\"./vi.js\": 423,\n\t\"./x-pseudo\": 424,\n\t\"./x-pseudo.js\": 424,\n\t\"./yo\": 425,\n\t\"./yo.js\": 425,\n\t\"./zh-cn\": 426,\n\t\"./zh-cn.js\": 426,\n\t\"./zh-hk\": 427,\n\t\"./zh-hk.js\": 427,\n\t\"./zh-mo\": 428,\n\t\"./zh-mo.js\": 428,\n\t\"./zh-tw\": 429,\n\t\"./zh-tw.js\": 429\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 521;","import React, {ReactNode, useContext, useMemo} from 'react';\nimport {\n  RenderHTMLConfigProvider,\n  TRenderEngineProvider,\n} from 'react-native-render-html';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport {DeviceContext} from './Device';\n\nconst HTMLRenderEngineProvider = ({children}: {children: ReactNode}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const color = useMemo<Color | undefined>(\n    () => (dark ? colors.gray200 : undefined),\n    [dark],\n  );\n\n  return (\n    <TRenderEngineProvider\n      tagsStyles={{\n        p: {\n          marginVertical: 4 * p,\n          color,\n        },\n      }}>\n      <RenderHTMLConfigProvider>{children}</RenderHTMLConfigProvider>\n    </TRenderEngineProvider>\n  );\n};\n\nexport default HTMLRenderEngineProvider;\n","import {Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport version from '../../version.json';\n\n/**\n * Structure of one array item found in \"release.json\",\n * found in the root directory of the repo.\n */\nexport type ReleaseJsonEntry = {\n  type: 'release' | 'beta' | 'dev';\n  tag: string;\n  versionCode: number;\n  format: 'text' | 'html';\n  notes: {\n    language: 'it' | 'en';\n    content: string[];\n  }[];\n};\n\n/**\n * Structure of one array item found in \"assets.json\",\n * found for each GitHub release.\n */\nexport type AssetsJsonEntry = {\n  os: string;\n  arch: string;\n  name: string;\n  sha256: string;\n};\n\n/**\n * Structure of the portion we need from GitHub's response json\n * when fetching release data.\n */\nexport type PartialGitHubReleaseResponse = {\n  assets: {\n    name: string;\n    browser_download_url: string;\n    size: number; // in bytes\n  }[];\n};\n\nexport const isGitHubOnline = async (): Promise<boolean> => {\n  const statusCode = (await fetch('https://api.github.com')).status;\n  return statusCode === 200;\n};\n\n/**\n * Returns the release.json contents\n * @returns\n */\nexport const fetchReleaseJson = async (): Promise<ReleaseJsonEntry[]> => {\n  return (await (\n    await fetch(\n      'https://raw.githubusercontent.com/open-polito/open-polito/master/release.json',\n    )\n  ).json()) as ReleaseJsonEntry[];\n};\n\n/**\n * Return release data by tag\n * @param tag The release tag\n */\nexport const fetchReleaseByTag = async (\n  tag: string,\n): Promise<PartialGitHubReleaseResponse> => {\n  return (await (\n    await fetch(\n      `https://api.github.com/repos/open-polito/open-polito/releases/tags/${tag}`,\n      {\n        headers: {Accept: 'application/vnd.github+json'},\n      },\n    )\n  ).json()) as PartialGitHubReleaseResponse;\n};\n\n/**\n * Check for updates, if and only if the following are all true:\n * - The OS is Android\n * - The app was not installed from PLAY_STORE (see {@link version})\n * - The device is online (can reach GitHub API)\n */\nexport const checkForUpdates = async (): Promise<\n  ReleaseJsonEntry | undefined\n> => {\n  if (Platform.OS === 'android' && !['PLAY_STORE'].includes(version.from)) {\n    (async () => {\n      const reachable = await isGitHubOnline();\n      if (!reachable) {\n        return undefined;\n      }\n      try {\n        const releaseData = (await fetchReleaseJson()).find(\n          r => r.type === Config.VARIANT && r.versionCode > version.versionCode,\n        );\n        return releaseData;\n      } catch (e) {}\n    })();\n  }\n  return undefined;\n};\n","export * from './updater.common';\n\nconst updateCleanup = async () => {};\nconst getUpdateDestinationFilePath = async () => {};\nconst checkFileMatchesSHA256 = async () => {};\n\nexport {updateCleanup, getUpdateDestinationFilePath, checkFileMatchesSHA256};\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport {Modal, ScrollView, TouchableOpacity, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors, {Color} from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport Text from '../../ui/core/Text';\n\nexport interface ModalAction {\n  type: 'colored' | 'main' | 'secondary';\n  label: string;\n  value: string;\n  onSelect: (value: string) => Promise<any>;\n  dismiss: boolean; // Whether to dismiss the modal when action executed\n}\n\nexport interface ModalBaseProps {\n  title: string;\n  actions?: ModalAction[];\n  dismissable?: boolean;\n  onDismiss?: () => any;\n  children: ReactNode;\n  icon?: string;\n  accentColor?: Color;\n}\n\nconst ModalBase: FC<ModalBaseProps> = ({\n  title,\n  actions,\n  dismissable = true,\n  onDismiss = () => {},\n  children,\n  icon,\n  accentColor,\n}) => {\n  const {dark} = useContext(DeviceContext);\n  const {visible, hideModal} = useContext(ModalContext);\n\n  const [internalVisible, setInternalVisible] = useState(true);\n\n  const dismiss = useCallback(() => {\n    if (dismissable) {\n      setTimeout(() => setInternalVisible(false), 200);\n      hideModal();\n      onDismiss();\n    }\n  }, [hideModal, dismissable, onDismiss]);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: `rgba(0, 0, 0, ${offset.value / 2})`,\n      opacity: offset.value,\n      transform: [\n        {\n          scale: 1.1 - 0.1 * offset.value,\n        },\n      ],\n    };\n  });\n\n  useEffect(() => {\n    offset.value = withTiming(visible ? 1 : 0, {duration: 200});\n  }, [visible, offset]);\n\n  return (\n    <Modal\n      transparent={true}\n      visible={internalVisible}\n      animationType=\"none\"\n      statusBarTranslucent={true}\n      onRequestClose={dismiss}>\n      <Animated.View style={[animStyle, {flex: 1, justifyContent: 'center'}]}>\n        <TouchableOpacity onPress={dismiss} style={{flex: 1}} />\n        <View\n          style={{\n            maxHeight: '80%',\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            borderRadius: 4 * p,\n            marginHorizontal: 16 * p,\n          }}>\n          <ScrollView>\n            <View\n              style={{\n                paddingVertical: 24 * p,\n                paddingHorizontal: 16 * p,\n              }}>\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}>\n                {icon && (\n                  <>\n                    <TablerIcon name={icon} color={accentColor} size={24 * p} />\n                    <View style={{width: 16 * p}} />\n                  </>\n                )}\n                <Text s={16} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n                  {title}\n                </Text>\n              </View>\n              <View\n                style={{\n                  marginTop: 16 * p,\n                }}>\n                {children}\n              </View>\n            </View>\n          </ScrollView>\n          {actions && (\n            <View\n              style={{\n                flexDirection: 'row',\n                paddingBottom: 24 * p,\n                paddingHorizontal: 16 * p,\n              }}>\n              {actions.map((action, i) => (\n                <View\n                  key={action.value}\n                  style={[\n                    {\n                      flex: 1,\n                    },\n                    i !== 0\n                      ? {\n                          marginLeft: 32 * p,\n                        }\n                      : {},\n                  ]}>\n                  <Button\n                    color={\n                      action.type === 'colored' ? accentColor : colors.accent300\n                    }\n                    secondary={action.type === 'secondary'}\n                    text={action.label}\n                    onPress={() => {\n                      action.onSelect(action.value).then(() => {\n                        action.dismiss && dismiss();\n                      });\n                    }}\n                  />\n                </View>\n              ))}\n            </View>\n          )}\n        </View>\n        <TouchableOpacity onPress={dismiss} style={{flex: 1}} />\n      </Animated.View>\n    </Modal>\n  );\n};\n\nexport default ModalBase;\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Color} from '../../colors';\nimport {ModalContext} from '../../context/ModalProvider';\nimport ModalBase, {ModalAction} from './ModalBase';\n\nexport interface BaseActionConfirmModalProps {\n  title: string;\n  onConfirm?: () => any;\n  onCancel?: () => any;\n  icon?: string;\n  accentColor?: Color;\n  customLabels?: {\n    cancel: string;\n    confirm: string;\n  };\n  children: ReactNode;\n}\n\nconst BaseActionConfirmModal: FC<BaseActionConfirmModalProps> = ({\n  title,\n  children,\n  onConfirm = () => {},\n  onCancel = () => {},\n  icon,\n  accentColor,\n  customLabels,\n}) => {\n  const {hideModal} = useContext(ModalContext);\n  const {t} = useTranslation();\n\n  const actions = useMemo<ModalAction[]>(() => {\n    return [\n      {\n        type: 'secondary',\n        label: customLabels ? customLabels.cancel : t('cancel'),\n        value: 'cancel',\n        onSelect: async () => {\n          onCancel();\n          hideModal();\n        },\n        dismiss: true,\n      },\n      {\n        type: 'colored',\n        label: customLabels ? customLabels.confirm : t('confirm'),\n        value: 'confirm',\n        onSelect: async () => {\n          onConfirm();\n          hideModal();\n        },\n        dismiss: true,\n      },\n    ];\n  }, [hideModal, onCancel, onConfirm, t, customLabels]);\n\n  return (\n    <ModalBase\n      icon={icon}\n      accentColor={accentColor}\n      title={title}\n      actions={actions}>\n      {children}\n    </ModalBase>\n  );\n};\n\nexport default BaseActionConfirmModal;\n","const Updater = () => {\n  return <div>Updater for web not implemented yet</div>;\n};\n\nexport default Updater;\n","import React, {useState} from 'react';\nimport {TouchableOpacity, View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst Filters = ({\n  items,\n  onChange,\n}: {\n  items: {label: string; value: string}[];\n  onChange: (arg0: string) => any;\n}) => {\n  const [selected, setSelected] = useState<string>(\n    items && items.length > 0 ? items[0].value : '',\n  );\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      {items.map(item => (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              onChange(item.value);\n              setSelected(item.value);\n            }}>\n            <View\n              style={{\n                paddingHorizontal: 8 * p,\n                paddingVertical: 4 * p,\n                borderWidth: 1 * p,\n                borderRadius: 16 * p,\n                borderColor:\n                  item.value === selected ? colors.accent300 : colors.gray200,\n                marginRight: 8 * p,\n              }}>\n              <Text\n                s={10 * p}\n                w=\"r\"\n                c={item.value === selected ? colors.accent300 : colors.gray200}>\n                {item.label}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Filters;\n","import React, {useContext} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport Text from './core/Text';\n\nexport default function NoContent() {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n\n  return (\n    <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center'}}>\n      <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n        {t('noContent')}\n      </Text>\n    </View>\n  );\n}\n","import {useNavigation} from '@react-navigation/native';\nimport moment from 'moment';\nimport {Recording} from 'open-polito-api/lib/course';\nimport React from 'react';\nimport {Dimensions, Image, View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\nconst VideoCard = ({\n  item,\n  onPress,\n  dark,\n}: {\n  item: Recording;\n  onPress: () => any;\n  dark: boolean;\n}) => {\n  const width = Dimensions.get('window').width;\n\n  let hours = item.length / 60;\n  let minsString = Math.ceil((hours - Math.floor(hours)) * 60).toString();\n  if (minsString.length == 1) {\n    minsString = '0' + minsString;\n  }\n  const lengthString = Math.floor(hours) + ':' + minsString + ':00';\n  return (\n    <PressableBase\n      onPress={onPress}\n      android_ripple={{color: colors.lightGray}}\n      key={item.date + item.title}\n      style={[\n        {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          paddingVertical: 12 * p,\n          paddingHorizontal: 16 * p,\n        },\n      ]}>\n      <View>\n        <Image\n          source={{\n            uri: item.cover_url.length != 0 ? item.cover_url : undefined,\n          }}\n          style={{\n            width: width * 0.4,\n            height: width * 0.23,\n            backgroundColor: '#000',\n          }}\n          resizeMode=\"contain\"\n        />\n        <View\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            padding: 4 * p,\n            backgroundColor: '#000',\n          }}>\n          <Text s={10 * p} w=\"m\" c={colors.gray100}>\n            {lengthString}\n          </Text>\n        </View>\n      </View>\n      <View\n        style={{\n          marginLeft: 16 * p,\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n        }}>\n        <View>\n          <Text\n            w=\"m\"\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            numberOfLines={2}>\n            {item.title}\n          </Text>\n          <Text\n            w=\"r\"\n            s={10 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            numberOfLines={1}\n            style={{marginVertical: 8 * p}}>\n            {moment(item.date).format('ll')}\n          </Text>\n        </View>\n        {/* TODO video downloader */}\n        {/* <View style={{flexDirection: 'row', alignItems: 'center'}}>\n                <TablerIcon\n                  name=\"download\"\n                  size={16 * p}\n                  color={colors.accent300}\n                  style={{marginRight: 4 * p}}\n                />\n                <Text\n                  w=\"r\"\n                  s={10 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  numberOfLines={1}>\n                  {item.url}\n                </Text>\n              </View> */}\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default VideoCard;\n","import {useNavigation} from '@react-navigation/core';\nimport React, {ReactElement, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {p} from '../scaling';\nimport {CourseState} from '../store/coursesSlice';\nimport {RootState} from '../store/store';\nimport Filters from './Filters';\nimport NoContent from './NoContent';\nimport VideoCard from './VideoCard';\n\nconst CourseVideos = ({\n  courseId,\n  dark,\n  refreshControl,\n}: {\n  courseId: string;\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const {t} = useTranslation();\n  const navigation = useNavigation();\n\n  const [selectedYear, setSelectedYear] = useState('current');\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == courseId,\n    ),\n  );\n\n  const videos = useMemo(() => {\n    if (selectedYear === 'current') {\n      return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n        (a, b) => b.date - a.date,\n      );\n    }\n    return [\n      ...(courseData?.extendedInfo?.vc_recordings[parseInt(selectedYear, 10)] ||\n        []),\n    ].sort((a, b) => b.date - a.date);\n  }, [courseData, selectedYear]);\n\n  return (\n    <View>\n      <FlatList\n        data={videos}\n        ListEmptyComponent={<NoContent />}\n        refreshControl={refreshControl}\n        ListHeaderComponent={\n          <CourseVideosHeader\n            courseData={courseData}\n            onYearChange={y => setSelectedYear(y)}\n          />\n        }\n        renderItem={({item}) => (\n          <VideoCard\n            item={item}\n            dark={dark}\n            onPress={() => {\n              navigation.navigate('Video', {\n                video: {\n                  video: item,\n                  courseId: courseId,\n                }, // Directly convert Date to localized date string because react-navigation wants serialized data\n              });\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nconst CourseVideosHeader = ({\n  courseData,\n  onYearChange,\n}: {\n  courseData: CourseState | undefined;\n  onYearChange: (arg0: string) => any;\n}) => {\n  return (\n    <View style={{marginLeft: 16 * p}}>\n      <View style={{height: 16 * p}} />\n      <Filters\n        items={Object.keys(courseData?.extendedInfo?.vc_recordings || {})\n          .sort((a, b) => (a < b ? 1 : -1))\n          .map(key => ({label: key, value: key}))}\n        onChange={y => onYearChange(y)}\n      />\n      <View style={{height: 8 * p}} />\n    </View>\n  );\n};\n\nexport default CourseVideos;\n","import {StyleSheet} from 'react-native';\nimport colors from './colors';\n\nconst styles = StyleSheet.create({\n  // Text color varieties\n  blackText: {\n    color: colors.black,\n  },\n  whiteText: {\n    color: colors.white,\n  },\n  grayText: {\n    color: colors.gray,\n  },\n  // Text font weights\n  textRegular: {\n    fontFamily: 'Inter-Regular',\n  },\n  textMedium: {\n    fontFamily: 'Inter-Medium',\n  },\n  textBold: {\n    fontFamily: 'Inter-Bold',\n  },\n  // Text sizes\n  textExtraSmall: {\n    fontSize: 10,\n  },\n  textSmall: {\n    fontSize: 12,\n  },\n  textNormal: {\n    fontSize: 16,\n  },\n  textMediumSize: {\n    fontSize: 20,\n  },\n  textLarge: {\n    fontSize: 24,\n  },\n  textExtraLarge: {\n    fontSize: 32,\n  },\n  textTitleLarge: {\n    fontSize: 42,\n  },\n\n  // General styles\n  withHorizontalPadding: {\n    paddingHorizontal: 24,\n  },\n  withRoundedBorder: {\n    borderRadius: 4,\n  },\n  safePaddingTop: {\n    paddingTop: 40,\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignContent: 'space-between',\n  },\n  paddingFromHeader: {\n    paddingTop: 32,\n  },\n  titleBar: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  tabNavigator: {\n    backgroundColor: colors.white,\n    height: 60,\n    tabBarActiveTintColor: colors.white,\n    paddingBottom: 8,\n  },\n  elevated: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n\n    elevation: 4,\n  },\n  elevatedSmooth: {\n    shadowColor: '#bbb',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.0,\n\n    elevation: 24,\n  },\n  border: {\n    borderRadius: 8,\n    borderColor: colors.lightGray,\n    borderWidth: 0.5,\n  },\n});\n\nexport default styles;\n","import React, {useEffect, useRef} from 'react';\nimport {Animated, View} from 'react-native';\nimport colors from '../colors';\n\nexport default function AnimatedLiveCircle({width}: {width: number}) {\n  const coeff = useRef(new Animated.Value(0)).current;\n\n  const animate = () => {\n    Animated.loop(\n      Animated.timing(coeff, {\n        toValue: 1.5,\n        duration: 2000,\n        useNativeDriver: true,\n      }),\n    ).start();\n  };\n\n  useEffect(animate, []);\n\n  return (\n    <View\n      style={{\n        width: width,\n        height: width,\n        borderRadius: width / 2,\n      }}>\n      <Animated.View\n        style={[\n          {\n            backgroundColor: colors.white,\n            width: width,\n            height: width,\n            borderRadius: width / 2,\n            opacity: Animated.subtract(1.5, coeff),\n          },\n          {transform: [{scale: coeff}]},\n        ]}></Animated.View>\n      <View\n        style={{\n          position: 'absolute',\n          left: width / 4,\n          top: width / 4,\n          width: width / 2,\n          height: width / 2,\n          borderRadius: width / 4,\n          backgroundColor: colors.white,\n        }}></View>\n    </View>\n  );\n}\n","import React, {FC, ReactNode} from 'react';\nimport {Pressable, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport styles from '../../styles';\nimport {useTranslation} from 'react-i18next';\nimport Text from '../../ui/core/Text';\nimport {p} from '../../scaling';\n\nexport type WidgetBaseProps = {\n  name?: string;\n  action?: Function;\n  compact?: boolean;\n  withButton?: boolean;\n  withPadding?: boolean;\n  fullHeight?: boolean;\n  style?: ViewStyle;\n  dark?: boolean;\n  children: ReactNode;\n};\n\nconst WidgetBase: FC<WidgetBaseProps> = ({\n  name = '',\n  action = () => {},\n  compact = false,\n  withButton = true,\n  withPadding = true,\n  fullHeight = false,\n  children,\n  dark,\n  style,\n}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        ...styles.elevatedSmooth,\n        ...styles.border,\n        backgroundColor: colors.white,\n        width: compact ? '48%' : '100%',\n        flex: 0,\n        ...style,\n      }}>\n      <Pressable\n        style={{\n          paddingHorizontal: withPadding ? 12 : 0,\n          paddingVertical: withPadding ? 8 : 0,\n          flex: fullHeight ? 1 : 0,\n        }}\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          action();\n        }}>\n        <View\n          style={{\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n            flex: 1,\n          }}>\n          {name ? (\n            <Text w=\"m\" s={12 * p} c={dark ? colors.gray100 : colors.gray800}>\n              {name}\n            </Text>\n          ) : null}\n          {children}\n\n          {withButton && (\n            <View\n              style={{\n                backgroundColor: colors.lightGray,\n                padding: 8,\n                borderRadius: 8,\n                marginVertical: 4,\n                width: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n              }}>\n              <Text w=\"m\" s={10 * p} c={dark ? colors.gray100 : colors.gray800}>\n                {t('open')}\n              </Text>\n            </View>\n          )}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nexport default WidgetBase;\n","import moment from 'moment';\nimport {getLessonURL, LiveLesson} from 'open-polito-api/lib/course';\nimport {Device} from 'open-polito-api/lib/device';\nimport React, {FC, useEffect, useRef, useState} from 'react';\nimport {View} from 'react-native';\nimport {LinearGradient} from 'expo-linear-gradient';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport styles from '../../styles';\nimport Text from '../../ui/core/Text';\nimport AnimatedLiveCircle from '../AnimatedLiveCircle';\nimport WidgetBase from './WidgetBase';\nimport openURL from '../../utils/openUrl';\n\nexport type LiveWidgetProps = {\n  liveClass: LiveLesson;\n  courseName: string;\n  device: Device;\n};\n\nconst LiveWidget: FC<LiveWidgetProps> = ({liveClass, courseName, device}) => {\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [time, setTime] = useState<number | string>(0);\n  let intervalID = useRef<any>();\n\n  const calculateTime = () => {\n    return moment\n      .utc(moment(Date.now()).diff(moment(liveClass.date)))\n      .format('HH:mm:ss');\n  };\n\n  const gotoLiveClass = () => {\n    (async () => {\n      await openURL((await getLessonURL(device, liveClass)).url || '');\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      intervalID.current = setInterval(() => {\n        mounted && setTime(calculateTime());\n      }, 1000);\n    })();\n    return () => {\n      clearInterval(intervalID.current);\n      setMounted(false);\n    };\n  }, []);\n\n  return (\n    <WidgetBase withButton={false} withPadding={false} action={gotoLiveClass}>\n      <LinearGradient\n        start={{x: 0.2, y: 0.1}}\n        end={{x: 0.7, y: 0.9}}\n        colors={['#EA0000', '#C30000']}\n        style={{\n          paddingVertical: 16,\n          paddingHorizontal: 24,\n          ...styles.elevatedSmooth,\n          ...styles.border,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginLeft: -styles.withHorizontalPadding.paddingHorizontal / 2,\n          }}>\n          <View style={{marginRight: 8}}>\n            <AnimatedLiveCircle width={40}></AnimatedLiveCircle>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n            }}>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              LIVE\n            </Text>\n            <Text s={12 * p} w=\"b\" c={colors.white}>\n              {calculateTime()}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n          }}>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {liveClass.title}\n          </Text>\n          <Text s={10 * p} w=\"b\" c={colors.white}>\n            {courseName}\n          </Text>\n        </View>\n      </LinearGradient>\n    </WidgetBase>\n  );\n};\n\nexport default LiveWidget;\n","import React, {FC, ReactNode} from 'react';\nimport {View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nexport type SectionParams = {\n  title: string;\n  dark: boolean;\n  style?: ViewStyle;\n  children: ReactNode;\n};\n\nconst Section = ({title, dark, style = {}, children}: SectionParams) => {\n  return (\n    <View style={{...style}}>\n      <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n        {title}\n      </Text>\n      <View style={{marginTop: 16 * p}}>{children}</View>\n    </View>\n  );\n};\n\nexport default Section;\n","import React from 'react';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\n\nconst FILE_TYPES = [\n  {\n    icon: 'file-text',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['csv', 'log', 'md', 'txt'],\n  },\n  {\n    icon: 'archive',\n    color: colors.gray200,\n    colorLight: colors.gray700,\n    extensions: ['7z', 'bz', 'gz', 'rar', 'tar', 'zip', 'xz'],\n  },\n  {\n    icon: 'file-code',\n    color: colors.black,\n    extensions: [\n      'asm',\n      'c',\n      'cpp',\n      'cs',\n      'css',\n      'go',\n      'h',\n      'hpp',\n      'htm',\n      'html',\n      'java',\n      'js',\n      'json',\n      'jsx',\n      'ts',\n      'tsx',\n      'php',\n      'py',\n      'rs',\n      'xml',\n    ],\n  },\n  {\n    icon: 'photo',\n    color: colors.gradient1,\n    extensions: ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'svg', 'tiff'],\n  },\n  {\n    icon: 'movie',\n    color: colors.gradient1,\n    extensions: ['flv', 'mkv', 'mp4', 'mov', 'wmv', 'avi', 'webm'],\n  },\n  {\n    icon: 'headphones',\n    color: colors.red,\n    extensions: ['aac', 'alac', 'flac', 'm4a', 'mp3', 'ogg', 'wav', 'wma'],\n  },\n  {\n    icon: 'file-text',\n    color: colors.gradient1,\n    extensions: ['doc', 'docm', 'docx', 'odt'],\n  },\n  {\n    icon: 'file-text',\n    color: '#ff3848',\n    extensions: ['pdf'],\n  },\n  {\n    icon: 'presentation',\n    color: colors.orange,\n    extensions: ['odp', 'ppt', 'pptm', 'pptx'],\n  },\n  {\n    icon: 'table',\n    color: colors.green,\n    extensions: ['ods', 'xls', 'xlsm', 'xlsx'],\n  },\n];\n\nexport default function getFileIcon(filename: string, dark: boolean) {\n  const ext = filename.split('.').pop()!.toLowerCase();\n  for (let i = 0; i < FILE_TYPES.length; i++) {\n    const {icon, extensions} = FILE_TYPES[i];\n    if (extensions.includes(ext)) {\n      const color = !dark\n        ? FILE_TYPES[i].colorLight || FILE_TYPES[i].color\n        : FILE_TYPES[i].color;\n      return <TablerIcon name={icon} color={color} size={24 * p} />;\n    }\n  }\n  return (\n    <TablerIcon name=\"file-unknown\" color={colors.gray500} size={24 * p} />\n  );\n}\n","import moment from 'moment';\nimport {File, getDownloadURL, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {Pressable, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport getFileIcon from '../utils/getFileIcon';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport Text from './core/Text';\nimport PressableBase from './core/PressableBase';\nimport {Device} from 'open-polito-api/lib/device';\nimport openURL from '../utils/openUrl';\n\nexport type DirectoryItemProps = {\n  item: MaterialItem;\n  relativeDate?: boolean;\n  dark: boolean;\n  course?: string;\n  onPress?: Function;\n  children?: ReactNode;\n};\n\nconst sizes = ['B', 'kB', 'MB', 'GB', 'TB'];\n\nexport const computeSizeLabel = (size: number) => {\n  const _size = Math.floor(size);\n  const index = Math.min(\n    _size > 0 ? Math.floor(Math.floor(Math.log10(_size)) / 3) : 0,\n    sizes.length - 1,\n  );\n  return `${(_size / 10 ** (index === 0 ? 1 : 3 * index)).toFixed(2)} ${\n    sizes[index]\n  }`;\n};\n\nconst downloadFile = (device: Device, item: File) => {\n  getDownloadURL(device, item).then(url => openURL(url));\n};\n\nconst DirectoryItem: FC<DirectoryItemProps> = ({\n  item,\n  relativeDate = false, // show as \"X days/hours ago instead of plain date\"\n  dark,\n  course = '',\n  onPress = () => {},\n  children,\n}) => {\n  const sizeLabel = useMemo(() => {\n    return item.type === 'file' ? computeSizeLabel(item.size * 1000) : '';\n  }, [item]);\n\n  const {device} = useContext(DeviceContext);\n\n  const iconComponent = useMemo(() => {\n    return item.type === 'file' ? (\n      getFileIcon(item.filename, dark)\n    ) : (\n      <TablerIcon\n        name=\"folder\"\n        color={dark ? colors.gray200 : colors.gray700}\n        size={24 * p}\n      />\n    );\n  }, [item, dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n      }}>\n      <PressableBase\n        android_ripple={{color: colors.lightGray}}\n        onPress={() => {\n          item.type === 'file' ? () => downloadFile(device, item) : onPress();\n        }} // download file if file, otherwise use onPress prop\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 8,\n        }}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            flex: 1,\n          }}>\n          {iconComponent}\n          <View\n            style={{\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n              marginLeft: 10 * p,\n              flex: 1,\n            }}>\n            <View style={{marginRight: 10 * p}}>\n              <Text\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"m\"\n                s={12 * p}\n                numberOfLines={1}>\n                {item.name}\n              </Text>\n            </View>\n            {item.type === 'file' && (\n              <View style={{flexDirection: 'column', flex: 1}}>\n                <Text numberOfLines={1} w=\"r\" s={10 * p} c={colors.gray300}>\n                  {sizeLabel + ' · '}\n                  {relativeDate\n                    ? moment(item.creation_date).fromNow()\n                    : moment(item.creation_date).format('ll')}\n                  {course ? ` · ${course}` : ''}\n                </Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {item.type === 'file' ? (\n          <Pressable\n            android_ripple={{color: colors.lightGray}}\n            onPress={() => downloadFile(device, item)}>\n            <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={colors.accent300}\n            />\n          </Pressable>\n        ) : null}\n      </PressableBase>\n      {item.type === 'dir' ? (\n        <View style={{flexDirection: 'row'}}>\n          <View\n            style={{\n              width: 16 * p,\n              alignItems: 'flex-start',\n            }}>\n            <View\n              style={{\n                flex: 1,\n                marginLeft: 4 * p,\n                width: 2 * p,\n                backgroundColor: dark ? colors.gray600 : colors.gray300,\n              }}\n            />\n          </View>\n          <View style={{flex: 1}}>{children}</View>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default DirectoryItem;\n","import {decode} from 'html-entities';\n\nexport const htmlTags = /<\\/?\\w+[^>]*>/g;\n\nexport const stripHTML = (input: string): string => {\n  return decode(input).replace(htmlTags, '');\n};\n","import moment from 'moment';\nimport {Notification} from 'open-polito-api/lib/notifications';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport React, {FC, useEffect, useMemo} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\nimport {stripHTML} from '../utils/html';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type NotificationParams = {\n  type: NotificationType | string;\n  notification: ExtendedAlert | Notification; // TODO add support for generic notifications (Notification type in API code)\n  dark: boolean;\n  read?: boolean;\n  courseName?: string;\n};\n\nconst isCourseAlert = (n: ExtendedAlert | Notification): n is ExtendedAlert => {\n  return (n as Notification).topic === undefined;\n};\n\nconst NotificationComponent: FC<NotificationParams> = ({\n  type,\n  notification,\n  dark,\n  read = true,\n  courseName = '',\n}) => {\n  const icon = useMemo(() => {\n    switch (type) {\n      case NotificationType.TEST:\n        return 'test-pipe';\n      case NotificationType.DIRECT:\n        return 'message-dots';\n      case NotificationType.NOTICE:\n        return 'bell';\n      case NotificationType.MATERIAL:\n        return 'files';\n      default:\n        return 'bell';\n    }\n  }, [type]);\n\n  const title = useMemo<string>(\n    () =>\n      isCourseAlert(notification)\n        ? stripHTML(notification.text)\n        : notification.title,\n    [notification],\n  );\n\n  const body = useMemo<string | null>(\n    () => (isCourseAlert(notification) ? notification.text : notification.body),\n    [notification],\n  );\n\n  const dateString = useMemo(() => {\n    return moment(\n      isCourseAlert(notification) ? notification.date : notification.time,\n    ).format('ll');\n  }, [notification]);\n\n  const offset = useSharedValue(read ? 0 : 1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 8 * p * offset.value,\n    height: 8 * p * offset.value,\n    backgroundColor: colors.red,\n    borderRadius: 8 * p,\n  }));\n\n  /**\n   * If read, hide red badge\n   */\n  useEffect(() => {\n    if (!read) return;\n    offset.value = withTiming(0, {duration: 200});\n  }, [read]);\n\n  return (\n    <View style={{flexDirection: 'column'}}>\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        <View\n          style={{\n            width: 32 * p,\n            height: 32 * p,\n            borderRadius: 4 * p,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginRight: 16 * p,\n          }}>\n          <View\n            style={{\n              position: 'absolute',\n              justifyContent: 'center',\n              alignItems: 'center',\n              top: -4 * p,\n              right: -4 * p,\n              width: 8 * p,\n              height: 8 * p,\n            }}>\n            <Animated.View style={[animStyle]} />\n          </View>\n          <TablerIcon name={icon} color={colors.accent300} size={16 * p} />\n        </View>\n        <View style={{flexDirection: 'column', flex: 1}}>\n          <Text\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            w=\"r\"\n            numberOfLines={isCourseAlert(notification) ? 1 : 2}>\n            {title}\n          </Text>\n          <Text\n            s={10 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            w=\"r\"\n            numberOfLines={2}>\n            {dateString}\n            {isCourseAlert(notification)\n              ? notification.course_name && ' · ' + notification.course_name\n              : courseName && ' · ' + courseName}\n          </Text>\n        </View>\n      </View>\n      {!!body && (\n        <View\n          style={{\n            marginTop: 12 * p,\n            padding: 16 * p,\n            borderRadius: 4 * p,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n          }}>\n          <RenderHTMLSource\n            source={{\n              html: body,\n            }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default NotificationComponent;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {getRecentCourseMaterial} from '../utils/material';\nimport LiveWidget from '../components/widgets/LiveWidget';\nimport {CourseState} from '../store/coursesSlice';\nimport Section from './Section';\nimport TablerIcon from './core/TablerIcon';\nimport {p} from '../scaling';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {STATUS} from '../store/status';\nimport DirectoryItem from './DirectoryItem';\nimport Notification from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\n\n// TODO \"Exam is taken?\" feature\n\nconst CourseOverview: FC<{\n  code: string;\n  changeTab: Function;\n}> = ({code, changeTab}) => {\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const materialTree = courseData?.extendedInfo?.material || [];\n\n  const buildField = (name: string, icon: string, index: number) => {\n    return (\n      <View\n        key={icon}\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: (index + 1) % 3 == 0 ? 0 : 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n        />\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}\n          style={{marginLeft: 8 * p}}>\n          {name}\n        </Text>\n      </View>\n    );\n  };\n\n  const fields = useMemo(() => {\n    return [\n      {\n        name:\n          courseData?.extendedInfo?.professor.surname +\n          ' ' +\n          courseData?.extendedInfo?.professor.name,\n        icon: 'user-circle',\n      },\n      {\n        name: courseData?.basicInfo.num_credits + ' ' + t('credits'),\n        icon: 'north-star',\n      },\n      {\n        name: courseData?.basicInfo.code,\n        icon: 'grid-pattern',\n      },\n      {\n        name:\n          t('year') +\n            ' ' +\n            (courseData?.extendedInfo?.degree_year || '') +\n            ', ' +\n            t('period') +\n            ' ' +\n            courseData?.extendedInfo?.year_period || '',\n        icon: 'calendar-time',\n      },\n      // {\n      //   name: '(feature coming soon)',\n      //   icon: 'writing',\n      // },\n    ];\n  }, [courseData]);\n\n  return (\n    <View>\n      {/* Summary */}\n      <Section dark={dark} title={t('summary')}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (\n          <View style={{flexDirection: 'row'}}>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(0, 2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n            <View style={{flex: 1}}>\n              {fields\n                .slice(2)\n                .map((field, i) => buildField(field.name || '', field.icon, i))}\n            </View>\n          </View>\n        )}\n      </Section>\n      {courseData?.extendedInfo?.live_lessons.map(liveClass => (\n        <LiveWidget\n          key={liveClass.meeting_id}\n          liveClass={liveClass}\n          courseName={courseData.basicInfo.name}\n          device={device}\n        />\n      )) || null}\n      {/* Latest files */}\n      <Section dark={dark} title={t('latestFiles')} style={{marginTop: 24}}>\n        <View style={{marginTop: -8}}>\n          {courseData?.status.code == STATUS.PENDING ? (\n            <ActivityIndicator />\n          ) : (\n            getRecentCourseMaterial(materialTree || []).map(file => (\n              <DirectoryItem item={file} dark={dark} />\n            ))\n          )}\n        </View>\n      </Section>\n      {/* Latest alert */}\n      <Section dark={dark} title={t('latestAlert')} style={{marginTop: 16}}>\n        {courseData?.status.code == STATUS.PENDING ? (\n          <ActivityIndicator />\n        ) : (courseData?.extendedInfo?.notices || []).length > 0 ? (\n          <Notification\n            notification={{\n              ...courseData?.extendedInfo?.notices[0]!,\n              course_code: courseData?.basicInfo.code || '',\n              course_name: courseData?.basicInfo.name || '',\n            }}\n            type={NotificationType.NOTICE}\n            dark={dark}\n          />\n        ) : null}\n      </Section>\n    </View>\n  );\n};\n\nexport default CourseOverview;\n","import {File, MaterialItem} from 'open-polito-api/lib/material';\n\n/**\n * Returns all files from the current directory level only\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getLevelMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree.filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns all files from the whole material tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getMaterialList = (tree: MaterialItem[]): File[] => {\n  return tree\n    .flatMap(item =>\n      item.type == 'file'\n        ? [item]\n        : [item as MaterialItem].concat(getMaterialList(item.children)),\n    )\n    .filter(item => item.type == 'file') as Array<File>;\n};\n\n/**\n * Returns 3 most recent files from tree\n * @param tree The tree of items\n * @returns List of files\n */\nexport const getRecentCourseMaterial = (\n  tree: MaterialItem[] | undefined,\n): File[] => {\n  return getMaterialList(tree || [])\n    .sort((a, b) => b.creation_date - a.creation_date)\n    .slice(0, 3);\n};\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport DirectoryItem from './DirectoryItem';\nimport {MaterialItem} from 'open-polito-api/lib/material';\n\nexport default function DirectoryItemRecursive({\n  dark,\n  item,\n}: {\n  dark: boolean;\n  item: MaterialItem;\n}) {\n  const [opened, setOpened] = useState(false);\n\n  return (\n    <View>\n      {item.type == 'file' ? (\n        <DirectoryItem dark={dark} item={item} />\n      ) : (\n        <View>\n          <DirectoryItem\n            dark={dark}\n            item={item}\n            onPress={() => {\n              setOpened(!opened);\n            }}>\n            {opened\n              ? item.children.map(item => (\n                  <DirectoryItemRecursive\n                    dark={dark}\n                    key={item.code}\n                    item={item}\n                  />\n                ))\n              : []}\n          </DirectoryItem>\n        </View>\n      )}\n    </View>\n  );\n}\n","import {Directory, MaterialItem} from 'open-polito-api/lib/material';\nimport React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport DirectoryItemRecursive from './DirectoryItemRecursive';\nimport NoContent from './NoContent';\nimport {CoursesState, CourseState} from '../store/coursesSlice';\nimport DirectoryItem from './DirectoryItem';\n\ntype MaterialDict = {[code: string]: MaterialItem};\n\nexport default function MaterialExplorer({\n  courseId,\n  dark,\n}: {\n  courseId: string; // Set to \"all\" to show all courses\n  dark: boolean;\n}) {\n  const {courses} = useSelector<RootState, CoursesState>(\n    state => state.courses,\n  );\n\n  return (\n    <View>\n      {courseId == 'all'\n        ? courses.map(course => (\n            <DirectoryItemRecursive\n              item={{\n                type: 'dir',\n                code: course.basicInfo.code + course.basicInfo.name,\n                name: course.basicInfo.name,\n                children: course.extendedInfo?.material || [],\n              }}\n              key={course.basicInfo.code + course.basicInfo.name}\n              dark={dark}\n            />\n          ))\n        : (\n            courses.find(\n              course =>\n                course.basicInfo.code + course.basicInfo.name == courseId,\n            )?.extendedInfo?.material || []\n          ).map(item => (\n            <DirectoryItemRecursive item={item} key={item.code} dark={dark} />\n          ))}\n    </View>\n  );\n}\n","import React, {ReactElement, useEffect, useMemo} from 'react';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport NoContent from './NoContent';\nimport NotificationComponent from './Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {p} from '../scaling';\nimport {ExtendedAlert} from '../types';\n\nconst CourseAlerts = ({\n  alerts,\n  dark,\n  refreshControl,\n}: {\n  alerts: ExtendedAlert[];\n  dark: boolean;\n  refreshControl: ReactElement;\n}) => {\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'column',\n        flex: 1,\n      }}>\n      <FlatList\n        style={_styles.container}\n        ListEmptyComponent={<NoContent />}\n        ListHeaderComponent={() => <View style={{height: 24 * p}} />}\n        refreshControl={refreshControl}\n        data={alerts}\n        initialNumToRender={1}\n        keyExtractor={alert => alert.id + alert.date + alert.text.slice(0, 10)}\n        renderItem={a => (\n          <View style={{marginBottom: 24 * p}}>\n            <NotificationComponent\n              type={NotificationType.NOTICE}\n              notification={a.item}\n              dark={dark}\n            />\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default CourseAlerts;\n","import React, {FC, ReactNode, useMemo} from 'react';\nimport {StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from './Text';\n\n/**\n * Wraps a component inside a view showing a badge.\n *\n * The badge is hidden if the number is 0.\n *\n * @param param0\n * @returns\n */\nconst BadgeContainer: FC<{\n  children: ReactNode;\n  style?: ViewStyle;\n  number: number | string;\n}> = ({children, style = {}, number}) => {\n  const badgeText = useMemo(() => {\n    return typeof number === 'string' ? number : number > 99 ? '99+' : number;\n  }, [number]);\n\n  return (\n    <View style={{...style}}>\n      {children}\n      {badgeText !== 0 ? (\n        <View style={_styles.badge}>\n          <Text w=\"r\" s={10 * p} c={colors.gray100}>\n            {badgeText}\n          </Text>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst _styles = StyleSheet.create({\n  badge: {\n    position: 'absolute',\n    width: 20 * p,\n    height: 20 * p,\n    borderRadius: 20 * p,\n    backgroundColor: colors.red,\n    right: -10 * p,\n    top: -10 * p,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default BadgeContainer;\n","import {useNavigation} from '@react-navigation/native';\nimport {Notification} from 'open-polito-api/lib/notifications';\nimport React, {FC, useCallback, useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {AppDispatch, RootState} from '../store/store';\nimport BadgeContainer from './core/BadgeContainer';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\nimport {DrawerActions} from '@react-navigation/native';\nimport {genericPlatform} from '../utils/platform';\nimport {setConfig} from '../store/sessionSlice';\nimport {Configuration} from '../defaultConfig';\n\n// TODO navigation to downloads\n\nexport enum HEADER_TYPE {\n  MAIN = 0,\n  SECONDARY = 1,\n}\n\nexport type HeaderParams = {\n  title: string;\n  headerType: HEADER_TYPE;\n};\n\nconst Header: FC<HeaderParams> = ({title, headerType}) => {\n  const {dark} = useContext(DeviceContext);\n  const notifications = useSelector<RootState, Notification[]>(\n    state => state.user.notifications,\n  );\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationCount = useMemo<number>(() => {\n    return notifications.filter(n => !n.is_read).length;\n  }, [notifications]);\n\n  const navigation = useNavigation();\n\n  const themeToggleIconName = useMemo(\n    () => (dark ? 'moon-stars' : 'sun'),\n    [dark],\n  );\n\n  const toggleTheme = useCallback(() => {\n    dispatch(setConfig({...config, theme: dark ? 'light' : 'dark'}));\n  }, [dark, config, dispatch]);\n\n  // TODO drawer notification count\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      header: {\n        flexDirection: 'row',\n        marginHorizontal: 12 * p,\n        marginVertical: 16 * p,\n        alignItems: 'center',\n      },\n      headerSection: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      headerMiddle: {\n        flex: 2,\n        flexDirection: 'row',\n        justifyContent: 'center',\n      },\n      headerEnd: {\n        justifyContent: 'flex-end',\n      },\n    });\n  }, []);\n\n  return (\n    <View style={_styles.header}>\n      {headerType === HEADER_TYPE.MAIN ? (\n        <>\n          <View style={_styles.headerSection}>\n            {/* TODO add logic for badge number*/}\n            <PressableBase\n              onPress={() => {\n                navigation.dispatch(DrawerActions.toggleDrawer());\n              }}>\n              <BadgeContainer number={0} style={{marginRight: 16 * p}}>\n                <TablerIcon\n                  name=\"menu-2\"\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                />\n              </BadgeContainer>\n            </PressableBase>\n            {/* TODO download manager */}\n            {/* <TablerIcon\n              name=\"download\"\n              size={24 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            /> */}\n          </View>\n          <View\n            style={{\n              ..._styles.headerSection,\n              ..._styles.headerMiddle,\n            }}>\n            <Text\n              c={dark ? colors.gray100 : colors.gray800}\n              w=\"m\"\n              s={16 * p}\n              numberOfLines={1}>\n              {title}\n            </Text>\n          </View>\n          <View style={{..._styles.headerSection, ..._styles.headerEnd}}>\n            {genericPlatform !== 'mobile' && (\n              <PressableBase onPress={toggleTheme}>\n                <TablerIcon\n                  name={themeToggleIconName}\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                  style={{marginRight: 16 * p}}\n                />\n              </PressableBase>\n            )}\n            <PressableBase onPress={() => navigation.navigate('Search')}>\n              <TablerIcon\n                name=\"search\"\n                size={24 * p}\n                color={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}\n              />\n            </PressableBase>\n            <PressableBase onPress={() => navigation.navigate('Notifications')}>\n              <BadgeContainer number={notificationCount}>\n                <TablerIcon\n                  name=\"bell\"\n                  size={24 * p}\n                  color={dark ? colors.gray100 : colors.gray800}\n                />\n              </BadgeContainer>\n            </PressableBase>\n          </View>\n        </>\n      ) : headerType === HEADER_TYPE.SECONDARY ? (\n        <>\n          <PressableBase onPress={navigation.goBack}>\n            <TablerIcon\n              name=\"arrow-left\"\n              size={24 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n            />\n          </PressableBase>\n          <Text\n            s={16 * p}\n            w=\"m\"\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginLeft: 16 * p}}>\n            {title}\n          </Text>\n        </>\n      ) : null}\n    </View>\n  );\n};\n\nexport default Header;\n","import React, {FC, useMemo, useState} from 'react';\nimport {ScrollView, StyleSheet, View, ViewStyle} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport Text from './core/Text';\n\n// TODO animation\n\nexport type TabsParams = {\n  adjusted?: boolean; // Proper margins\n  items: {label: string; value: string}[];\n  onChange: (i: number) => any;\n  defaultIndex?: number;\n  dark: boolean;\n  style?: ViewStyle;\n};\n\nconst Tabs: FC<TabsParams> = ({\n  adjusted = false,\n  items,\n  onChange,\n  defaultIndex = 0,\n  dark,\n  style = {},\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n  const select = (index: number) => {\n    setSelectedIndex(index);\n    onChange(index);\n  };\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {},\n      adjusted: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n      },\n      tab: {},\n      selectedIndicator: {\n        marginTop: 4 * p,\n        height: 2 * p,\n        backgroundColor: colors.accent300,\n      },\n    });\n  }, [dark, adjusted]);\n\n  return (\n    <View>\n      <ScrollView\n        contentContainerStyle={{\n          ..._styles.container,\n          ...style,\n          ...(adjusted ? _styles.adjusted : {}),\n        }}\n        horizontal\n        showsHorizontalScrollIndicator={false}>\n        {items.map((tab, i) => (\n          <View style={_styles.tab} key={tab.value}>\n            <PressableBase\n              style={{marginRight: 24 * p}}\n              onPress={() => select(i)}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={\n                  i == selectedIndex\n                    ? colors.accent300\n                    : dark\n                    ? colors.gray100\n                    : colors.gray800\n                }>\n                {tab.label}\n              </Text>\n              {i == selectedIndex ? (\n                <View style={_styles.selectedIndicator} />\n              ) : null}\n            </PressableBase>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {RefreshControl, ScrollView, StyleSheet, View} from 'react-native';\nimport CourseVideos from '../ui/CourseVideos';\nimport {useTranslation} from 'react-i18next';\nimport CourseOverview from '../ui/CourseOverview';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport CourseAlerts from '../ui/CourseAlerts';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState, loadCourse} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\n\nexport default function Course({navigation, route}) {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {t} = useTranslation();\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const code = route.params.courseCode;\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course => course.basicInfo.code + course.basicInfo.name == code,\n    ),\n  );\n\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const tabs = useMemo(() => {\n    return ['overview', 'material', 'alerts', 'videos'];\n  }, [courseData]);\n\n  // Populate course data if empty\n  useEffect(() => {\n    if (\n      courseData &&\n      courseData?.status.code != STATUS.PENDING &&\n      courseData?.status.code != STATUS.SUCCESS\n    ) {\n      dispatch(\n        loadCourse({\n          basicCourseInfo: courseData.basicInfo,\n          device: device,\n        }),\n      );\n    }\n  }, []);\n\n  const refresh = () => {\n    dispatch(\n      loadCourse({\n        basicCourseInfo: courseData!.basicInfo,\n        device: device,\n      }),\n    );\n  };\n\n  const refreshing = useMemo(() => {\n    return courseData?.status.code == STATUS.PENDING;\n  }, [courseData]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  const section = useMemo(() => {\n    switch (tabs[currentTab]) {\n      case 'overview':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <CourseOverview code={code} changeTab={setCurrentTab} />\n            <View style={{height: 16 * p}} />\n          </ScrollView>\n        );\n      case 'material':\n        return (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            style={_styles.container}>\n            <View style={{height: 24 * p}} />\n            <MaterialExplorer dark={dark} courseId={code} />\n            <View style={{marginBottom: 16 * p}} />\n          </ScrollView>\n        );\n      case 'alerts':\n        return (\n          <CourseAlerts\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            alerts={\n              courseData?.extendedInfo?.notices.map(alert => {\n                return {\n                  ...alert,\n                  course_code: courseData.basicInfo.code,\n                  course_name: courseData.basicInfo.name,\n                };\n              }) || []\n            }\n          />\n        );\n      case 'videos':\n        return (\n          <CourseVideos\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={refresh} />\n            }\n            dark={dark}\n            courseId={code}\n          />\n        );\n    }\n  }, [currentTab]);\n\n  return (\n    <Screen>\n      <Header\n        title={courseData?.basicInfo.name || ''}\n        headerType={HEADER_TYPE.SECONDARY}\n      />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i => {\n          setCurrentTab(i);\n        }}\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n      />\n      <View style={{flex: 1}}>{section}</View>\n    </Screen>\n  );\n}\n","import React, {FC, useCallback, useContext} from 'react';\nimport {View} from 'react-native';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\n\nexport interface ListSelectorModalProps {\n  title: string;\n  items: {label: string; value: string}[];\n  onSelect: (value: string) => any;\n}\n\nconst ListSelectorModal: FC<ListSelectorModalProps> = ({\n  title,\n  items,\n  onSelect,\n}) => {\n  const {dark} = useContext(DeviceContext);\n  const {hideModal} = useContext(ModalContext);\n\n  const _onSelect = useCallback(\n    (value: string) => {\n      onSelect(value);\n      hideModal();\n    },\n    [onSelect, hideModal],\n  );\n\n  return (\n    <ModalBase title={title} dismissable>\n      {items.map(item => (\n        <TouchableOpacity\n          key={item.value}\n          onPress={() => _onSelect(item.value)}>\n          <View\n            style={{\n              paddingVertical: 8 * p,\n            }}>\n            <Text s={12 * p} w=\"r\" c={dark ? colors.gray100 : colors.gray800}>\n              {item.label}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default ListSelectorModal;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {FlatList, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch, useSelector} from 'react-redux';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport {DropdownItem, ExtendedFile} from '../types';\nimport {MaterialItem} from 'open-polito-api/lib/material';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport PressableBase from '../ui/core/PressableBase';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport {DeviceContext} from '../context/Device';\nimport Tabs from '../ui/Tabs';\nimport Text from '../ui/core/Text';\nimport BadgeContainer from '../ui/core/BadgeContainer';\nimport {ModalContext} from '../context/ModalProvider';\nimport ListSelectorModal from '../components/modals/ListSelectorModal';\n\n// TODO more searchable categories\nconst tabs = ['files'];\n\nexport default function Search({navigation}) {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<ExtendedFile[]>([]);\n\n  const [searchFilter, setSearchFilter] = useState('');\n\n  const [quickLoad, setQuickLoad] = useState(true);\n\n  // Timer controlling when to search again\n  const [searchTimer, setSearchTimer] = useState<any>(null);\n\n  // Timer controlling when to show full list\n  const [loadTimer, setLoadTimer] = useState<any>(null);\n\n  const items = useMemo<DropdownItem[]>(() => {\n    return [\n      {\n        label: t('allCourses'),\n        value: '',\n      },\n      ...courses.map(c => ({\n        label: c.basicInfo.name,\n        value: c.basicInfo.code + c.basicInfo.name,\n      })),\n    ];\n  }, [courses]);\n\n  useEffect(() => {\n    handleNewSearch(query);\n  }, [searchFilter, query]);\n\n  /**\n   * Handles a new search\n   * @param txt The query\n   */\n  const handleNewSearch = (txt: string) => {\n    const _query = txt.toLowerCase().trim();\n    if (searchTimer) {\n      clearTimeout(searchTimer);\n    }\n    if (loadTimer) {\n      clearTimeout(loadTimer);\n    }\n    setQuickLoad(true);\n    setSearchTimer(\n      setTimeout(() => {\n        searchMaterial(_query);\n        setLoadTimer(\n          setTimeout(() => {\n            setQuickLoad(false);\n          }, 500),\n        );\n      }, 50),\n    );\n  };\n\n  /**\n   * Recursively finds files that match query\n   *\n   * @param _query Search string\n   * @param _items Array of files or dirs\n   * @param course_name\n   * @param course_code\n   * @returns files\n   */\n  const findFiles = (\n    _query: string,\n    _items: MaterialItem[],\n    course_name: string,\n    course_code: string,\n  ): ExtendedFile[] => {\n    let _results: ExtendedFile[] = [];\n    _items.forEach(item => {\n      if (item.type == 'file') {\n        if ((item.name + item.filename).toLowerCase().includes(_query)) {\n          _results.push({...item, course_code, course_name});\n        }\n      } else if (item.type == 'dir') {\n        _results.push(\n          ...findFiles(_query, item.children, course_name, course_code),\n        );\n      }\n    });\n    return _results;\n  };\n\n  /**\n   * Searches files matching specific query and course, and updates state.\n   */\n  const searchMaterial = (_query: string): void => {\n    // Using setTimeout is a bit hacky, but it works.\n    (async () => {\n      setTimeout(() => {\n        let res: ExtendedFile[] = [];\n        if (_query === '') {\n          setResults([]);\n          return;\n        }\n\n        if (searchFilter) {\n          const _course = courses.find(\n            course =>\n              searchFilter ===\n              `${course.basicInfo.code}${course.basicInfo.name}`,\n          );\n          if (!_course) {\n            res = [];\n            return;\n          }\n          res.push(\n            ...findFiles(\n              _query,\n              _course.extendedInfo?.material || [],\n              _course.basicInfo.name,\n              _course.basicInfo.code,\n            ),\n          );\n        } else {\n          courses.forEach(course => {\n            res.push(\n              ...findFiles(\n                _query,\n                course.extendedInfo?.material || [],\n                course.basicInfo.name,\n                course.basicInfo.code,\n              ),\n            );\n          });\n        }\n\n        setResults(res);\n      }, 0);\n    })();\n  };\n\n  return (\n    <Screen>\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: 12 * p,\n          paddingVertical: 16 * p,\n        }}>\n        <PressableBase\n          onPress={navigation.goBack}\n          style={{marginRight: 16 * p}}>\n          <TablerIcon\n            name=\"arrow-left\"\n            color={dark ? colors.gray200 : colors.gray700}\n            size={24 * p}\n          />\n        </PressableBase>\n        <TextInput\n          initiallyFocused\n          icon=\"search\"\n          dark={dark}\n          placeholder={t('searchForAnything')}\n          autoFocus={true}\n          onChangeText={txt => {\n            const _query = txt.toLowerCase().trim();\n            setQuery(_query);\n            handleNewSearch(_query);\n          }}\n          style={{flex: 1}}\n        />\n        <PressableBase\n          onPress={() => {\n            setModal(\n              <ListSelectorModal\n                items={items}\n                title={t('selectCourseDropdown')}\n                onSelect={value => setSearchFilter(value)}\n              />,\n            );\n          }}\n          style={{marginLeft: 16 * p}}>\n          <BadgeContainer number={searchFilter === '' ? 0 : ''}>\n            <TablerIcon\n              name=\"adjustments\"\n              color={dark ? colors.gray200 : colors.gray700}\n              size={24 * p}\n            />\n          </BadgeContainer>\n        </PressableBase>\n      </View>\n      <Tabs\n        dark={dark}\n        items={[{label: t('files'), value: 'files'}]}\n        onChange={() => {}}\n        adjusted\n      />\n      <FlatList\n        style={{paddingTop: 24 * p, paddingHorizontal: 16 * p}}\n        contentContainerStyle={{flexGrow: 1}}\n        data={quickLoad ? results.slice(0, 10) : results}\n        keyExtractor={item => item.code}\n        initialNumToRender={10}\n        maxToRenderPerBatch={10}\n        renderItem={({item}) => {\n          return (\n            <View key={item.code}>\n              <DirectoryItem\n                item={item}\n                key={item.code}\n                dark={dark}\n                course={item.course_name}\n              />\n            </View>\n          );\n        }}\n        ListEmptyComponent={\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <TablerIcon\n              name=\"search-off\"\n              size={64 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View\n              style={{\n                marginTop: 8 * p,\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray200 : colors.gray700}\n                style={{marginBottom: 8 * p}}>\n                {t('noResults')}\n              </Text>\n              <Text s={10 * p} w=\"m\" c={dark ? colors.gray300 : colors.gray600}>\n                {t('tryADifferentTerm')}\n              </Text>\n            </View>\n          </View>\n        }\n        ListFooterComponent={<View style={{marginBottom: 24 * p}}></View>}\n      />\n    </Screen>\n  );\n}\n","import {Recording} from 'open-polito-api/lib/course';\nimport React from 'react';\n\nconst VideoPlayer = ({video}: {video: Recording}) => {\n  return <video src={video.url} controls autoPlay />;\n};\n\nexport default VideoPlayer;\n","import {useNavigation} from '@react-navigation/core';\nimport React, {useContext, useMemo, useState} from 'react';\nimport {Dimensions, FlatList, StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {Recording} from 'open-polito-api/lib/course';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport Screen from '../ui/Screen';\nimport Text from '../ui/core/Text';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport VideoCard from '../ui/VideoCard';\nimport moment from 'moment';\nimport VideoPlayer from '../ui/VideoPlayer';\nimport Header, {HEADER_TYPE} from '../ui/Header';\n\n// TODO fullscreen mode\n// TODO custom video controls design\n// TODO \"cast to\" feature\n// TODO video download\n\nexport default function Video({route}) {\n  const {t} = useTranslation();\n\n  const video: {video: Recording; courseId: string} = route.params.video;\n\n  const [currentVideo, setCurrentVideo] = useState<Recording>(video.video);\n\n  const courseData = useSelector<RootState, CourseState | undefined>(state =>\n    state.courses.courses.find(\n      course =>\n        course.basicInfo.code + course.basicInfo.name === video.courseId,\n    ),\n  );\n\n  const relatedVideos = useMemo(() => {\n    return [...(courseData?.extendedInfo?.vc_recordings.current || [])].sort(\n      (a, b) => b.date - a.date,\n    );\n  }, [courseData]);\n\n  const {dark} = useContext(DeviceContext);\n\n  const w = Dimensions.get('window').width;\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingHorizontal: 16 * p,\n        paddingTop: 24 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={video.video.title} headerType={HEADER_TYPE.SECONDARY} />\n      <View\n        style={{\n          height: w / 1.78,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        {/* <RNVideoPlayer\n          source={{uri: currentVideo.url}}\n          navigator={navigation}\n          seekColor={colors.gradient1}\n        /> */}\n        <VideoPlayer video={currentVideo} />\n      </View>\n      <FlatList\n        data={relatedVideos}\n        renderItem={({item}) => (\n          <View\n            style={[\n              item.url === currentVideo.url\n                ? {backgroundColor: dark ? colors.gray600 : colors.gray300}\n                : {},\n            ]}>\n            <VideoCard\n              item={item}\n              dark={dark}\n              onPress={() => setCurrentVideo(item)}\n            />\n          </View>\n        )}\n        keyExtractor={item => item.url}\n        ListHeaderComponent={() => (\n          <View style={_styles.container}>\n            <Text s={16 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n              {currentVideo.title}\n            </Text>\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={dark ? colors.gray200 : colors.gray500}\n              style={{marginTop: 8 * p}}>\n              {courseData?.basicInfo.name} ·{' '}\n              {moment(currentVideo.date).format('ll')}\n            </Text>\n\n            <View style={{marginVertical: 24 * p}}>\n              {/* <Button text={t('download (feature coming soon)')} secondary /> */}\n            </View>\n            <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n              {t('relatedVideos')}\n            </Text>\n          </View>\n        )}\n      />\n    </Screen>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, ScrollView, StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport PressableBase from '../ui/core/PressableBase';\nimport Text from '../ui/core/Text';\nimport {useNavigation} from '@react-navigation/native';\nimport Section from '../ui/Section';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {STATUS} from '../store/status';\nimport Notification from '../ui/Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {ExtendedAlert} from '../types';\n\n// TODO \"quick access\" section using recently opened sections\n// TODO open notification section\n// TODO show update widget\n// TODO show live classes\n\nconst sectionsData = [\n  {name: 'Courses', icon: 'school'},\n  {name: 'Material', icon: 'folders'},\n  {name: 'Email', icon: 'mail'},\n  {name: 'ExamSessions', icon: 'ballpen'},\n];\nconst sectionColors = [colors.accent300, colors.red, '#9b51e0', '#f2c94c'];\n\nconst Home = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n  const navigation = useNavigation();\n\n  const {courses, recentMaterial, loadExtendedCourseInfoStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const latestAlert = useMemo<ExtendedAlert>(() => {\n    return courses\n      .flatMap(\n        c =>\n          c.extendedInfo?.notices.map(notice => {\n            return {\n              ...notice,\n              course_name: c.basicInfo.name,\n              course_code: c.basicInfo.code,\n            };\n          }) || [],\n      )\n      .sort((a, b) => b.date - a.date)[0];\n  }, [courses]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n      topSections: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingBottom: 16,\n      },\n      topSection: {\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionInner: {\n        width: 40 * p,\n        height: 40 * p,\n        borderRadius: 4 * p,\n        marginBottom: 4 * p,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionText: {\n        position: 'absolute',\n        bottom: -16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header title={t('home')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          <PressableBase\n            onPress={() => {\n              navigation.navigate('Search');\n            }}>\n            <TextInput\n              editable={false}\n              placeholder={t('searchForAnything')}\n              dark={dark}\n              icon=\"search\"\n              style={{marginBottom: 32 * p}}\n            />\n          </PressableBase>\n          {/* Top sections */}\n          <View style={_styles.topSections}>\n            {sectionsData.map((btn, i) => (\n              <PressableBase\n                key={btn.name}\n                style={_styles.topSection}\n                onPress={() => {\n                  navigation.navigate(btn.name);\n                }}>\n                <View\n                  style={{\n                    ..._styles.topSectionInner,\n                    backgroundColor: sectionColors[i],\n                  }}>\n                  <TablerIcon\n                    name={btn.icon}\n                    size={24 * p}\n                    color={colors.gray100}\n                  />\n                </View>\n                <Text\n                  numberOfLines={1}\n                  s={10 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}\n                  style={_styles.topSectionText}>\n                  {t(btn.name[0].toLowerCase() + btn.name.slice(1))}\n                </Text>\n              </PressableBase>\n            ))}\n            <PressableBase\n              style={_styles.topSection}\n              onPress={() => {\n                navigation.toggleDrawer();\n              }}>\n              <View\n                style={{\n                  ..._styles.topSectionInner,\n                  borderColor: colors.gray200,\n                  borderWidth: 1 * p,\n                }}>\n                <TablerIcon name=\"plus\" size={24 * p} color={colors.gray200} />\n              </View>\n              <Text\n                numberOfLines={1}\n                s={10 * p}\n                w=\"r\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={_styles.topSectionText}>\n                {t('more')}\n              </Text>\n            </PressableBase>\n          </View>\n\n          {/* Latest files */}\n          <Section\n            dark={dark}\n            title={t('latestFiles')}\n            style={{marginTop: 32 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              recentMaterial.slice(0, 3).map(file => (\n                <View key={file.code}>\n                  <DirectoryItem\n                    relativeDate\n                    dark={dark}\n                    item={file}\n                    course={file.course_name}\n                  />\n                </View>\n              ))\n            )}\n          </Section>\n\n          {/* Latest alert */}\n          <Section\n            dark={dark}\n            title={t('latestAlert')}\n            style={{marginTop: 24 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              <Notification\n                type={NotificationType.NOTICE}\n                notification={latestAlert}\n                dark={dark}\n              />\n            )}\n          </Section>\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n};\n\nexport default Home;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch} from 'react-redux';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch} from '../store/store';\nimport WebView, {WebViewNavigation} from 'react-native-webview';\nimport {getUnreadEmailCount} from '../store/userSlice';\nimport Animated from 'react-native-reanimated';\nimport {emailUrl} from 'open-polito-api/lib/user';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport {genericPlatform} from '../utils/platform';\nimport {Device} from 'open-polito-api/lib/device';\n\n// TODO dark mode in WebView\n\nconst getWebMailUrl = async (device: Device) => {\n  const url = await emailUrl(device);\n  return url;\n};\n\nexport default function Email() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [mounted, setMounted] = useState(true);\n  const [loaded, setLoaded] = useState(false);\n  const [webViewRef, setWebViewRef] = useState<WebView | null>(null);\n  const [webMailUrl, setWebMailUrl] = useState('');\n\n  useEffect(() => {\n    return () => setMounted(false);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      dispatch(getUnreadEmailCount(device));\n      !webMailUrl && mounted && setWebMailUrl(await getWebMailUrl(device));\n      webMailUrl && genericPlatform !== 'mobile' && setLoaded(true);\n    })();\n  }, [device, dispatch, mounted, webMailUrl]);\n\n  const handleNavigationStateChange = (state: WebViewNavigation) => {\n    if (genericPlatform !== 'mobile') {\n      return;\n    }\n    if (!state.loading && !loaded && mounted) {\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <Screen>\n      <Header title={t('email')} headerType={HEADER_TYPE.MAIN} />\n      <Animated.View style={{flex: 1}}>\n        {loaded ? (\n          genericPlatform !== 'mobile' ? (\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('emailCannotBeShownDesktop')}\n              </Text>\n              <Text\n                href={webMailUrl}\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('openBrowser')}\n              </Text>\n            </View>\n          ) : null\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={dark ? colors.gray100 : colors.gray800}\n              style={{marginRight: 16 * p}}>\n              {t('loading')}\n            </Text>\n            <ActivityIndicator />\n          </View>\n        )}\n        {genericPlatform === 'mobile' && (\n          <View\n            style={{\n              flex: loaded ? 1 : 0,\n            }}>\n            <WebView\n              ref={ref => !ref && setWebViewRef(ref)}\n              source={{uri: webMailUrl}}\n              onNavigationStateChange={handleNavigationStateChange}\n            />\n          </View>\n        )}\n      </Animated.View>\n    </Screen>\n  );\n}\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {StyleSheet, Switch, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type SettingsItemProps = {\n  icon?: string;\n  name: string;\n  description?: string;\n  disabled?: boolean;\n  settingsFunction: () => any;\n  toggle?: boolean; // whether to show toggle\n  toggleValue?: boolean; // value of toggle\n  padding?: boolean; // adds horizontal padding\n  paddingBottom?: boolean; // add bottom padding (e.g. when not last item)\n  children?: ReactNode;\n};\n\nconst SettingsItem: FC<SettingsItemProps> = ({\n  icon,\n  name,\n  description,\n  disabled = false,\n  settingsFunction = () => {},\n  toggle = false,\n  toggleValue,\n  padding = false,\n  paddingBottom = true,\n  children = null,\n}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      textContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n      },\n    });\n  }, []);\n\n  return (\n    <View\n      style={[\n        padding ? {paddingHorizontal: 16 * p} : {},\n        paddingBottom ? {paddingBottom: 16 * p} : {},\n      ]}>\n      <PressableBase\n        disabled={!!children || disabled}\n        onPress={settingsFunction}\n        android_ripple={{color: colors.gray200}}\n        style={[_styles.container, disabled ? {opacity: 0.5} : {}]}>\n        {icon ? (\n          <View style={{marginRight: 12 * p}}>\n            <TablerIcon\n              name={icon}\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n          </View>\n        ) : null}\n        <View style={_styles.textContainer}>\n          <Text\n            w=\"m\"\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginBottom: 2 * p}}>\n            {name}\n          </Text>\n          {description ? (\n            <Text w=\"r\" s={10 * p} c={dark ? colors.gray200 : colors.gray700}>\n              {description}\n            </Text>\n          ) : null}\n        </View>\n        {toggle ? (\n          <Switch value={toggleValue} onChange={settingsFunction} />\n        ) : null}\n      </PressableBase>\n      <View>{children}</View>\n    </View>\n  );\n};\nexport default SettingsItem;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig, setToast} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport Logger from '../../utils/Logger';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\n\nconst SettingsEnableLoggingModal = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const enableLogging = () => {\n    dispatch(setConfig({...config, logging: !config.logging}));\n    dispatch(\n      setToast({\n        message: t('restartToastMessage'),\n        type: 'warn',\n        visible: true,\n      }),\n    );\n  };\n\n  return (\n    <BaseActionConfirmModal\n      title={t('debugEnableLogging')}\n      icon=\"alert-triangle\"\n      accentColor={colors.red}\n      onConfirm={enableLogging}>\n      <RenderHTMLSource\n        source={{\n          html: t('debugEnableLoggingDialogMessage', {\n            path: Logger.logsDirectoryPath,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default SettingsEnableLoggingModal;\n","import React, {useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport SettingsItem, {SettingsItemProps} from '../ui/SettingsItem';\nimport {useDispatch} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport {AppDispatch, RootState} from '../store/store';\nimport {resetConfig, setConfig, setToast} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\nimport {Configuration} from '../defaultConfig';\nimport Config from 'react-native-config';\nimport {sendTestPushNotification} from 'open-polito-api/lib/notifications';\nimport Analytics from 'appcenter-analytics';\nimport version from '../../version.json';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport colors from '../colors';\nimport SettingsEnableLoggingModal from '../components/modals/SettingsEnableLoggingModal';\nimport {ModalContext} from '../context/ModalProvider';\n\n/**\n * Creates Settings item component from data\n * @param item Settings item data\n * @returns Settings item component\n */\nexport const buildSettingsItem = (item: SettingsItemProps) => {\n  return <SettingsItem key={item.name} {...item} />;\n};\n\nexport default function Settings() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const {setModal} = useContext(ModalContext);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  // const _setConfig = (config: Configuration) => {\n  //   dispatch(setConfig(config));\n  // };\n\n  // const showRestartAppNeeded = () => {\n  //   dispatch(\n  //     setToast({\n  //       message: t('restartToastMessage'),\n  //       type: 'warn',\n  //       visible: true,\n  //     }),\n  //   );\n  // };\n\n  // const settingsItems: SettingsItemProps[] = [\n  //   {\n  //     icon: 'bell',\n  //     name: t('notifications'),\n  //     description: t('notificationsDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  //   {\n  //     icon: 'moon-stars',\n  //     name: t('darkMode'),\n  //     settingsFunction: () => notImplemented(t),\n  //     toggle: true,\n  //     toggleValue: config.theme == 'dark',\n  //   },\n  //   {\n  //     icon: 'info-circle',\n  //     name: t('about'),\n  //     description: t('aboutDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  // ];\n\n  const debugSettingsItems: SettingsItemProps[] = [\n    {\n      icon: 'bug',\n      name: t('debugEnableLogging'),\n      description: t('debugEnableLoggingDesc'),\n      settingsFunction: () => {\n        if (!config.logging) {\n          setModal(<SettingsEnableLoggingModal />);\n        } else {\n          dispatch(setConfig({...config, logging: false}));\n        }\n      },\n      toggle: true,\n      toggleValue: config.logging,\n    },\n    {\n      icon: 'arrow-back',\n      name: t('debugResetConfig'),\n      description: t('debugResetConfigDesc'),\n      settingsFunction: () => {\n        dispatch(resetConfig());\n      },\n    },\n    {\n      icon: 'bell-ringing',\n      name: t('debugTestNotification'),\n      description: t('debugTestNotificationDesc'),\n      settingsFunction: () => {\n        dispatch(\n          setToast({message: t('pleaseWait'), type: 'info', visible: true}),\n        );\n        (async () => {\n          await sendTestPushNotification(device);\n        })();\n      },\n    },\n  ];\n\n  // const experimentalSettingsItems: SettingsItemProps[] = [];\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('settings')} />\n      <View style={_styles.container}>\n        {/* <Section dark={dark} title={t('generalSettings')}>\n          {settingsItems.map(item => buildSettingsItem(item))}\n        </Section> */}\n\n        {/* Debug options */}\n        {parseInt(Config.ENABLE_DEBUG_OPTIONS!) ? (\n          <Section dark={dark} title={t('debugSettings')}>\n            <View style={{marginTop: -8 * p}}>\n              {debugSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null}\n        {/* Experimental options */}\n        {/* {parseInt(Config.ENABLE_EXPERIMENTAL_OPTIONS) ? (\n          <Section dark={dark} title={t('experimentalSettings')}>\n            <View>\n              {experimentalSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null} */}\n      </View>\n      <View\n        style={{\n          marginTop: 8,\n          marginBottom: 16,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n          {'v' + version.version}\n        </Text>\n      </View>\n    </Screen>\n  );\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useContext} from 'react';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  CourseState,\n  getRecentMaterial,\n  loadCourse,\n} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport {useNavigation} from '@react-navigation/core';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport PressableBase from '../ui/core/PressableBase';\n\n// TODO folder stats (n of files, folder size)\n// TODO download features (e.g. download folders too, selection feature, ...)\n\nconst tabs = ['explore', 'recentlyAdded'];\n\nexport default function Material() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigation = useNavigation();\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const {getRecentMaterialStatus, recentMaterial} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const [materialLoaded, setMaterialLoaded] = useState(false);\n  const [allLoaded, setAllLoaded] = useState(false);\n\n  /**\n   * Initial setup.\n   * Load all course data if not already loaded, set {@link materialLoaded} to true if already loaded.\n   */\n  useEffect(() => {\n    let _materialLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code != STATUS.SUCCESS) {\n        _materialLoaded = false;\n        dispatch(\n          loadCourse({\n            basicCourseInfo: course.basicInfo,\n            device: device,\n          }),\n        );\n      }\n    });\n    _materialLoaded && setMaterialLoaded(true);\n  }, []);\n\n  /**\n   * Called each time {@link courses} changes.\n   * Check if data is loaded, then set {@link materialLoaded} to true if so.\n   */\n  useEffect(() => {\n    if (!materialLoaded) {\n      let _materialLoaded = true;\n      courses.forEach(course => {\n        if (course.status.code != STATUS.SUCCESS) {\n          _materialLoaded = false;\n        }\n      });\n      _materialLoaded && setMaterialLoaded(true);\n    }\n  }, [courses]);\n\n  /**\n   * When {@link materialLoaded}, get recent material only if not already set.\n   */\n  useEffect(() => {\n    if (\n      materialLoaded &&\n      getRecentMaterialStatus.code != STATUS.SUCCESS &&\n      getRecentMaterialStatus.code != STATUS.PENDING\n    ) {\n      dispatch(getRecentMaterial());\n    }\n  }, [materialLoaded]);\n\n  /**\n   * Finally, when recent material has been loaded, set {@link allLoaded} to true.\n   */\n  useEffect(() => {\n    if (getRecentMaterialStatus.code == STATUS.SUCCESS) {\n      setAllLoaded(true);\n    }\n  }, [getRecentMaterialStatus]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('material')} />\n      <FlatList\n        data={[0]}\n        renderItem={() => (\n          <View style={_styles.container}>\n            <PressableBase\n              onPress={() => {\n                navigation.navigate('Search');\n              }}>\n              <TextInput\n                editable={false}\n                placeholder={t('searchForAnything')}\n                dark={dark}\n                icon=\"search\"\n              />\n            </PressableBase>\n            <Tabs\n              style={{marginTop: 24 * p, marginBottom: 16 * p}}\n              onChange={i => setSelectedTab(i)}\n              dark={dark}\n              items={tabs.map(tab => {\n                return {label: t(tab), value: tab};\n              })}\n            />\n            {selectedTab == 0 ? (\n              <MaterialExplorer courseId=\"all\" dark={dark} />\n            ) : (\n              <FlatList\n                data={recentMaterial}\n                keyExtractor={item => item.code}\n                renderItem={({item}) => (\n                  <DirectoryItem\n                    item={item}\n                    key={item.code}\n                    dark={dark}\n                    course={item.course_name}\n                  />\n                )}\n              />\n            )}\n          </View>\n        )}\n      />\n    </Screen>\n  );\n}\n","const sections = [\n  {\n    name: 'general',\n    items: [\n      {\n        name: 'Home',\n        icon: 'layout-dashboard',\n      },\n      {\n        name: 'Email',\n        icon: 'mail',\n      },\n      {\n        name: 'Notifications',\n        icon: 'bell',\n      },\n      {\n        name: 'Settings',\n        icon: 'settings',\n      },\n    ],\n  },\n  {\n    name: 'classes',\n    items: [\n      {\n        name: 'Courses',\n        icon: 'school',\n      },\n      {\n        name: 'Material',\n        icon: 'folders',\n      },\n      {\n        name: 'Bookings',\n        icon: 'ticket',\n      },\n      {\n        name: 'Timetable',\n        icon: 'clock',\n      },\n    ],\n  },\n  {\n    name: 'exams',\n    items: [\n      {\n        name: 'Exams',\n        icon: 'book-2',\n      },\n      {\n        name: 'ExamSessions',\n        icon: 'ballpen',\n      },\n    ],\n  },\n  {\n    name: 'headquarters',\n    items: [\n      {\n        name: 'Maps',\n        icon: 'map-2',\n      },\n      {\n        name: 'Classrooms',\n        icon: 'building-arch',\n      },\n      {\n        name: 'People',\n        icon: 'user',\n      },\n    ],\n  },\n];\n\nexport default sections;\n","import {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport React, {FC, useCallback, useContext, useMemo, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport version from '../../version.json';\nimport sections from '../sections';\nimport {useTranslation} from 'react-i18next';\nimport TablerIcon from './core/TablerIcon';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {PersonalData} from 'open-polito-api/lib/user';\nimport {logout} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\n\n// TODO remove when sections completed\nconst isSectionUnavailable = (name: string) => {\n  return ['Maps', 'Classrooms', 'People'].includes(name);\n};\n\ntype DrawerParams = {\n  dark: boolean;\n} & DrawerContentComponentProps;\n\n// TODO proper separation of logic\n// TODO badges\n\nconst orderedSections = sections.flatMap(sec => sec.items.map(i => i.name));\n\nconst getShortenedDegreeName = (degreeType: string, degreeName: string) => {\n  const prefix =\n    degreeType.toLowerCase() == 'corso di laurea in'\n      ? 'L3'\n      : degreeType.toLowerCase() == 'corso di laurea magistrale in'\n      ? 'LM'\n      : '';\n  const suffix = degreeName\n    .toLowerCase()\n    .replace('ingegneria', '')\n    .toUpperCase()\n    .trim();\n  return `${prefix} ${suffix}`;\n};\n\n// TODO fix bug where highlighted selection doesn't update if pressing back button\n\nconst Drawer: FC<DrawerParams> = ({dark, ...props}) => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const deviceContext = useContext(DeviceContext);\n\n  const userInfo = useSelector<RootState, PersonalData | null>(\n    state => state.user.userInfo,\n  );\n\n  const shortDegreeName = useMemo(() => {\n    if (userInfo == null) {\n      return '';\n    }\n    return getShortenedDegreeName(userInfo.degree_type, userInfo.degree_name);\n  }, [userInfo]);\n\n  const [current, setCurrent] = useState(orderedSections[0]);\n\n  // TODO optimize (maybe with useMemo)\n  const createButtons = () => {\n    return sections.map(sec => (\n      <View style={_styles.category}>\n        <View style={{marginBottom: 8 * p}}>\n          <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {t(sec.name).toUpperCase()}\n          </Text>\n        </View>\n        {sec.items.map(screen => (\n          <PressableBase\n            disabled={isSectionUnavailable(screen.name)}\n            style={{\n              paddingVertical: 4 * p,\n              flexDirection: 'row',\n              alignItems: 'center',\n              opacity: isSectionUnavailable(screen.name) ? 0.3 : 1,\n            }}\n            key={screen.name}\n            onPress={() => {\n              setCurrent(screen.name);\n              props.navigation.navigate(screen.name);\n            }}>\n            <TablerIcon\n              name={screen.icon}\n              size={24 * p}\n              color={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {t(screen.name.charAt(0).toLowerCase() + screen.name.slice(1))}\n            </Text>\n          </PressableBase>\n        ))}\n      </View>\n    ));\n  };\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout(deviceContext.device));\n  }, [dispatch, deviceContext]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      drawerScrollView: {\n        backgroundColor: dark ? colors.gray800 : colors.gray100,\n      },\n      drawer: {\n        flexDirection: 'column',\n        paddingHorizontal: 16 * p,\n        paddingVertical: 24 * p,\n      },\n      hr: {\n        backgroundColor: colors.gray500,\n        height: 1 * p,\n        marginBottom: 16 * p,\n      },\n      category: {\n        marginBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <DrawerContentScrollView style={_styles.drawerScrollView} {...props}>\n      <View style={_styles.drawer}>\n        <View style={{justifyContent: 'flex-start', marginBottom: 16 * p}}>\n          <Text s={14 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n            Open PoliTo\n          </Text>\n          <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n            v{version.version}\n          </Text>\n        </View>\n        <View style={_styles.hr} />\n        {createButtons()}\n        <View style={_styles.hr} />\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <View\n            style={{\n              width: 24 * p,\n              height: 24 * p,\n              borderRadius: 24 * p,\n              backgroundColor: colors.accent100,\n              marginRight: 8 * p,\n            }}\n          />\n          <View style={{justifyContent: 'flex-start', flex: 1}}>\n            <Text\n              numberOfLines={1}\n              w=\"b\"\n              c={dark ? colors.gray100 : colors.gray800}\n              s={12 * p}>\n              {userInfo?.surname} {userInfo?.name}\n            </Text>\n            <Text\n              numberOfLines={1}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}\n              s={10 * p}>\n              {shortDegreeName}\n            </Text>\n          </View>\n          <PressableBase\n            onPress={() => {\n              handleLogout();\n            }}>\n            <TablerIcon name=\"logout\" size={24 * p} color={colors.accent300} />\n          </PressableBase>\n        </View>\n      </View>\n    </DrawerContentScrollView>\n  );\n};\n\nexport default Drawer;\n","import React, {FC, ReactNode, useEffect, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\nimport Text from './Text';\n\ninterface PressableCardProps {\n  dark: boolean;\n  title?: string;\n  description?: string;\n  onPress: () => any;\n  expanded?: boolean;\n  sideElement?: ReactNode; // Element to show right next to title and description\n  expandedElement?: ReactNode; // Element to show only when card expanded\n  children?: ReactNode; // Always shown\n}\n\nconst PressableCard: FC<PressableCardProps> = ({\n  dark,\n  title,\n  description,\n  onPress,\n  expanded,\n  sideElement,\n  expandedElement,\n  children,\n}) => {\n  const rotation = useSharedValue(0);\n  const scale = useSharedValue(0);\n  const expandedElementOpacity = useSharedValue(0);\n  const sideElementOpacity = useSharedValue(1);\n\n  useEffect(() => {\n    const condition = expanded && expandedElement;\n    rotation.value = withTiming(condition ? 90 : 0, {duration: 200});\n    scale.value = withTiming(condition ? 1 : 0, {duration: 200});\n    expandedElementOpacity.value = withTiming(condition ? 1 : 0, {\n      duration: 400,\n    });\n  }, [expanded, rotation, scale, expandedElementOpacity, expandedElement]);\n\n  useEffect(() => {\n    sideElementOpacity.value = withTiming(sideElement ? 1 : 0, {duration: 400});\n  }, [sideElement, sideElementOpacity]);\n\n  const animChevronStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        rotate: `${rotation.value}deg`,\n      },\n    ],\n  }));\n\n  const expandedElementStyle = useAnimatedStyle(() => ({\n    opacity: expandedElementOpacity.value,\n    maxHeight: `${scale.value * 100}%`,\n  }));\n\n  const sideElementStyle = useAnimatedStyle(() => ({\n    opacity: sideElementOpacity.value,\n  }));\n\n  const styles = useMemo(() => {\n    return StyleSheet.create({\n      button: {\n        paddingVertical: 8 * p,\n        paddingLeft: 16 * p,\n        paddingRight: 8 * p,\n        marginBottom: 16 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        borderRadius: 4 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <PressableBase\n      onPress={onPress}\n      android_ripple={{color: dark ? colors.gray400 : colors.gray500}}\n      style={styles.button}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: expandedElement ? 'flex-start' : 'center',\n        }}>\n        <View style={{flex: 1}}>\n          <View style={{flexDirection: 'row', alignItems: 'center'}}>\n            <View style={{flex: 4}}>\n              {title && (\n                <Text\n                  s={12 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  w=\"m\">\n                  {title}\n                </Text>\n              )}\n              {description && (\n                <Text\n                  s={10 * p}\n                  c={dark ? colors.gray300 : colors.gray600}\n                  w=\"r\">\n                  {description}\n                </Text>\n              )}\n            </View>\n            <Animated.View\n              style={[sideElementStyle, {flex: sideElement ? 1 : 0}]}>\n              {sideElement}\n            </Animated.View>\n            <View\n              style={{\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n              }}>\n              <View>\n                <Animated.View style={[animChevronStyle]}>\n                  <TablerIcon\n                    name=\"chevron-right\"\n                    color={dark ? colors.gray200 : colors.gray700}\n                    size={24 * p}\n                  />\n                </Animated.View>\n              </View>\n            </View>\n          </View>\n          <View style={{paddingRight: 8 * p}}>\n            {children}\n            <Animated.View style={[expandedElementStyle]}>\n              <View>{expandedElement}</View>\n            </Animated.View>\n          </View>\n        </View>\n      </View>\n    </PressableBase>\n  );\n\n  return (\n    <PressableBase\n      onPress={onPress}\n      android_ripple={{color: dark ? colors.gray400 : colors.gray500}}\n      style={styles.button}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: expandedElement ? 'flex-start' : 'center',\n        }}>\n        <View style={{flex: 1, backgroundColor: 'red'}}>\n          <View style={{flexDirection: 'row', alignItems: 'center'}}>\n            <View style={{flex: 4}}>\n              {title && (\n                <Text\n                  s={12 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  w=\"m\">\n                  {title}\n                </Text>\n              )}\n              {description && (\n                <Text\n                  s={10 * p}\n                  c={dark ? colors.gray300 : colors.gray600}\n                  w=\"r\">\n                  {description}\n                </Text>\n              )}\n            </View>\n            <Animated.View\n              style={[sideElementStyle, {flex: sideElement ? 1 : 0}]}>\n              {sideElement}\n            </Animated.View>\n          </View>\n          <View>\n            {children}\n            <Animated.View style={[expandedElementStyle]}>\n              <View>{expandedElement}</View>\n            </Animated.View>\n          </View>\n        </View>\n        <View\n          style={{\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n          }}>\n          <View>\n            <Animated.View style={[animChevronStyle]}>\n              <TablerIcon\n                name=\"chevron-right\"\n                color={dark ? colors.gray200 : colors.gray700}\n                size={24 * p}\n              />\n            </Animated.View>\n          </View>\n        </View>\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default PressableCard;\n","import i18next from 'i18next';\nimport moment from 'moment';\nimport {\n  barcode_url,\n  Booking,\n  BookingContext,\n  BookingSlot,\n  BookingSubcontext,\n} from 'open-polito-api/lib/booking';\nimport React, {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {\n  ActivityIndicator,\n  Image,\n  Pressable,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {STATUS} from '../store/status';\nimport {AppDispatch, RootState} from '../store/store';\nimport {getBookingContexts, getMyBookings, UserState} from '../store/userSlice';\nimport PressableCard from '../ui/core/PressableCard';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport NoContent from '../ui/NoContent';\nimport Screen from '../ui/Screen';\nimport Tabs from '../ui/Tabs';\n\n// TODO add booking capabilities\n\nconst BookingSubctx = ({\n  ctxId,\n  subctx,\n  language,\n  dark,\n}: {\n  ctxId: string;\n  subctx: BookingSubcontext;\n  language: string;\n  dark: boolean;\n}) => {\n  const {device} = useContext(DeviceContext);\n\n  const [state, setState] = useState<{\n    loaded: boolean;\n    expanded: boolean;\n    mounted: boolean;\n    slots: BookingSlot[];\n  }>({\n    loaded: false,\n    expanded: false,\n    mounted: true,\n    slots: [],\n  });\n\n  // TODO re-enable when booking feature added\n  // useEffect(() => {\n  //   const condition =\n  //     state.mounted &&\n  //     state.expanded &&\n  //     !state.loaded &&\n  //     state.slots.length === 0;\n  //   if (!condition) {\n  //     return;\n  //   }\n  //   (async () => {\n  //     const slots = await getSlots(device, ctxId, subctx.id);\n  //     state.mounted && setState(prev => ({...prev, loaded: true, slots}));\n  //   })();\n  // }, [state, device, ctxId, subctx]);\n\n  useEffect(() => {\n    return () => setState(prev => ({...prev, mounted: false}));\n  }, []);\n\n  return (\n    <View key={subctx.id}>\n      <Pressable\n        onPress={() => setState(prev => ({...prev, expanded: !prev.expanded}))}\n        android_ripple={{color: colors.lightGray}}\n        style={{paddingVertical: 8 * p}}>\n        <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n          {language === 'it' ? subctx.ita.name : subctx.eng.name}\n        </Text>\n      </Pressable>\n      <View></View>\n    </View>\n  );\n};\n\nconst BookingCtx = ({\n  ctx,\n  language,\n  dark,\n}: {\n  ctx: BookingContext;\n  language: string;\n  dark: boolean;\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <View>\n      <PressableCard\n        expanded={expanded}\n        dark={dark}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n        description={\n          language === 'it' ? ctx.ita.description : ctx.eng.description\n        }\n        title={language === 'it' ? ctx.ita.name : ctx.eng.name}\n        expandedElement={\n          ctx.subcontexts && ctx.subcontexts.length > 0 ? (\n            <View style={{marginTop: 16 * p}}>\n              {ctx.subcontexts?.map(subctx => (\n                <BookingSubctx\n                  dark={dark}\n                  key={subctx.id}\n                  subctx={subctx}\n                  language={language}\n                  ctxId={ctx.id}\n                />\n              ))}\n            </View>\n          ) : null\n        }\n      />\n    </View>\n  );\n};\n\ninterface BookingCardProps {\n  dark: boolean;\n  booking: Booking;\n  barcodeUrl: string;\n}\n\nconst BookingCard: FC<BookingCardProps> = ({dark, booking, barcodeUrl}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const sections = useMemo(() => {\n    return [\n      {\n        type: 'date',\n        label: moment(booking.start_time).format('ll'),\n        icon: 'calendar-time',\n      },\n      {\n        type: 'time',\n        label: `${moment(booking.start_time).format('LT')} - ${moment(\n          booking.end_time,\n        ).format('LT')}`,\n        icon: 'clock',\n      },\n    ];\n  }, [booking]);\n\n  return (\n    <PressableCard\n      title={\n        booking.course_id\n          ? `${booking.course_name} - ${booking.course_id}`\n          : booking.subcontext_name\n      }\n      description={booking.context_name}\n      expanded={expanded}\n      dark={dark}\n      sideElement={\n        !expanded && (\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{width: '100%', aspectRatio: 2.5, resizeMode: 'contain'}}\n            resizeMode=\"contain\"\n          />\n        )\n      }\n      expandedElement={\n        <View style={{flex: 1, marginTop: 16 * p}}>\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{\n              width: '100%',\n              aspectRatio: 2.5,\n              resizeMode: 'contain',\n            }}\n          />\n        </View>\n      }\n      onPress={() => setExpanded(prev => !prev)}>\n      <View style={{marginTop: 16 * p}}>\n        {sections.map((section, i) => (\n          <View\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'center',\n              },\n              i > 0 && {marginTop: 8 * p},\n            ]}>\n            <TablerIcon\n              name={section.icon}\n              size={16 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              style={{marginRight: 8 * p}}\n              s={10 * p}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}>\n              {section.label}\n            </Text>\n          </View>\n        ))}\n      </View>\n    </PressableCard>\n  );\n};\n\nconst Bookings = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {\n    userInfo,\n    getBookingsStatus,\n    getBookingContextsStatus,\n    bookings,\n    bookingContexts,\n  } = useSelector<RootState, UserState>(state => state.user);\n\n  const mounted = useRef(true);\n\n  const tabs = useMemo(() => {\n    return ['myBookings', 'newBooking'];\n  }, []);\n\n  const [state, setState] = useState<{\n    currentTab: string;\n    barcodeUrl: string;\n  }>({\n    currentTab: tabs[0],\n    barcodeUrl: '',\n  });\n\n  // Refreshing\n  const refreshing = useMemo(() => {\n    return (\n      getBookingsStatus.code === STATUS.PENDING ||\n      getBookingContextsStatus.code === STATUS.PENDING\n    );\n  }, [getBookingsStatus, getBookingContextsStatus]);\n\n  // Refresh\n  const refresh = useCallback(\n    (tab: 'myBookings' | 'newBooking') => {\n      if (tab === 'myBookings') {\n        dispatch(getMyBookings(device));\n      }\n      if (tab === 'newBooking') {\n        dispatch(getBookingContexts(device));\n      }\n    },\n    [device, dispatch],\n  );\n\n  // Load barcode\n  useEffect(() => {\n    if (state.barcodeUrl === '' && userInfo) {\n      setState(prev => ({\n        ...prev,\n        barcodeUrl: barcode_url(userInfo.current_id),\n      }));\n    }\n  }, [state.barcodeUrl, userInfo]);\n\n  // On tab change\n  useEffect(() => {\n    (async () => {\n      if (state.currentTab === tabs[0]) {\n        dispatch(getMyBookings(device));\n      } else if (state.currentTab === tabs[1]) {\n        dispatch(getBookingContexts(device));\n      }\n    })();\n  }, [state.currentTab, userInfo, device, dispatch, tabs]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('bookings')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i =>\n          setState(prev => ({\n            ...prev,\n            currentTab: tabs[i],\n          }))\n        }\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n      />\n      <View style={_styles.container}>\n        <ScrollView\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={() =>\n                refresh(\n                  state.currentTab === tabs[0] ? 'myBookings' : 'newBooking',\n                )\n              }\n            />\n          }>\n          {(state.currentTab === tabs[0] &&\n            getBookingsStatus.code === STATUS.PENDING) ||\n          (state.currentTab === tabs[1] &&\n            getBookingContextsStatus.code === STATUS.PENDING) ? (\n            <ActivityIndicator />\n          ) : state.currentTab === tabs[0] ? (\n            bookings.length === 0 ? (\n              <NoContent />\n            ) : (\n              bookings.map(booking => (\n                <BookingCard\n                  key={`${booking.context_id}${booking.subcontext_id}${booking.start_time}${booking.end_time}`}\n                  dark={dark}\n                  booking={booking}\n                  barcodeUrl={state.barcodeUrl}\n                />\n              ))\n            )\n          ) : bookingContexts.length === 0 ? (\n            <NoContent />\n          ) : (\n            bookingContexts.map(ctx => (\n              <BookingCtx\n                dark={dark}\n                key={ctx.id}\n                ctx={ctx}\n                language={i18next.language}\n              />\n            ))\n          )}\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Bookings;\n","import React, {ReactNode} from 'react';\nimport {View} from 'react-native';\n\nconst AnimatedGradientBase = ({\n  width,\n  height,\n  children,\n}: {\n  width: number;\n  height: number;\n  children: ReactNode;\n}) => {\n  return (\n    <View\n      style={{\n        width,\n        height,\n      }}>\n      {children}\n    </View>\n  );\n};\n\nexport default AnimatedGradientBase;\n","import React, {ReactNode, useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst LoaderBase = ({children}: {children: ReactNode}) => {\n  const [visible, setVisible] = useState(false);\n  const [mounted, setMounted] = useState(true);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: offset.value,\n      transform: [\n        {translateY: 8 - offset.value * 8},\n        {translateX: 8 - offset.value * 8},\n      ],\n    };\n  });\n\n  useEffect(() => {\n    (async () => {\n      setTimeout(() => {\n        mounted && setVisible(true);\n      }, 150);\n    })();\n    return () => {\n      setMounted(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (visible) {\n      offset.value = withTiming(1, {duration: 200});\n    }\n  }, [visible]);\n\n  return visible ? (\n    <Animated.View style={[animStyle]}>{children}</Animated.View>\n  ) : null;\n};\n\nexport default LoaderBase;\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport {Rect} from 'react-native-svg';\nimport {p} from '../../scaling';\nimport AnimatedGradientBase from './AnimatedGradientBase';\nimport LoaderBase from './LoaderBase';\n\nconst TimetableDayLoader = ({w, h}: {w: number; h: number}) => {\n  const [n] = useState(Math.ceil(Math.random() * 2));\n  const [yPositions] = useState(\n    Array.from({length: n}, (_, i) => (i + 1) * (3 + Math.random()) * h),\n  );\n\n  return (\n    <View style={{height: h * 10, position: 'absolute'}}>\n      <LoaderBase>\n        <AnimatedGradientBase width={w} height={h * 15}>\n          {Array.from({length: n}).map((_, i) => (\n            <Rect\n              key={i}\n              x={0}\n              y={yPositions[i]}\n              rx={4 * p}\n              ry={4 * p}\n              width={w - 4}\n              height={h * 2}\n            />\n          ))}\n        </AnimatedGradientBase>\n      </LoaderBase>\n    </View>\n  );\n};\n\nexport default TimetableDayLoader;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport moment from 'moment';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {p} from '../../scaling';\nimport {DeviceContext} from '../../context/Device';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\n\nconst TimetableEventModal: FC<{slot: TimetableSlot}> = ({slot}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const items: {icon: string; name: string}[] = useMemo(() => {\n    return [\n      {\n        icon: 'map-pin',\n        name: slot.room,\n      },\n      {\n        icon: 'align-justified',\n        name: slot.type,\n      },\n      {\n        icon: 'clock',\n        name:\n          moment(slot.start_time).format('HH:mm') +\n          ' - ' +\n          moment(slot.end_time).format('HH:mm') +\n          ' (' +\n          moment(slot.start_time).format('ll') +\n          ')',\n      },\n      {\n        icon: 'user',\n        name: slot.professor.surname + ' ' + slot.professor.name,\n      },\n    ];\n  }, [slot]);\n\n  return (\n    <ModalBase title={slot.course_name}>\n      {items.map((item, i) => (\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginTop: (i == 0 ? 0 : 8) * p,\n          }}>\n          <TablerIcon\n            name={item.icon}\n            size={16 * p}\n            color={dark ? colors.gray300 : colors.gray600}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n            {item.name}\n          </Text>\n        </View>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default TimetableEventModal;\n","import React, {useContext, useEffect, useState} from 'react';\nimport colors, {courseColors} from '../../colors';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {TouchableOpacity, View} from 'react-native';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableEventModal from '../modals/TimetableEventModal';\n\nconst TimetableEvent = ({\n  overlapGroup,\n  slot,\n  w,\n  h,\n  courseNames,\n  index,\n}: {\n  overlapGroup: TimetableSlot[];\n  slot: TimetableSlot;\n  w: number;\n  h: number;\n  courseNames: string[];\n  index: number;\n}) => {\n  const {setModal} = useContext(ModalContext);\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const textOpacity = useSharedValue(0);\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    opacity.value = 1;\n  }, []);\n\n  useEffect(() => {\n    offset.value = w;\n    if (w >= 60) {\n      setTimeout(() => {\n        textOpacity.value = 1;\n      }, 100);\n    }\n  }, [w]);\n\n  const animTextSectionStyle = useAnimatedStyle(() => {\n    return {opacity: withTiming(textOpacity.value, {duration: 500})};\n  });\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      width: withTiming(\n        overlapGroup.length > 0\n          ? offset.value / overlapGroup.length\n          : offset.value,\n        {duration: 250},\n      ),\n      left: withTiming(\n        overlapGroup.length > 0\n          ? index * (offset.value / overlapGroup.length)\n          : 0,\n        {duration: 250},\n      ),\n    };\n  });\n\n  return (\n    <Animated.View\n      onLayout={e => setWidth(e.nativeEvent.layout.width)}\n      style={[\n        {\n          overflow: 'hidden',\n          position: 'absolute',\n\n          top:\n            h +\n            (moment\n              .duration(\n                moment(slot.start_time).diff(\n                  moment(slot.start_time).set({\n                    h: 8,\n                    m: 0,\n                  }),\n                ),\n              )\n              .as('ms') /\n              (3600 * 1000)) *\n              h -\n            h / 2,\n\n          borderRadius: 4 * p,\n          backgroundColor:\n            courseColors[courseNames.findIndex(val => val == slot.course_name)],\n          height:\n            (moment.duration(slot.end_time - slot.start_time).as('ms') /\n              (3600 * 1000)) *\n            h,\n        },\n        animStyle,\n      ]}>\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          padding: 4 * p,\n        }}\n        onPress={() => {\n          setModal(<TimetableEventModal slot={slot} />);\n        }}>\n        {width >= 25 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <Text w={'r'} s={8 * p} c={colors.white} numberOfLines={2}>\n              {slot.course_name}\n            </Text>\n          </Animated.View>\n        ) : null}\n        {width >= 60 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <View\n              style={{\n                flexDirection: 'row',\n                marginTop: 8 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"map-pin\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.room}\n              </Text>\n            </View>\n            <View\n              style={{\n                opacity: opacity.value,\n                flexDirection: 'row',\n                marginTop: 4 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"list\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.type}\n              </Text>\n            </View>\n          </Animated.View>\n        ) : null}\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nexport default TimetableEvent;\n","import moment from 'moment';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {p} from '../../scaling';\nimport TimetableDayLoader from '../loaders/TimetableDayLoader';\nimport TimetableEvent from './TimetableEvent';\n\nconst TimetableDay = ({\n  fake = false,\n  day,\n  h,\n  courseNames,\n  config,\n  index = 0,\n}: {\n  fake?: boolean;\n  day: TimetableSlot[];\n  h: number;\n  courseNames: string[];\n  config: Configuration;\n  index?: number;\n}) => {\n  const [w, setW] = useState(0);\n\n  /**\n   * Array of slots sorted by priority\n   */\n  const sortedByPriority: TimetableSlot[] = useMemo(() => {\n    return [...day].sort(\n      (a, b) =>\n        config.timetablePriority.indexOf(b.course_name) -\n        config.timetablePriority.indexOf(a.course_name),\n    );\n  }, [config.timetablePriority, day]);\n\n  /**\n   * Array of arrays of overlapping events.\n   *\n   * @remarks\n   * Sub-array length equals number to divide width by.\n   * Show overlapping events in the order given by their sub-array index.\n   *\n   * @example\n   * [\"course a\", \"course b\", \"course c\"] means:\n   *\n   * <------------ WIDTH ------------->\n   * |----------|----------|----------|\n   * | course a | course b | course c |\n   * |----------|----------|----------|\n   */\n  const overlapping: TimetableSlot[][] = useMemo(() => {\n    if (config.timetableOverlap === 'priority') return []; // Only compute if splitting enabled\n    if (day.length === 0) return []; // Only compute when slots fetched\n\n    let _overlapping: TimetableSlot[][] = [];\n    // Go through slots and find overlaps\n    const start = moment(day[0].start_time).set({h: 8, m: 45});\n    for (let i = 0; i < 9; i++) {\n      start.add(90, 'm');\n      let _localOverlapping: TimetableSlot[] = [];\n      day.map(event => {\n        if (\n          event.start_time < start.toDate().getTime() &&\n          start.toDate().getTime() < event.end_time\n        ) {\n          _localOverlapping.push(event);\n        }\n      });\n      if (_localOverlapping.length > 1) _overlapping.push(_localOverlapping);\n    }\n    return _overlapping;\n  }, [day, config.timetableOverlap]);\n\n  /**\n   * Finds and returns overlap group of given slot\n   * @param slot The timetable slot\n   * @returns overlap group\n   */\n  const findOverlapGroup = (slot: TimetableSlot): TimetableSlot[] => {\n    let _group: TimetableSlot[] = [];\n    overlapping.forEach(group => {\n      if (group.includes(slot)) {\n        _group = group;\n        return;\n      }\n    });\n    return _group;\n  };\n\n  return (\n    <View\n      onLayout={e => {\n        setW(e.nativeEvent.layout.width);\n      }}\n      style={{\n        backgroundColor: colors.white,\n        flex: 1,\n        zIndex: 200,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        borderColor: colors.gray200,\n        marginHorizontal: 1 * p,\n      }}>\n      {fake ? (\n        <TimetableDayLoader w={w} h={h} />\n      ) : config.timetableOverlap === 'priority' ? (\n        // If priority enabled, show sorted by priority\n        sortedByPriority.map((slot, i) => {\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup: [], slot, w, h, courseNames, index: i}}\n            />\n          );\n        })\n      ) : (\n        // If priority not enabled\n        day.map((slot, i) => {\n          const overlapGroup = findOverlapGroup(slot);\n          const _index = overlapGroup.findIndex(_slot => slot === _slot);\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup, slot, w, h, courseNames, index: _index}}\n            />\n          );\n        })\n      )}\n    </View>\n  );\n};\n\nexport default TimetableDay;\n","import {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport TimetableDay from './TimetableDay';\nimport {Configuration} from '../../defaultConfig';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport {p} from '../../scaling';\n\nconst TimetableSlots = ({\n  loaded,\n  timetableDays,\n  layout,\n  selectedDay,\n}: {\n  loaded: boolean;\n  timetableDays: TimetableSlot[][];\n  layout: 'week' | 'day';\n  selectedDay: number;\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  const [courseNames, setCourseNames] = useState<string[]>(['', '', '']);\n\n  const days = useMemo<TimetableSlot[][]>(() => {\n    if (timetableDays.length === 1) return timetableDays;\n    return timetableDays.slice(1, 6);\n  }, [timetableDays]);\n\n  const getCourseNames = (): string[] => {\n    let _courseNames: string[] = [];\n    timetableDays.forEach(day => {\n      day.forEach(slot => {\n        if (!_courseNames.includes(slot.course_name)) {\n          _courseNames.push(slot.course_name);\n        }\n      });\n    });\n    return _courseNames.sort();\n  };\n\n  useEffect(() => {\n    setCourseNames(getCourseNames());\n  }, [days]);\n\n  /**\n   * When course names or slots change, if priority enabled, update the priority list\n   */\n  useEffect(() => {\n    if (!config.timetableOverlap || !config.timetablePriority) return;\n    let _list: string[] = [...config.timetablePriority];\n    let changed = false;\n    courseNames.forEach(courseName => {\n      if (\n        courseName.trim() !== '' &&\n        !config.timetablePriority.includes(courseName)\n      ) {\n        _list.push(courseName);\n        changed = true;\n      }\n    });\n    changed && dispatch(setConfig({...config, timetablePriority: _list}));\n  }, [days, courseNames, config, dispatch]);\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        flex: 1,\n        marginLeft: 32 * p,\n        marginRight: 16 * p,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n      }}>\n      {(layout === 'week' ? days : [days[selectedDay - 1]]).map(\n        (day, index) => (\n          <TimetableDay\n            fake={!loaded}\n            config={config}\n            key={index}\n            {...{day, h, index, courseNames}}\n          />\n        ),\n      )}\n    </View>\n  );\n};\n\nexport default TimetableSlots;\n","import moment, {Moment} from 'moment';\nimport React, {useEffect, useState} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\n\nconst TimetableGrid = ({\n  showLine,\n  dark,\n}: {\n  showLine: boolean;\n  dark: boolean;\n}) => {\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  // Used to update red line position\n  const [currentTime, setCurrentTime] = useState<Moment>(moment());\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [updateTimeout, setUpdateTimeout] = useState<any>(null);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      if (updateTimeout) clearTimeout(updateTimeout);\n      setMounted(false);\n    };\n  }, []);\n\n  /**\n   * Update time every 10 seconds, which will ensure red line is always in correct position\n   */\n  useEffect(() => {\n    setTimeout(() => {\n      mounted && setCurrentTime(moment());\n    }, 10000);\n  }, [currentTime, mounted]);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingLeft: 8 * p,\n        paddingRight: 16 * p,\n        paddingBottom: 16 * p,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n      }}>\n      {showLine ? (\n        <View\n          style={{\n            zIndex: 300,\n            height: 0,\n            borderTopColor: colors.red,\n            borderBottomColor: colors.red,\n            backgroundColor: colors.red,\n            borderTopWidth: 0.5 * p,\n            borderBottomWidth: 0.5 * p,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            transform: [\n              {\n                translateY:\n                  h +\n                  (moment\n                    .duration(\n                      currentTime.diff(\n                        moment().set({\n                          h: 8,\n                          m: 0,\n                        }),\n                      ),\n                    )\n                    .as('ms') /\n                    (3600 * 1000)) *\n                    h -\n                  h / 2,\n              },\n            ],\n          }}>\n          <View\n            style={{\n              backgroundColor: colors.red,\n              width: 8 * p,\n              height: 8 * p,\n              borderRadius: 16 * p,\n            }}></View>\n        </View>\n      ) : null}\n      {Array.from({length: 14}).map((_, index) => (\n        <View\n          key={index}\n          style={{\n            zIndex: 100,\n            width: '100%',\n            height: index == 0 ? h / 2 : h,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'flex-end',\n          }}>\n          <Text\n            s={8 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            w=\"r\"\n            style={{\n              transform: [{translateY: 4 * p}],\n            }}>\n            {`${8 + index}:00`}\n          </Text>\n          <View\n            style={{\n              flex: 1,\n              // width: '100%',\n              borderBottomWidth: 0.5 * p,\n              borderColor: dark ? colors.gray500 : colors.gray200,\n              marginLeft: 4 * p,\n\n              height: h,\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'flex-end',\n            }}\n          />\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default TimetableGrid;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nconst HorizontalIconSelector = ({\n  items,\n  label = '',\n  onValueChange,\n  defaultValue = items[0].value,\n  dark,\n}: {\n  items: {icon: string; value: string}[];\n  label?: string;\n  onValueChange: Function;\n  defaultValue?: string;\n  dark: boolean;\n}) => {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    onValueChange(value);\n  }, [value]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n      }}>\n      {label ? (\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginRight: 4 * p}}>\n          {label}\n        </Text>\n      ) : null}\n      <View\n        style={{\n          flexDirection: 'row',\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n          marginLeft: 4 * p,\n          borderRadius: 4 * p,\n        }}>\n        {items.map((item, i) => (\n          <PressableBase\n            onPress={() => {\n              setValue(item.value);\n            }}\n            key={item.value}\n            style={[\n              {\n                backgroundColor:\n                  item.value == value ? colors.accent300 : 'rgba(0,0,0,0)',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: 4 * p,\n              },\n              i === 0\n                ? {\n                    borderTopLeftRadius: 4 * p,\n                    borderBottomLeftRadius: 4 * p,\n                  }\n                : i === items.length - 1\n                ? {\n                    borderTopRightRadius: 4 * p,\n                    borderBottomRightRadius: 4 * p,\n                  }\n                : {},\n            ]}>\n            <TablerIcon\n              name={item.icon}\n              size={16 * p}\n              color={\n                item.value == value\n                  ? colors.gray50\n                  : dark\n                  ? colors.gray200\n                  : colors.gray700\n              }\n            />\n          </PressableBase>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default HorizontalIconSelector;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport DraggableFlatList, {\n  RenderItemParams,\n  ScaleDecorator,\n} from 'react-native-draggable-flatlist';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../colors';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst ListRank = ({\n  items,\n  callback,\n  disabled,\n  dark,\n}: {\n  items: Array<{label: string; value: string}>;\n  callback: (data: string[]) => void;\n  disabled: boolean;\n  dark: boolean;\n}) => {\n  const [data, setData] = useState(items);\n\n  useEffect(() => {\n    callback(data.map(item => item.label));\n  }, [data]);\n\n  const renderItem = ({\n    item,\n    index,\n    drag,\n  }: RenderItemParams<{label: string; value: string}>) => {\n    return (\n      <ScaleDecorator>\n        <TouchableOpacity\n          disabled={disabled}\n          onLongPress={drag}\n          onPressIn={drag}\n          onPress={drag}\n          style={{\n            paddingVertical: 4 * p,\n          }}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              marginLeft: 0 * p,\n              opacity: disabled ? 0.5 : 1,\n            }}>\n            <TablerIcon\n              name=\"grid-dots\"\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View style={{marginLeft: 8 * p}}>\n              <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n                {item.label}\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </ScaleDecorator>\n    );\n  };\n\n  return (\n    <GestureHandlerRootView>\n      <DraggableFlatList\n        onDragEnd={({data}) => setData(data)}\n        data={data}\n        keyExtractor={item => item.value}\n        renderItem={renderItem}\n      />\n    </GestureHandlerRootView>\n  );\n};\n\nexport default ListRank;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport ListRank from '../ListRank';\nimport SettingsItem, {SettingsItemProps} from '../../ui/SettingsItem';\nimport {DeviceContext} from '../../context/Device';\nimport ModalBase from './ModalBase';\nimport colors from '../../colors';\n\nconst TimetableOptionsModal = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const [showListRank, setShowListRank] = useState(false);\n\n  //  Ugly hack to make the modal actually show.\n  //  If I render the children elements immediately,\n  //  for some reason the whole modal won't render.\n  //  The problem seems to be caused by the draggable elements,\n  //  but for now this fix does the job.\n  useEffect(() => {\n    setTimeout(() => setShowListRank(true), 0);\n  }, []);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const rankItems = useMemo(() => {\n    return config.timetablePriority.map(item => {\n      return {label: item, value: item};\n    });\n  }, [config]);\n\n  const toggleOverlapMode = useCallback(() => {\n    const mode: Configuration['timetableOverlap'] =\n      config.timetableOverlap === 'split' ? 'priority' : 'split';\n    dispatch(setConfig({...config, timetableOverlap: mode}));\n  }, [config, dispatch]);\n\n  const timetableOptionsItems = useMemo<SettingsItemProps[]>(() => {\n    return [\n      {\n        name: t('timetablePriority'),\n        description: t('timetablePriorityDesc'),\n        icon: 'stack-2',\n        toggle: true,\n        toggleValue: config.timetableOverlap === 'priority',\n        settingsFunction: toggleOverlapMode,\n      },\n      {\n        name: t('timetablePriorityList'),\n        settingsFunction: () => {},\n        disabled: config.timetableOverlap !== 'priority',\n        children: (\n          <View>\n            <ListRank\n              dark={dark}\n              disabled={config.timetableOverlap !== 'priority'}\n              items={rankItems}\n              callback={data =>\n                dispatch(\n                  setConfig({\n                    ...config,\n                    timetablePriority: data.filter(d => d !== ''),\n                  }),\n                )\n              }\n            />\n          </View>\n        ),\n        paddingBottom: false,\n      },\n    ];\n  }, [config, dark, dispatch, rankItems, t, toggleOverlapMode]);\n\n  return (\n    <ModalBase title={t('timetableOptions')}>\n      <View>\n        {showListRank ? (\n          timetableOptionsItems.map(item => (\n            <SettingsItem key={item.name} {...item} />\n          ))\n        ) : (\n          <ActivityIndicator color={colors.accent300} />\n        )}\n      </View>\n    </ModalBase>\n  );\n};\n\nexport default TimetableOptionsModal;\n","import React, {useContext, useMemo} from 'react';\nimport {Platform, Pressable, View} from 'react-native';\nimport colors from '../../colors';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {useTranslation} from 'react-i18next';\nimport Toggles from '../../ui/HorizontalIconSelector';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Text from '../../ui/core/Text';\nimport {DeviceContext} from '../../context/Device';\nimport {p} from '../../scaling';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableOptionsModal from '../modals/TimetableOptionsModal';\n\nconst showDatePicker = (callback: (date: number | undefined) => any) => {\n  DateTimePickerAndroid.open({\n    mode: 'date',\n    value: new Date(),\n    onChange: date => callback(date.nativeEvent.timestamp),\n  });\n};\n\nconst TimetableHeader = ({\n  selectedDay = null,\n  timetableDays,\n  weekStartDate,\n  onLayoutChanged,\n  onDayChanged,\n  onWeekStartDateChanged,\n}: {\n  selectedDay: number | null;\n  timetableDays: TimetableSlot[][];\n  weekStartDate: Date | null;\n  onLayoutChanged: Function;\n  onDayChanged: Function;\n  onWeekStartDateChanged: Function;\n}) => {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const _onLayoutChanged = (value: string) => {\n    onLayoutChanged(value);\n  };\n\n  const _onDayChanged = (value: number) => {\n    onDayChanged(value);\n  };\n\n  const _onWeekStartDateChanged = (value: Date) => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(1, {duration: 250}),\n    );\n    onWeekStartDateChanged(value);\n  };\n\n  const opacity = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {opacity: opacity.value};\n  });\n\n  const headerTitle: string = useMemo(() => {\n    const weekStartMoment = moment(weekStartDate);\n    const weekEndMoment = moment(weekStartDate).add(4, 'day');\n    return weekStartDate\n      ? weekStartDate.getTime() == moment().startOf('w').toDate().getTime()\n        ? t('thisWeek')\n        : `${weekStartMoment.get('date')} ${\n            weekStartMoment.get('month') != weekEndMoment.get('month')\n              ? weekStartMoment.format('MMM ')\n              : ''\n          }${\n            weekStartMoment.get('year') != weekEndMoment.get('year')\n              ? weekStartMoment.format('YYYY ')\n              : ''\n          }- ${weekEndMoment.format('D MMM YYYY')}`\n      : t('thisWeek');\n  }, [weekStartDate, t]);\n\n  return (\n    <View style={{borderBottomWidth: 1 * p, borderBottomColor: colors.gray200}}>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        {Platform.OS === 'android' ? (\n          <Button\n            secondary\n            small\n            text={t('jumpToDate')}\n            icon=\"chevrons-right\"\n            onPress={() =>\n              showDatePicker(date => {\n                if (!date) return;\n                _onWeekStartDateChanged(new Date(date));\n              })\n            }\n          />\n        ) : (\n          <View />\n        )}\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <Toggles\n            defaultValue=\"week\"\n            onValueChange={(value: string) => {\n              _onLayoutChanged(value);\n            }}\n            label=\"Layout:\"\n            items={[\n              {icon: 'layout-rows', value: 'day'},\n              {icon: 'layout-columns', value: 'week'},\n            ]}\n            dark={dark}\n          />\n          <TouchableOpacity style={{marginLeft: 24 * p}}>\n            <TablerIcon\n              onPress={() => setModal(<TimetableOptionsModal />)}\n              name=\"settings\"\n              size={20 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(\n              moment(weekStartDate).subtract(1, 'w').toDate(),\n            )\n          }>\n          <TablerIcon\n            name=\"arrow-left\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n        <Animated.View style={[animStyle]}>\n          <Text c={dark ? colors.gray100 : colors.gray800} s={12 * p} w=\"m\">\n            {headerTitle}\n          </Text>\n        </Animated.View>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(moment(weekStartDate).add(1, 'w').toDate())\n          }>\n          <TablerIcon\n            name=\"arrow-right\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n      </View>\n      <View\n        style={{\n          // ...styles.withHorizontalPadding,\n          marginLeft: 12,\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'space-around',\n          paddingBottom: 12,\n        }}>\n        {timetableDays.slice(1, 6).map((day, index) => (\n          <Pressable\n            onPress={() => {\n              _onDayChanged(index + 1);\n            }}\n            key={index}\n            style={{\n              opacity: weekStartDate ? 1 : 0,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              paddingHorizontal: 12,\n              paddingVertical: 4,\n              borderRadius: 4,\n              backgroundColor:\n                selectedDay == index + 1\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray700\n                  : colors.gray200,\n            }}>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').format('ddd')\n                : ''}\n            </Text>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              key={index}>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').date()\n                : ''}\n            </Text>\n          </Pressable>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default TimetableHeader;\n","import moment from 'moment';\nimport {getTimetable, TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, View} from 'react-native';\nimport {DeviceContext} from '../context/Device';\nimport TimetableSlots from '../components/timetable/TimetableSlots';\nimport TimetableGrid from '../components/timetable/TimetableGrid';\nimport TimetableHeader from '../components/timetable/TimetableHeader';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\n\nconst Timetable = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n\n  const [loaded, setLoaded] = useState(false);\n  const [weekStartDate, setWeekStartDate] = useState<Date | null>(null);\n\n  const [slots, setSlots] = useState<TimetableSlot[]>([]);\n\n  /**\n   * When slots change, update {@link timetableDays}\n   */\n  const timetableDays = useMemo(() => {\n    let _timetableDays: TimetableSlot[][] = Array.from({length: 7}, () => []);\n    slots.forEach(slot => {\n      _timetableDays[moment(slot.start_time).day()].push(slot);\n    });\n    return _timetableDays;\n  }, [slots]);\n\n  const [layout, setLayout] = useState<'day' | 'week'>('day');\n\n  const [mounted, setMounted] = useState(true);\n\n  const [selectedDay, setSelectedDay] = useState(1); // Today's day index. TODO display first day of week when week is not current\n\n  const [fetchTimer, setFetchTimer] = useState<any>(null);\n  const [doUpdate, setDoUpdate] = useState<boolean>(false); // Flip it to trigger effect\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: withTiming(opacity.value, {duration: 500}),\n      transform: [{translateX: offset.value}],\n    };\n  });\n\n  /**\n   * Controls the \"scrolling\" effect animation\n   * @param direction left or right\n   */\n  const controlTransition = (direction: 'l' | 'r') => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(0, {duration: 500}),\n      withTiming(1, {duration: 250}),\n    );\n    offset.value =\n      direction === 'l'\n        ? withSequence(\n            withTiming(32, {duration: 750}),\n            withTiming(-32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          )\n        : withSequence(\n            withTiming(-32, {duration: 750}),\n            withTiming(32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          );\n  };\n\n  /**\n   * Get slots and set {@link weekStartDate}\n   */\n  useEffect(() => {\n    (async () => {\n      if (!weekStartDate) controlTransition('r');\n      if (fetchTimer) clearTimeout(fetchTimer);\n      setFetchTimer(\n        setTimeout(async () => {\n          setLoaded(false);\n          let slots: TimetableSlot[] = [];\n          setSlots([]);\n          try {\n            slots = await getTimetable(device, weekStartDate ?? new Date());\n            setLoaded(true);\n          } catch (e) {\n            // console.log(e);\n          } finally {\n            if (!weekStartDate) {\n              const date = moment().startOf('isoWeek').toDate();\n              mounted && setWeekStartDate(date);\n            }\n            setSlots(slots);\n          }\n        }, 250),\n      );\n    })();\n    return () => {\n      clearTimeout(fetchTimer);\n      setMounted(false);\n    };\n  }, [doUpdate]);\n\n  /**\n   * Whether to show red line\n   */\n  const showLine: boolean = useMemo(() => {\n    return (\n      (layout === 'week' &&\n        weekStartDate?.getTime() ===\n          moment().startOf('isoWeek').toDate().getTime()) ||\n      (layout === 'day' &&\n        moment(weekStartDate)\n          .add(selectedDay - 1, 'days')\n          .toDate()\n          .getTime() === moment().startOf('day').toDate().getTime())\n    );\n  }, [weekStartDate, selectedDay, layout]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('timetable')} />\n      <View\n        style={{\n          flex: 1,\n          paddingTop: 24 * p,\n        }}>\n        <View style={{paddingHorizontal: 16 * p}}>\n          <TimetableHeader\n            selectedDay={layout === 'week' ? null : selectedDay}\n            onDayChanged={(value: number) => {\n              setSelectedDay(value);\n            }}\n            onLayoutChanged={(value: 'day' | 'week') => {\n              setLayout(value);\n            }}\n            weekStartDate={weekStartDate}\n            onWeekStartDateChanged={(value: Date) => {\n              if (weekStartDate && value.getTime() < weekStartDate.getTime()) {\n                controlTransition('l');\n              } else {\n                controlTransition('r');\n              }\n              setWeekStartDate(moment(value).startOf('isoWeek').toDate());\n              setDoUpdate(!doUpdate);\n            }}\n            timetableDays={timetableDays}\n          />\n        </View>\n        <ScrollView style={{flex: 1}}>\n          <Animated.View style={[animStyle, {flex: 1}]}>\n            <TimetableGrid showLine={showLine} dark={dark} />\n            <TimetableSlots\n              loaded={loaded}\n              timetableDays={timetableDays}\n              layout={layout}\n              selectedDay={selectedDay}\n            />\n          </Animated.View>\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Timetable;\n","import React, {ReactNode, useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport Svg, {Circle} from 'react-native-svg';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst ProgressCircle = ({\n  label, // Optional label to display instead of the value\n  value,\n  max,\n  radius,\n  strokeWidth = 4 * p,\n  fontSize,\n  backgroundColor,\n  dark,\n  children,\n}: {\n  label?: string | null;\n  value: number | string;\n  max: number;\n  radius: number;\n  strokeWidth?: number;\n  fontSize?: number;\n  backgroundColor?: Color;\n  dark: boolean;\n  children?: ReactNode;\n}) => {\n  const circ = 2 * Math.PI * radius;\n\n  const _value = useMemo(() => {\n    return value <= max ? value : max; // Avoid going over max value\n  }, [value, max]);\n\n  return (\n    <View style={{position: 'relative'}}>\n      <Svg\n        width={2 * (radius + strokeWidth)}\n        height={2 * (radius + strokeWidth)}>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={backgroundColor || 'transparent'}\n          stroke={dark ? colors.gray700 : colors.gray200}\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={'transparent'}\n          stroke={colors.accent300}\n          strokeDasharray={circ}\n          strokeDashoffset={\n            typeof _value === 'number'\n              ? ((100 - (100 * _value) / max) * circ) / 100\n              : 0\n          }\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n      </Svg>\n      <View\n        style={{\n          position: 'absolute',\n          width: 2 * (radius + strokeWidth),\n          height: 2 * (radius + strokeWidth),\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text\n          s={\n            fontSize || (label || typeof _value === 'string' ? 10 * p : 16 * p)\n          }\n          c={dark ? colors.gray100 : colors.gray800}\n          w=\"b\">\n          {label || _value}\n        </Text>\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default ProgressCircle;\n","import moment from 'moment';\nimport {PermanentMark} from 'open-polito-api/lib/courses';\nimport React, {useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useWindowDimensions, View} from 'react-native';\nimport LineChart, {\n  LineChartData,\n} from 'react-native-chart-kit/dist/line-chart/LineChart';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\n\nconst Progress = ({marks, dark}: {marks: PermanentMark[]; dark: boolean}) => {\n  const {t} = useTranslation();\n  const width = useWindowDimensions().width;\n\n  /**\n   * Marks sorted by date ascending and filtered to be at most 1 year ago\n   */\n  const sorted_marks = useMemo(() => {\n    return [\n      ...marks.filter(\n        mark =>\n          parseInt(mark.mark) &&\n          moment.duration(Date.now() - mark.date).asDays() <= 365,\n      ),\n    ].sort((mark1, mark2) => mark1.date - mark2.date);\n  }, [marks]);\n\n  /**\n   * Weighted averages over time\n   */\n  const avgs = useMemo(() => {\n    let _avgs = new Array<number>(sorted_marks.length);\n    let weights = 0; // Cumulative weight counter\n\n    for (let i = 0; i < sorted_marks.length; i++) {\n      if (i == 0) {\n        weights += sorted_marks[i].num_credits;\n        _avgs[i] = parseInt(sorted_marks[i].mark) || 0;\n      } else {\n        _avgs[i] =\n          (_avgs[i - 1] * weights +\n            (parseInt(sorted_marks[i].mark) || 0) *\n              sorted_marks[i].num_credits) /\n          (weights + sorted_marks[i].num_credits);\n        weights += sorted_marks[i].num_credits;\n      }\n    }\n\n    return _avgs;\n  }, [sorted_marks]);\n\n  /**\n   * Data for the chart\n   */\n  const data = useMemo<LineChartData>(\n    () => ({\n      labels: sorted_marks.map(mark => moment(mark.date).format('MMM D')),\n      datasets: [\n        {\n          data: avgs,\n          color: () => colors.accent300,\n          strokeWidth: 2 * p,\n        },\n      ],\n      legend: [t('weightedAverage')],\n    }),\n    [sorted_marks, avgs, t],\n  );\n\n  return sorted_marks.length == 0 ? (\n    <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n      <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n        You'll see your progress when you get at least 1 permament mark.\n      </Text>\n    </View>\n  ) : (\n    <LineChart\n      data={data}\n      width={width}\n      height={220}\n      yAxisInterval={1}\n      chartConfig={{\n        backgroundColor: '#e26a00',\n        backgroundGradientFrom: colors.gray900,\n        backgroundGradientTo: colors.gray700,\n        decimalPlaces: 2,\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        style: {\n          borderRadius: 16,\n        },\n        propsForDots: {\n          r: '6',\n          strokeWidth: '2',\n          stroke: colors.accent300,\n        },\n      }}\n      style={{\n        borderRadius: 4 * p,\n        transform: [{translateX: -16 * p}],\n      }}\n    />\n  );\n};\n\nexport default Progress;\n","import {PermanentMark, ProvisionalMark} from 'open-polito-api/lib/courses';\nimport React, {useContext, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {DeviceContext} from '../context/Device';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport Section from '../ui/Section';\nimport NoContent from '../ui/NoContent';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport moment from 'moment';\nimport i18next from 'i18next';\nimport ProgressCircle from '../ui/ProgressCircle';\nimport Progress from '../components/exams/Progress';\nimport openURL from '../utils/openUrl';\n\nconst tabs = ['overview', 'permanentMarks', 'provisionalMarks'];\n\nconst get_avg = (marks: PermanentMark[]) => {\n  const _marks = marks.filter(mark => !!parseInt(mark.mark || ''));\n\n  const total_credits = _marks.reduce((acc, mark) => {\n    return acc + mark.num_credits;\n  }, 0);\n\n  return parseFloat(\n    (\n      _marks.reduce((acc, mark) => {\n        return acc + parseInt(mark.mark) * mark.num_credits;\n      }, 0) / total_credits\n    ).toFixed(2),\n  );\n};\n\nconst Exams = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const {marks} = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const [tab, setTab] = useState<string>(tabs[0]);\n\n  const filteredMarks = useMemo<(PermanentMark | ProvisionalMark)[]>(() => {\n    if (tab == tabs[1]) return marks.permanent;\n    if (tab == tabs[2]) return marks.provisional;\n    return [];\n  }, [marks, tab]);\n\n  const avg = useMemo(() => get_avg(marks.permanent), [marks]);\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  return (\n    <Screen>\n      <Header title={t('exams')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n        onChange={idx => setTab(tabs[idx])}\n      />\n\n      <View style={styles.container}>\n        {tab == tabs[2] ? (\n          <View style={styles.paddingHorizontal}>\n            <TouchableOpacity\n              onPress={async () =>\n                await openURL('https://didattica.polito.it/img/RE_stati.jpg')\n              }\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 16 * p,\n              }}>\n              <TablerIcon\n                name=\"help\"\n                size={12 * p}\n                color={dark ? colors.gray200 : colors.gray700}\n                style={{marginRight: 8 * p}}\n              />\n              <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n                {t('statusCodeHelp')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : null}\n        {tab == tabs[0] ? (\n          <View style={styles.list}>\n            <AvgWidget avg={avg} dark={dark} />\n            <View\n              style={{\n                height: 1 * p,\n                backgroundColor: colors.gray500,\n                marginVertical: 24 * p,\n              }}\n            />\n            <Section title={t('progressOverTime')} dark={dark}>\n              <View>\n                <Progress marks={marks.permanent || []} dark={dark} />\n              </View>\n            </Section>\n          </View>\n        ) : (\n          <FlatList\n            contentContainerStyle={styles.list}\n            data={filteredMarks}\n            keyExtractor={item => item.date + item.name}\n            renderItem={({item}) => (\n              <MarkWidget\n                mark={\n                  tab == tabs[1]\n                    ? (item as PermanentMark)\n                    : (item as ProvisionalMark)\n                }\n                provisional={tab == tabs[2]}\n                dark={dark}\n              />\n            )}\n            ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n            ListEmptyComponent={<NoContent />}\n          />\n        )}\n      </View>\n    </Screen>\n  );\n};\n\nconst AvgWidget = ({avg, dark}: {avg: number; dark: boolean}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View style={{flexDirection: 'row', alignItems: 'center'}}>\n      <ProgressCircle\n        strokeWidth={8 * p}\n        radius={30 * p}\n        value={avg}\n        dark={dark}\n        max={30}\n      />\n      <View style={{marginLeft: 16 * p}}>\n        <Text\n          s={16 * p}\n          w=\"m\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginBottom: 8 * p}}>\n          {t('yourAverageMark')}*\n        </Text>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray300 : colors.gray600}>\n          *{t('yourAverageMarkNotice')}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst MarkWidget = ({\n  mark,\n  provisional,\n  dark,\n}: {\n  mark: PermanentMark | ProvisionalMark;\n  provisional: boolean;\n  dark: boolean;\n}) => {\n  const fields = useMemo(\n    () => getFields(mark, provisional, dark),\n    [mark, provisional, dark],\n  );\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        padding: 16 * p,\n        borderRadius: 4 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        alignItems: 'flex-start',\n      }}>\n      <View style={{flexDirection: 'column', flex: 1}}>\n        <View style={{flexDirection: 'row'}}>\n          {provisional ? (\n            <View\n              style={{\n                width: 16 * p,\n                height: 16 * p,\n                borderRadius: 16 * p,\n                marginRight: 8 * p,\n                backgroundColor: colors.gray200,\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}>\n              <Text s={10} w=\"b\" c={colors.gray900}>\n                {(mark as ProvisionalMark).status}\n              </Text>\n            </View>\n          ) : null}\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {mark.name}\n          </Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: provisional ? 'column' : 'row',\n            marginTop: 16 * p,\n          }}>\n          {fields}\n        </View>\n      </View>\n      {parseInt(mark.mark!) ? (\n        <ProgressCircle\n          radius={20 * p}\n          value={parseInt(mark.mark!)}\n          max={30}\n          dark={dark}>\n          {(mark.mark?.toLowerCase() === '30 e lode' ||\n            parseInt(mark.mark!) > 30) && (\n            <>\n              <Text\n                style={{marginTop: -4 * p}} // make the text fit better\n                s={8 * p}\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"b\">\n                LODE\n              </Text>\n            </>\n          )}\n        </ProgressCircle>\n      ) : (\n        <View\n          style={[\n            {\n              padding: 8 * p,\n              borderRadius: 4 * p,\n              backgroundColor: colors.accent300,\n            },\n            !mark.mark ||\n            (mark as ProvisionalMark).failed ||\n            (mark as ProvisionalMark).absent\n              ? {\n                  backgroundColor: colors.red,\n                }\n              : null,\n          ]}>\n          {(mark as ProvisionalMark).failed ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examFailed')}\n            </Text>\n          ) : null}\n          {(mark as ProvisionalMark).absent ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examAbsent')}\n            </Text>\n          ) : null}\n          {mark.mark ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {mark.mark}\n            </Text>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst getFields = (\n  mark: PermanentMark | ProvisionalMark,\n  provisional: boolean,\n  dark: boolean,\n) => {\n  const perm_fields = ['date', 'credits'];\n  const prov_fields = ['date', 'message'];\n\n  const fields = provisional ? prov_fields : perm_fields;\n\n  let icons: string[] = [];\n  let values: string[] = [];\n\n  fields.forEach(name => {\n    switch (name) {\n      case 'date':\n        icons.push('calendar-time');\n        values.push(moment(mark.date).format('ll'));\n        break;\n      case 'credits':\n        icons.push('north-star');\n        values.push(\n          (mark as PermanentMark).num_credits + ' ' + i18next.t('credits'),\n        );\n        break;\n      case 'message':\n        icons.push('message');\n        values.push((mark as ProvisionalMark).message || '');\n        break;\n      default:\n        icons.push('');\n        values.push('');\n        break;\n    }\n  });\n\n  return fields.map((name, i) => (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          alignItems: name == 'message' ? 'flex-start' : 'center',\n          flex: 1,\n        },\n        provisional && i > 0 ? {marginTop: 8 * p} : {},\n      ]}>\n      <TablerIcon\n        name={icons[i]}\n        size={16 * p}\n        color={dark ? colors.gray200 : colors.gray700}\n        style={{marginRight: 8 * p}}\n      />\n      <Text\n        style={{marginRight: 8 * p}}\n        s={10 * p}\n        w=\"r\"\n        c={dark ? colors.gray200 : colors.gray700}>\n        {values[i] || ''}\n      </Text>\n    </View>\n  ));\n};\n\nexport default Exams;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {bookExamSession, ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {Device} from 'open-polito-api/lib/device';\nimport {DeviceContext} from '../../context/Device';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\n\nconst bookExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await bookExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamBookedToastMessage'\n              : 'examsExamBookingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsBookExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('confirmExamBooking')}\n      onConfirm={() => bookExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('confirmExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsBookExamModal;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport colors from '../../colors';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {Device} from 'open-polito-api/lib/device';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {cancelExamSession} from 'open-polito-api/lib/exam_sessions';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\nimport {DeviceContext} from '../../context/Device';\n\nconst cancelExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await cancelExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamCanceledToastMessage'\n              : 'examsExamCancelingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsCancelExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('cancelExamBooking')}\n      accentColor={colors.red}\n      icon=\"alert-triangle\"\n      onConfirm={() => cancelExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('cancelExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsCancelExamModal;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, RefreshControl, TouchableOpacity, View} from 'react-native';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport colors from '../colors';\nimport moment from 'moment';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {ExamsState, getExams} from '../store/examsSlice';\nimport {STATUS} from '../store/status';\nimport {DeviceContext} from '../context/Device';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport NoContent from '../ui/NoContent';\nimport ExamsBookExamModal from '../components/modals/ExamsBookExamModal';\nimport ExamsCancelExamModal from '../components/modals/ExamsCancelExamModal';\nimport {ModalContext} from '../context/ModalProvider';\nimport {getLanguageCode} from '../utils/l10n';\n\nconst isExamBooked = (examSession: ExamSession): boolean => {\n  return examSession.user_is_signed_up;\n};\n\nconst isExamAvailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id === 0;\n};\n\nconst isExamUnavailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id !== 0;\n};\n\nconst tabs = ['allExams', 'myBookings', 'availableToBook', 'unavailableExams'];\n\nexport default function ExamSessions() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {dark, device} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const {exams, getExamsStatus} = useSelector<RootState, ExamsState>(\n    state => state.exams,\n  );\n\n  const [tab, setTab] = useState(tabs[0]);\n\n  const [errorMsgLanguage, setErrorMsgLanguage] = useState('en');\n\n  // Initial setup\n  useEffect(() => {\n    if (\n      getExamsStatus.code === STATUS.IDLE ||\n      getExamsStatus.code === STATUS.ERROR\n    ) {\n      dispatch(getExams(device));\n    }\n    (async () => {\n      // Set language for error messages\n      switch (getLanguageCode()) {\n        case 'en':\n          setErrorMsgLanguage('en');\n          break;\n        case 'it':\n          setErrorMsgLanguage('it');\n          break;\n        default:\n          setErrorMsgLanguage('en');\n          break;\n      }\n    })();\n  }, [device, dispatch, getExamsStatus.code]);\n\n  /**\n   * Refresh exams\n   */\n  const refresh = useMemo(() => {\n    if (getExamsStatus.code !== STATUS.PENDING) {\n      dispatch(getExams(device));\n    }\n  }, [getExamsStatus, device, dispatch]);\n\n  // If tab or exams change, re-filter the exam sessions based on the active tab\n  const filteredSessions = useMemo(() => {\n    switch (tab) {\n      case tabs[0]:\n        return exams;\n      case tabs[1]:\n        return exams.filter(e => isExamBooked(e));\n      case tabs[2]:\n        return exams.filter(e => isExamAvailable(e));\n      case tabs[3]:\n        return exams.filter(e => isExamUnavailable(e));\n      default:\n        return [];\n    }\n  }, [tab, exams]);\n\n  const buildField = (type: string, e: ExamSession) => {\n    const icon =\n      type === 'date'\n        ? 'calendar-time'\n        : type === 'course'\n        ? 'grid-pattern'\n        : type === 'type'\n        ? 'writing'\n        : type === 'deadline'\n        ? 'alert-triangle'\n        : type === 'rooms'\n        ? 'map-pin'\n        : 'user-circle';\n    const text =\n      type === 'date'\n        ? `${moment(e.date).format('lll')} (${moment(e.date).fromNow()})`\n        : type === 'course'\n        ? e.course_id\n        : type === 'type'\n        ? e.type\n        : type === 'deadline'\n        ? `${t('bookingDeadline')}: ${moment(e.signup_deadline).format(\n            'lll',\n          )} (${moment(e.signup_deadline).fromNow()})`\n        : type === 'rooms'\n        ? e.rooms.join(', ')\n        : '(coming soon)';\n    return (\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n        <Text\n          numberOfLines={1}\n          style={{marginRight: 8 * p}}\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const examSessionCard = (examSession: ExamSession) => (\n    <View style={{flexDirection: 'row'}}>\n      <View\n        style={{\n          flexDirection: 'column',\n          flex: 1,\n          padding: 16 * p,\n          paddingRight: 8 * p,\n          paddingBottom: 8 * p,\n          borderTopLeftRadius: 4 * p,\n          borderBottomLeftRadius: 4 * p,\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n        }}>\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <TablerIcon\n            name={\n              examSession.user_is_signed_up\n                ? 'circle-check'\n                : examSession.error.id === 0\n                ? 'circle'\n                : 'circle-off'\n            }\n            color={\n              examSession.user_is_signed_up\n                ? colors.green\n                : examSession.error.id === 0\n                ? colors.accent200\n                : colors.red\n            }\n            size={24 * p}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {examSession.exam_name}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: 'column',\n            marginTop: 16 * p,\n          }}>\n          {['course', 'date', 'deadline', 'rooms'].map(field =>\n            buildField(field, examSession),\n          )}\n        </View>\n        {examSession.error.id !== 0 &&\n        (examSession.error.eng !== '' || examSession.error.ita !== '') ? (\n          <Text s={10 * p} w=\"r\" c={colors.red} style={{marginVertical: 8 * p}}>\n            {errorMsgLanguage === 'it'\n              ? examSession.error.ita\n              : examSession.error.eng}\n          </Text>\n        ) : null}\n      </View>\n      <View\n        style={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          borderTopRightRadius: 4 * p,\n          borderBottomRightRadius: 4 * p,\n          backgroundColor: dark ? colors.gray600 : colors.gray300,\n        }}>\n        {isExamAvailable(examSession) || isExamBooked(examSession) ? (\n          <TouchableOpacity\n            onPress={() =>\n              setModal(\n                isExamAvailable(examSession) ? (\n                  <ExamsBookExamModal examSession={examSession} />\n                ) : (\n                  <ExamsCancelExamModal examSession={examSession} />\n                ),\n              )\n            }>\n            <View\n              style={{\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 8 * p,\n              }}>\n              <View style={{marginBottom: 4 * p}}>\n                <TablerIcon\n                  name={\n                    isExamAvailable(examSession) ? 'circle-plus' : 'circle-x'\n                  }\n                  color={\n                    isExamAvailable(examSession) ? colors.accent300 : colors.red\n                  }\n                  size={20 * p}\n                />\n              </View>\n              <Text\n                s={10 * p}\n                w=\"m\"\n                c={\n                  isExamAvailable(examSession) ? colors.accent300 : colors.red\n                }>\n                {t(isExamAvailable(examSession) ? 'bookVerb' : 'cancel')}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    </View>\n  );\n\n  return (\n    <Screen>\n      <Header title={t('examSessions')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n        onChange={idx => setTab(tabs[idx])}\n      />\n      <FlatList\n        contentContainerStyle={{\n          paddingTop: 24 * p,\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        }}\n        data={filteredSessions}\n        keyExtractor={item => item.session_id + item.course_id + item.date}\n        renderItem={({item}) => examSessionCard(item)}\n        ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n        ListEmptyComponent={<NoContent />}\n        refreshing={getExamsStatus.code == STATUS.PENDING}\n        refreshControl={\n          <RefreshControl\n            refreshing={getExamsStatus.code == STATUS.PENDING}\n            onRefresh={refresh}\n          />\n        }\n      />\n    </Screen>\n  );\n}\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Maps = () => {\n  return <View></View>;\n};\n\nexport default Maps;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Classrooms = () => {\n  return <View></View>;\n};\n\nexport default Classrooms;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst People = () => {\n  return <View></View>;\n};\n\nexport default People;\n","import React, {useCallback, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport PressableCard from '../ui/core/PressableCard';\n\nexport default function Courses({navigation}) {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const gotoCourse = useCallback(\n    (course: CourseState) => {\n      navigation.navigate('Course', {\n        courseCode: course.basicInfo.code + course.basicInfo.name,\n      });\n    },\n    [navigation],\n  );\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('courses')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          {courses\n            .filter(course => course.isMain)\n            .map(mainCourse => (\n              <PressableCard\n                dark={dark}\n                onPress={() => gotoCourse(mainCourse)}\n                key={mainCourse.basicInfo.code + mainCourse.basicInfo.name}\n                title={mainCourse.basicInfo.name}\n              />\n            ))}\n          {courses.filter(course => !course.isMain).length > 0 ? (\n            <Section\n              dark={dark}\n              title={t('otherCourses')}\n              style={{marginTop: 8}}>\n              {courses\n                .filter(course => !course.isMain)\n                .map(secondaryCourse => (\n                  <PressableCard\n                    dark={dark}\n                    onPress={() => gotoCourse(secondaryCourse)}\n                    key={\n                      secondaryCourse.basicInfo.code +\n                      secondaryCourse.basicInfo.name\n                    }\n                    title={secondaryCourse.basicInfo.name}\n                  />\n                ))}\n            </Section>\n          ) : null}\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n}\n","import React, {FC, useEffect} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\n\ninterface CheckboxProps {\n  selected: boolean;\n  onChange: (value: boolean) => any;\n}\n\nconst Checkbox: FC<CheckboxProps> = ({selected, onChange}) => {\n  const offset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 20 * p * offset.value,\n    height: 20 * p * offset.value,\n    borderRadius: 4 * p,\n    backgroundColor: colors.accent300,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }));\n\n  /**\n   * Handle selection change\n   */\n  const handlePress = () => {\n    // Callback function\n    onChange(!selected);\n  };\n\n  /**\n   * Animate on change\n   */\n  useEffect(() => {\n    if (selected) {\n      offset.value = withTiming(1, {duration: 100});\n    } else {\n      offset.value = withTiming(0, {duration: 100});\n    }\n  }, [selected]);\n\n  return (\n    <PressableBase style={{padding: 4 * p}} onPress={handlePress}>\n      <View\n        style={{\n          width: 20 * p,\n          height: 20 * p,\n          backgroundColor: colors.gray700,\n          borderColor: colors.gray600,\n          borderWidth: 1 * p,\n          borderRadius: 4 * p,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Animated.View style={[animStyle]}>\n          <TablerIcon name=\"check\" size={12 * p} color={colors.gray50} />\n        </Animated.View>\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default Checkbox;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport {\n  deleteNotification,\n  markNotificationRead,\n  Notification,\n  NotificationType,\n} from 'open-polito-api/lib/notifications';\nimport {\n  ActivityIndicator,\n  BackHandler,\n  FlatList,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport store, {AppDispatch, RootState} from '../store/store';\nimport {\n  getNotificationList,\n  setNotifications,\n  UserState,\n} from '../store/userSlice';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport NotificationComponent from '../ui/Notification';\nimport NoContent from '../ui/NoContent';\nimport {STATUS} from '../store/status';\nimport PressableBase from '../ui/core/PressableBase';\nimport {CoursesState} from '../store/coursesSlice';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../colors';\nimport Checkbox from '../ui/core/Checkbox';\nimport {LongPressGestureHandler, State} from 'react-native-gesture-handler';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst _SelectableNotification = ({\n  dark,\n  n,\n  handlePress,\n  courseName,\n  selecting,\n  setSelecting,\n  selected,\n  onSelectionChange,\n}: {\n  dark: boolean;\n  n: Notification;\n  handlePress: (id: number) => any;\n  courseName: string;\n  selecting: boolean;\n  setSelecting: (selecting: boolean) => any;\n  selected: boolean;\n  onSelectionChange: (id: number, selected: boolean) => any;\n}) => {\n  const offset = useSharedValue(0);\n\n  const animStyleCheckbox = useAnimatedStyle(() => ({\n    width: 32 * p * offset.value,\n    transform: [\n      {\n        scale: offset.value,\n      },\n    ],\n    alignItems: 'flex-start',\n  }));\n\n  /**\n   * Show/hide checkbox\n   */\n  useEffect(() => {\n    offset.value = withTiming(selecting ? 1 : 0, {duration: 150});\n  }, [selecting]);\n\n  return (\n    <View style={{flex: 1}}>\n      <LongPressGestureHandler\n        onHandlerStateChange={({nativeEvent}) => {\n          if (nativeEvent.state === State.ACTIVE) {\n            if (!selecting) {\n              setSelecting(true);\n              onSelectionChange(n.id, true);\n            }\n          }\n        }}>\n        <Animated.View\n          style={{\n            marginBottom: 24 * p,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}>\n          <Animated.View style={[animStyleCheckbox]}>\n            <Checkbox\n              selected={selected}\n              onChange={sel => onSelectionChange(n.id, sel)}\n            />\n          </Animated.View>\n          <PressableBase style={{flex: 1}} onPress={() => handlePress(n.id)}>\n            <NotificationComponent\n              type={n.topic}\n              notification={n}\n              dark={dark}\n              read={n.is_read}\n              courseName={courseName}\n            />\n          </PressableBase>\n        </Animated.View>\n      </LongPressGestureHandler>\n    </View>\n  );\n};\n\nconst Notifications = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationTypes = [\n    {label: t('allF'), value: 'all'},\n    {label: t('readF'), value: 'read'},\n    {label: t('unreadF'), value: 'unread'},\n    {label: t('directAlerts'), value: 'direct'},\n    {label: t('courses'), value: 'course'},\n    {label: t('material'), value: 'material'},\n  ];\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  const {notifications, getNotificationsStatus} = useSelector<\n    RootState,\n    UserState\n  >(state => state.user);\n\n  const courses = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [refreshing, setRefreshing] = useState(false);\n\n  const refreshNotifications = () => {\n    setRefreshing(true);\n    dispatch(getNotificationList(device));\n  };\n\n  const getNotificationCourseName = (notification: Notification): string => {\n    return (\n      courses.courses.find(\n        course => course.basicInfo.id_incarico === (notification as any).course,\n      )?.basicInfo.name || ''\n    );\n  };\n\n  /**\n   * Set refreshing to false when done refreshing\n   */\n  useEffect(() => {\n    if (refreshing && getNotificationsStatus.code !== STATUS.PENDING) {\n      setRefreshing(false);\n    }\n  }, [notifications, refreshing, getNotificationsStatus.code, courses]);\n\n  /**\n   * Set notification as read.\n   * @param id The id of the notification\n   */\n  const handlePress = (id: number): void => {\n    // Find the notification index\n    const index = notifications.findIndex(n => n.id == id);\n\n    // Don't proceed if not found or if already read\n    if (index === -1) return;\n    if (notifications[index].is_read) return;\n\n    // Send read\n    (async () => {\n      await markNotificationRead(device, id);\n    })();\n\n    // Send updated array to store\n    let copy = {...notifications[index]};\n    copy.is_read = true;\n    store.dispatch(\n      setNotifications([\n        ...notifications.slice(0, index),\n        copy,\n        ...notifications.slice(index + 1),\n      ]),\n    );\n  };\n\n  const visible = useMemo<Notification[]>(() => {\n    switch (selectedCategory) {\n      case 'all':\n        return notifications;\n      case 'read':\n        return notifications.filter(n => n.is_read);\n      case 'unread':\n        return notifications.filter(n => !n.is_read);\n      case 'direct':\n        return notifications.filter(n => n.topic === NotificationType.DIRECT);\n      case 'course':\n        return notifications.filter(n => n.topic === NotificationType.NOTICE);\n      case 'material':\n        return notifications.filter(n => n.topic === NotificationType.MATERIAL);\n      default:\n        return [];\n    }\n  }, [notifications, selectedCategory]);\n\n  /**\n   * Whether we're in selection mode\n   */\n  const [selecting, setSelecting] = useState(false);\n  /**\n   * Selected notification ids in selection mode\n   */\n  const [selected, setSelected] = useState<number[]>([]);\n\n  const tabOffset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        scale: 0.75 + 0.25 * tabOffset.value,\n      },\n      {\n        translateY: 128 * p * (1 - tabOffset.value),\n      },\n    ],\n  }));\n\n  /**\n   * Show/hide bottom bar\n   */\n  useEffect(() => {\n    tabOffset.value = withTiming(selecting ? 1 : 0, {duration: 200});\n  }, [selecting]);\n\n  /**\n   * On exiting selection mode\n   */\n  useEffect(() => {\n    if (!selecting) setSelected([]);\n  }, [selecting]);\n\n  const handleSelectionChange = (id: number, sel: boolean) => {\n    if (sel) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter(s => s !== id));\n    }\n  };\n\n  /**\n   * Quit selection mode if no selected items\n   */\n  useEffect(() => {\n    if (selected.length === 0) {\n      setSelecting(false);\n    }\n  }, [selected]);\n\n  /**\n   * When in selection mode, if the hardware back button is pressed,\n   * exit selection mode instead of going back\n   */\n  const onHardwareBackButtonPressed = useCallback(() => {\n    if (selecting) {\n      setSelecting(false);\n      return true;\n    }\n    setSelected([]);\n    return false;\n  }, [selecting]);\n\n  /**\n   * When changing tab, exit selection mode\n   */\n  useEffect(() => {\n    setSelected([]);\n    setSelecting(false);\n  }, [selectedCategory]);\n\n  /**\n   * Setup & Cleanup\n   */\n  useEffect(() => {\n    BackHandler.addEventListener(\n      'hardwareBackPress',\n      onHardwareBackButtonPressed,\n    );\n    return () => {\n      setSelecting(false);\n      setSelected([]);\n      BackHandler.removeEventListener(\n        'hardwareBackPress',\n        onHardwareBackButtonPressed,\n      );\n    };\n  }, []);\n\n  const [deleting, setDeleting] = useState(false);\n\n  const deleteSelected = () => {\n    (async () => {\n      setDeleting(true);\n      for (let i = 0; i < selected.length; i++) {\n        await deleteNotification(device, selected[i]);\n      }\n      setTimeout(() => {\n        setDeleting(false);\n        setSelecting(false);\n      }, 500);\n      refreshNotifications();\n    })();\n  };\n\n  const areAllSelected = () => {\n    let allSelected = true;\n    for (let i = 0; i < visible.length; i++) {\n      if (!selected.includes(visible[i].id)) {\n        allSelected = false;\n        break;\n      }\n    }\n    return allSelected;\n  };\n\n  const selectionOptions = [\n    {\n      icon: areAllSelected() ? 'circle-minus' : 'circle-plus',\n      value: 'selectAll',\n      label: areAllSelected() ? t('deselectAll') : t('selectAll'),\n      action: () =>\n        areAllSelected()\n          ? setSelected([])\n          : setSelected(visible.map(n => n.id)),\n    },\n    {\n      icon: deleting ? 'loading' : 'trash',\n      value: 'delete',\n      label: t('delete'),\n      action: deleteSelected,\n    },\n    {\n      icon: 'checks',\n      value: 'markAsRead',\n      label: t('markAsRead'),\n      action: () => {\n        selected.forEach(id => handlePress(id));\n        setSelecting(false);\n      },\n    },\n  ];\n\n  return (\n    <Screen>\n      <Animated.View\n        style={[\n          animStyle,\n          {\n            position: 'absolute',\n            bottom: 16 * p,\n            left: 0,\n            right: 0,\n            zIndex: 1000,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            paddingVertical: 8 * p,\n            marginHorizontal: 16 * p,\n            borderRadius: 16 * p,\n            borderWidth: 1 * p,\n            borderColor: dark ? colors.gray600 : colors.gray300,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n          },\n        ]}>\n        {selectionOptions.map(opt => (\n          <View\n            style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n            <PressableBase\n              disabled={opt.icon === 'loading'}\n              style={{justifyContent: 'center', alignItems: 'center'}}\n              onPress={opt.action}>\n              {opt.icon === 'loading' ? (\n                <ActivityIndicator color={colors.accent300} size={20 * p} />\n              ) : (\n                <TablerIcon\n                  name={opt.icon}\n                  color={colors.accent300}\n                  size={20 * p}\n                />\n              )}\n              <View style={{height: 4 * p}} />\n              <Text c={colors.accent300} w=\"r\" s={10 * p}>\n                {opt.label}\n              </Text>\n            </PressableBase>\n          </View>\n        ))}\n      </Animated.View>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('notifications')} />\n      <Tabs\n        adjusted\n        dark={dark}\n        items={notificationTypes}\n        onChange={(index: number) =>\n          setSelectedCategory(notificationTypes[index].value)\n        }\n      />\n      <View style={styles.container}>\n        <FlatList\n          contentContainerStyle={styles.paddingHorizontal}\n          data={visible}\n          keyExtractor={item => item.id.toString()}\n          ListEmptyComponent={<NoContent />}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={refreshNotifications}\n            />\n          }\n          initialNumToRender={10}\n          maxToRenderPerBatch={10}\n          renderItem={n => (\n            <_SelectableNotification\n              dark={dark}\n              n={n.item}\n              handlePress={id => handlePress(id)}\n              courseName={getNotificationCourseName(n.item)}\n              selecting={selecting}\n              setSelecting={sel => setSelecting(sel)}\n              selected={selected.includes(n.item.id)}\n              onSelectionChange={(id, sel) => handleSelectionChange(id, sel)}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  );\n};\n\nexport default Notifications;\n","import React, {useCallback, useContext, useEffect} from 'react';\nimport Home from '../screens/Home';\nimport Email from '../screens/Email';\nimport Settings from '../screens/Settings';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Material from '../screens/Material';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  getRecentMaterial,\n  loadCourse,\n  loadCoursesData,\n  setLoadExtendedCourseInfoStatus,\n} from '../store/coursesSlice';\nimport {DeviceContext} from '../context/Device';\nimport {\n  getNotificationList,\n  getUnreadEmailCount,\n  UserState,\n} from '../store/userSlice';\nimport {registerPushNotifications} from 'open-polito-api/lib/notifications';\nimport {NativeModules, Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport {pendingStatus, STATUS, successStatus} from '../store/status';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport Drawer from '../ui/Drawer';\nimport {login, SessionState} from '../store/sessionSlice';\nimport Bookings from '../screens/Bookings';\nimport Timetable from '../screens/Timetable';\nimport Exams from '../screens/Exams';\nimport ExamSessions from '../screens/ExamSessions';\nimport Maps from '../screens/Maps';\nimport Classrooms from '../screens/Classrooms';\nimport People from '../screens/People';\nimport Courses from '../screens/Courses';\nimport Notifications from '../screens/Notifications';\nimport {DrawerContentComponentProps} from '@react-navigation/drawer';\nimport {DeviceSize} from '../types';\n\nexport type DrawerStackParamList = {\n  Home: undefined;\n  Material: undefined;\n  Email: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n  ExamSessions: undefined;\n  Timetable: undefined;\n  Exams: undefined;\n  Bookings: undefined;\n  Courses: undefined;\n  Maps: undefined;\n  People: undefined;\n  Classrooms: undefined;\n};\n\nconst DrawerStack = createDrawerNavigator<DrawerStackParamList>();\n\nexport default function HomeRouter() {\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark, device, size} = useContext(DeviceContext);\n\n  const {getNotificationsStatus} = useSelector<RootState, UserState>(\n    state => state.user,\n  );\n\n  const {loginStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  const {courses, getRecentMaterialStatus, loadCoursesStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  /**\n   * Login with token\n   */\n  useEffect(() => {\n    if (loginStatus.code === STATUS.IDLE) {\n      dispatch(login({method: 'token', device}));\n    }\n  }, [loginStatus, device, dispatch]);\n\n  /**\n   * Whenever notifications status is set to IDLE,\n   * load them again\n   */\n  useEffect(() => {\n    if (\n      getNotificationsStatus.code !== STATUS.IDLE ||\n      loginStatus.code !== STATUS.SUCCESS\n    ) {\n      return;\n    }\n    dispatch(getNotificationList(device));\n  }, [getNotificationsStatus, loginStatus]);\n\n  /**\n   * Load everything else only after login successful\n   */\n  useEffect(() => {\n    if (loginStatus.code !== STATUS.SUCCESS) {\n      return;\n    }\n    dispatch(loadCoursesData(device));\n    dispatch(getUnreadEmailCount(device));\n\n    /**\n     * After user successfully logged in, register FCM notifications\n     * with current messaging token.\n     * TODO iOS support.\n     */\n    (async () => {\n      if (Platform.OS === 'android' && Config.VARIANT !== 'debug') {\n        const FCMToken = await NativeModules.NotificationModule.getToken();\n        await registerPushNotifications(device, FCMToken);\n      }\n    })();\n  }, [loginStatus]);\n\n  /**\n   * Load full course data when basic data loaded\n   * TODO change when persistence implemented\n   */\n  useEffect(() => {\n    (async () => {\n      if (loadCoursesStatus.code !== STATUS.SUCCESS) {\n        return; // Cancel if basic data not loaded\n      }\n      dispatch(setLoadExtendedCourseInfoStatus(pendingStatus())); // Pending\n      courses.forEach(course => {\n        if (course.status.code === STATUS.IDLE) {\n          dispatch(loadCourse({basicCourseInfo: course.basicInfo, device}));\n        }\n      });\n    })();\n  }, [loadCoursesStatus]);\n\n  /**\n   * When all courses fully loaded, get recent material\n   */\n  useEffect(() => {\n    if (\n      getRecentMaterialStatus.code !== STATUS.IDLE ||\n      loadCoursesStatus.code !== STATUS.SUCCESS\n    ) {\n      return; // Cancel if already computed/computing or basic data not even loaded\n    }\n    let allLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code !== STATUS.SUCCESS) {\n        allLoaded = false;\n      }\n    });\n    if (allLoaded) {\n      dispatch(setLoadExtendedCourseInfoStatus(successStatus())); // Success\n      dispatch(getRecentMaterial());\n    }\n  }, [courses, getRecentMaterialStatus]);\n\n  const getDrawerComponent = useCallback(\n    (props: DrawerContentComponentProps) => <Drawer dark={dark} {...props} />,\n    [dark],\n  );\n\n  return (\n    <DrawerStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        drawerType: size >= DeviceSize.lg ? 'permanent' : 'front',\n      }}\n      useLegacyImplementation\n      drawerContent={props => getDrawerComponent(props)}>\n      <DrawerStack.Screen name=\"Home\" component={Home} />\n      <DrawerStack.Screen name=\"Email\" component={Email} />\n      <DrawerStack.Screen name=\"Notifications\" component={Notifications} />\n      <DrawerStack.Screen name=\"Settings\" component={Settings} />\n      <DrawerStack.Screen name=\"Courses\" component={Courses} />\n      <DrawerStack.Screen name=\"Material\" component={Material} />\n      <DrawerStack.Screen name=\"Bookings\" component={Bookings} />\n      <DrawerStack.Screen name=\"Timetable\" component={Timetable} />\n      <DrawerStack.Screen name=\"Exams\" component={Exams} />\n      <DrawerStack.Screen name=\"ExamSessions\" component={ExamSessions} />\n      <DrawerStack.Screen name=\"Maps\" component={Maps} />\n      <DrawerStack.Screen name=\"Classrooms\" component={Classrooms} />\n      <DrawerStack.Screen name=\"People\" component={People} />\n    </DrawerStack.Navigator>\n  );\n}\n","import React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport Course from '../screens/Course';\nimport Search from '../screens/Search';\nimport Video from '../screens/Video';\nimport HomeRouter from './HomeRouter';\n\nexport type AppStackParamList = {\n  HomeRouter: undefined;\n  Search: undefined;\n  Course: undefined;\n  Video: undefined;\n};\n\nconst AppStack = createNativeStackNavigator<AppStackParamList>();\n\nconst AppStackNavigator = () => {\n  return (\n    <NavigationContainer>\n      <AppStack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}>\n        <AppStack.Screen name=\"HomeRouter\" component={HomeRouter} />\n        <AppStack.Screen name=\"Search\" component={Search} />\n        <AppStack.Screen name=\"Course\" component={Course} />\n        <AppStack.Screen name=\"Video\" component={Video} />\n      </AppStack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppStackNavigator;\n","import React, {\n  ReactNode,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\n\nimport {useSelector} from 'react-redux';\nimport {SessionState} from '../store/sessionSlice';\nimport {Configuration} from '../defaultConfig';\nimport {AUTH_STATUS} from '../store/status';\nimport {RootState} from '../store/store';\nimport {\n  checkForUpdates,\n  ReleaseJsonEntry,\n  updateCleanup,\n} from '../utils/updater';\nimport {ModalContext} from '../context/ModalProvider';\nimport BaseActionConfirmModal from '../components/modals/BaseActionConfirmModal';\nimport Text from '../ui/core/Text';\nimport {p} from '../scaling';\nimport {DeviceContext} from '../context/Device';\nimport {getLocales} from 'react-native-localize';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport Updater from '../screens/Updater';\nimport AppStackNavigator from './AppStackNavigator';\nimport {getLanguageCode, setMomentLocale} from '../utils/l10n';\nimport {genericPlatform} from '../utils/platform';\nimport HTMLRenderEngineProvider from '../context/HTMLRenderEngineProvider';\n\n/**\n * Types for React Navigation\n */\nexport type AuthStackParamList = {\n  Login: undefined;\n};\n\nexport type AppStackParamList = {\n  HomeRouter: undefined;\n  Search: undefined;\n  Course: undefined;\n  Video: undefined;\n};\n\nexport type UpdaterState = {\n  checked: boolean;\n  acceptedUpdate: boolean;\n  releaseData?: ReleaseJsonEntry;\n};\n\n/**\n * Main routing component. Manages login and access to {@link AuthStack} and {@link AppStack}.\n */\nexport default function Router() {\n  const {t} = useTranslation();\n  const {setModal} = useContext(ModalContext);\n  const {dark} = useContext(DeviceContext);\n\n  // Setup moment locale.\n  // WARNING: Moment shouldn't be called by Router's parent components!\n  // Reason: Initial load time will be slower for new users on web\n  useEffect(() => {\n    setMomentLocale(getLanguageCode());\n  }, []);\n\n  // Update checking-related stuff\n  const [updaterState, setUpdaterState] = useState<UpdaterState>({\n    checked: false,\n    acceptedUpdate: false,\n  });\n\n  /**\n   * Check for updates and cleanup\n   */\n  useEffect(() => {\n    if (!updaterState.checked) {\n      checkForUpdates().then(data =>\n        setUpdaterState(prev => ({...prev, releaseData: data, checked: true})),\n      );\n    }\n    updateCleanup();\n  }, [updaterState.checked]);\n\n  // Show modal if update available\n  useEffect(() => {\n    if (updaterState.releaseData) {\n      const locale = getLocales()[0].languageCode;\n      let notes = updaterState.releaseData.notes.find(\n        n => n.language === locale,\n      );\n\n      setModal(\n        <BaseActionConfirmModal\n          title={t('newUpdateModalTitle')}\n          icon=\"download\"\n          accentColor={'#2dba2a'}\n          onConfirm={() =>\n            setUpdaterState(prev => ({\n              ...prev,\n              acceptedUpdate: true,\n            }))\n          }>\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n            {t('newUpdateModalText') + '\\n\\n' + t('newUpdateModalNotes') + '\\n'}\n          </Text>\n          {updaterState.releaseData.format === 'text'\n            ? (notes?.content || []).map(note => (\n                <Text\n                  s={12 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}>\n                  {`  • ${note}`}\n                </Text>\n              ))\n            : (notes?.content || []).map(note => (\n                <RenderHTMLSource source={{html: note}} />\n              ))}\n        </BaseActionConfirmModal>,\n      );\n    }\n  }, [updaterState.releaseData, dark, setModal, t]);\n\n  const {authStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  // Logging-related stuff\n  const {logging} = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [message, setMessage] = useState<ReactNode>(null);\n\n  // If loggingEnabled changes, set whether to show top message\n  useEffect(() => {\n    logging\n      ? setMessage(buildMessage({text: t('Logging enabled'), type: 'warn'}))\n      : setMessage(null);\n  }, [logging, t]);\n\n  // Returns message component\n  const buildMessage = ({text = '', type = 'warn'}) => {\n    return (\n      <View\n        style={{\n          backgroundColor: type == 'warn' ? colors.orange : colors.black,\n          paddingVertical: 4,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"m\" c={colors.white}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const children = useMemo(\n    () => (\n      <>\n        {message}\n        {updaterState.acceptedUpdate ? (\n          <Updater releaseData={updaterState.releaseData!} />\n        ) : authStatus !== AUTH_STATUS.NOT_VALID ? (\n          <AppStackNavigator />\n        ) : null}\n      </>\n    ),\n    [authStatus, message, updaterState],\n  );\n\n  /**\n   * If on web, {@link HTMLRenderEngineProvider} has not been created\n   * in the parent App component. We need to insert it now.\n   */\n  return genericPlatform === 'web' ? (\n    <HTMLRenderEngineProvider>{children}</HTMLRenderEngineProvider>\n  ) : (\n    children\n  );\n}\n"],"sourceRoot":""}