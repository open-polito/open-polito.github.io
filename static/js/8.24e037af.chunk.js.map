{"version":3,"sources":["src/ui/core/TextInput.tsx","src/routes/HomeRouter.tsx","src/screens/Home.tsx","src/screens/Email.tsx","src/screens/Settings.tsx","src/components/modals/SettingsEnableLoggingModal.tsx","src/screens/Material.tsx","src/ui/Drawer.tsx","src/sections.ts","src/screens/Bookings.tsx","src/screens/Timetable.tsx","src/components/timetable/TimetableSlots.tsx","src/components/timetable/TimetableDay.tsx","src/components/loaders/TimetableDayLoader.tsx","src/components/loaders/AnimatedGradientBase.web.tsx","src/components/loaders/LoaderBase.tsx","src/components/timetable/TimetableEvent.tsx","src/components/modals/TimetableEventModal.tsx","src/components/timetable/TimetableGrid.tsx","src/components/timetable/TimetableHeader.tsx","src/ui/HorizontalIconSelector.tsx","src/components/modals/TimetableOptionsModal.tsx","src/components/ListRank.tsx","src/screens/Exams.tsx","src/ui/ProgressCircle.tsx","src/components/exams/Progress.tsx","src/screens/ExamSessions.tsx","src/components/modals/ExamsBookExamModal.tsx","src/components/modals/ExamsCancelExamModal.tsx","src/screens/Maps.tsx","src/screens/Classrooms.tsx","src/screens/People.tsx","src/screens/Courses.tsx","src/screens/Notifications.tsx","src/ui/core/Checkbox.tsx","src/ui/SettingsItem.tsx","src/ui/core/PressableCard.tsx"],"names":["dark","icon","initiallyFocused","inputStyle","style","props","ref","useRef","useEffect","current","focus","_styles","useMemo","StyleSheet","create","textInputContainer","backgroundColor","colors","gray700","gray200","height","p","paddingHorizontal","borderRadius","flexDirection","alignItems","textInput","padding","fontFamily","fontSize","flex","color","View","name","size","marginRight","inputRef","placeholderTextColor","gray300","gray600","dispatch","useDispatch","useContext","DeviceContext","device","getNotificationsStatus","useSelector","state","user","loginStatus","session","courses","getRecentMaterialStatus","loadCoursesStatus","code","STATUS","IDLE","login","method","SUCCESS","getNotificationList","loadCoursesData","getUnreadEmailCount","Platform","OS","Config","VARIANT","FCMToken","NativeModules","NotificationModule","getToken","registerPushNotifications","setLoadExtendedCourseInfoStatus","pendingStatus","forEach","course","status","loadCourse","basicCourseInfo","basicInfo","allLoaded","successStatus","getRecentMaterial","getDrawerComponent","useCallback","DrawerStack","Navigator","screenOptions","headerShown","drawerType","DeviceSize","lg","useLegacyImplementation","drawerContent","Screen","component","Home","Email","Notifications","Settings","Courses","Material","Bookings","Timetable","Exams","ExamSessions","Maps","Classrooms","People","createDrawerNavigator","sectionsData","sectionColors","accent300","red","t","useTranslation","navigation","useNavigation","recentMaterial","loadExtendedCourseInfoStatus","latestAlert","flatMap","c","extendedInfo","notices","map","notice","course_name","course_code","sort","a","b","date","container","marginTop","paddingBottom","topSections","justifyContent","topSection","topSectionInner","width","marginBottom","topSectionText","position","bottom","title","headerType","HEADER_TYPE","MAIN","ScrollView","onPress","navigate","editable","placeholder","btn","i","key","gray100","numberOfLines","s","w","gray800","toLowerCase","slice","toggleDrawer","borderColor","borderWidth","ActivityIndicator","file","relativeDate","item","type","NotificationType","NOTICE","notification","useState","mounted","setMounted","loaded","setLoaded","setWebViewRef","webMailUrl","setWebMailUrl","getWebMailUrl","genericPlatform","href","source","uri","onNavigationStateChange","loading","emailUrl","setModal","ModalContext","config","debugSettingsItems","description","settingsFunction","logging","setConfig","toggle","toggleValue","resetConfig","setToast","message","visible","sendTestPushNotification","parseInt","ENABLE_DEBUG_OPTIONS","buildSettingsItem","version","accentColor","onConfirm","RenderHTMLSource","html","path","Logger","logsDirectoryPath","selectedTab","setSelectedTab","materialLoaded","setMaterialLoaded","setAllLoaded","_materialLoaded","PENDING","FlatList","data","renderItem","onChange","items","tabs","tab","label","value","courseId","keyExtractor","isSectionUnavailable","includes","orderedSections","sections","sec","deviceContext","userInfo","shortDegreeName","degreeType","degree_type","degreeName","degree_name","replace","toUpperCase","trim","setCurrent","handleLogout","logout","drawerScrollView","drawer","paddingVertical","hr","gray500","category","DrawerContentScrollView","screen","disabled","opacity","charAt","accent100","surname","BookingSubctx","ctxId","subctx","language","expanded","slots","setState","prev","id","Pressable","android_ripple","lightGray","ita","eng","BookingCtx","ctx","setExpanded","expandedElement","subcontexts","length","BookingCard","booking","barcodeUrl","moment","start_time","format","end_time","course_id","subcontext_name","context_name","sideElement","Image","aspectRatio","resizeMode","section","getBookingsStatus","getBookingContextsStatus","bookings","bookingContexts","currentTab","refreshing","refresh","getMyBookings","getBookingContexts","barcode_url","current_id","adjusted","refreshControl","RefreshControl","onRefresh","context_id","subcontext_id","i18next","weekStartDate","setWeekStartDate","setSlots","timetableDays","_timetableDays","Array","from","slot","day","push","layout","setLayout","selectedDay","setSelectedDay","fetchTimer","setFetchTimer","doUpdate","setDoUpdate","offset","useSharedValue","animStyle","useAnimatedStyle","withTiming","duration","transform","translateX","controlTransition","direction","withSequence","clearTimeout","setTimeout","getTimetable","Date","e","startOf","toDate","showLine","getTime","add","paddingTop","onDayChanged","onLayoutChanged","onWeekStartDateChanged","Dimensions","get","h","courseNames","setCourseNames","days","_courseNames","getCourseNames","timetableOverlap","timetablePriority","_list","changed","courseName","marginLeft","index","fake","setW","sortedByPriority","indexOf","overlapping","_overlapping","start","set","m","_localOverlapping","event","onLayout","nativeEvent","white","zIndex","marginHorizontal","overlapGroup","_group","group","findOverlapGroup","_index","findIndex","_slot","Math","ceil","random","n","_","yPositions","Rect","x","y","rx","ry","children","setVisible","translateY","textOpacity","setWidth","animTextSectionStyle","left","overflow","top","diff","as","courseColors","val","TouchableOpacity","gray50","room","professor","currentTime","setCurrentTime","updateTimeout","paddingLeft","paddingRight","borderTopColor","borderBottomColor","borderTopWidth","borderBottomWidth","_onWeekStartDateChanged","headerTitle","weekStartMoment","weekEndMoment","secondary","small","text","callback","DateTimePickerAndroid","open","mode","timestamp","defaultValue","onValueChange","_onLayoutChanged","subtract","setValue","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","showListRank","setShowListRank","rankItems","toggleOverlapMode","timetableOptionsItems","filter","d","setData","GestureHandlerRootView","onDragEnd","drag","ScaleDecorator","onLongPress","onPressIn","AvgWidget","avg","strokeWidth","radius","max","MarkWidget","mark","provisional","fields","getFields","gray900","failed","absent","icons","values","num_credits","marks","setTab","filteredMarks","permanent","_marks","total_credits","reduce","acc","parseFloat","toFixed","get_avg","styles","list","idx","openURL","marginVertical","contentContainerStyle","ItemSeparatorComponent","ListEmptyComponent","circ","PI","_value","Circle","fill","stroke","r","cx","cy","strokeDasharray","strokeDashoffset","useWindowDimensions","sorted_marks","now","asDays","mark1","mark2","avgs","_avgs","weights","labels","datasets","legend","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","exams","getExamsStatus","errorMsgLanguage","setErrorMsgLanguage","ERROR","getExams","RNLocalize","getLocales","languageCode","filteredSessions","isExamBooked","isExamAvailable","examSession","user_is_signed_up","error","examSessionCard","green","accent200","exam_name","field","fromNow","signup_deadline","rooms","join","buildField","session_id","success","bookExamSession","console","log","store","bookExamSync","cancelExamSession","cancelExamSync","gotoCourse","courseCode","isMain","mainCourse","secondaryCourse","_SelectableNotification","handlePress","selecting","setSelecting","selected","onSelectionChange","animStyleCheckbox","scale","LongPressGestureHandler","onHandlerStateChange","State","ACTIVE","sel","topic","read","is_read","notificationTypes","notifications","selectedCategory","setSelectedCategory","setRefreshing","refreshNotifications","getNotificationCourseName","find","id_incarico","markNotificationRead","copy","setNotifications","DIRECT","MATERIAL","setSelected","tabOffset","onHardwareBackButtonPressed","BackHandler","addEventListener","removeEventListener","deleting","setDeleting","areAllSelected","allSelected","selectionOptions","action","deleteNotification","right","opt","toString","initialNumToRender","maxToRenderPerBatch","handleSelectionChange","textContainer","Switch","rotation","expandedElementOpacity","sideElementOpacity","condition","animChevronStyle","rotate","expandedElementStyle","maxHeight","sideElementStyle","button","gray400"],"mappings":"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","file":"static/js/8.24e037af.chunk.js","sourcesContent":["import React, {FC, MutableRefObject, useEffect, useMemo, useRef} from 'react';\nimport {StyleSheet, TextStyle, View, ViewStyle} from 'react-native';\nimport colors from '../../colors';\nimport TablerIcon from './TablerIcon';\nimport {TextInput as RNTextInput, TextInputProps} from 'react-native';\nimport {p} from '../../scaling';\n\ntype TextInputParams = {\n  dark: boolean;\n  icon?: string;\n  initiallyFocused?: boolean;\n  inputStyle?: TextStyle;\n  style?: ViewStyle;\n} & TextInputProps;\n\nconst TextInput: FC<TextInputParams> = ({\n  dark,\n  icon = '',\n  initiallyFocused = false,\n  inputStyle = {},\n  style = {},\n  ...props\n}) => {\n  const ref = useRef<RNTextInput | null>(null);\n\n  useEffect(() => {\n    if (initiallyFocused) ref.current?.focus();\n  }, [initiallyFocused]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      textInputContainer: {\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        // paddingVertical: 8 * p,\n        height: 40 * p,\n        paddingHorizontal: 12 * p,\n        borderRadius: 4 * p,\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      textInput: {\n        padding: 0,\n        fontFamily: 'Inter-Regular',\n        fontSize: 10 * p,\n        flex: 1,\n        color: dark ? colors.gray200 : colors.gray700,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <View style={{..._styles.textInputContainer, ...(style as Object)}}>\n      {icon ? (\n        <TablerIcon\n          name={icon}\n          size={18 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n      ) : null}\n      <RNTextInput\n        ref={inputRef => (ref.current = inputRef)}\n        {...props}\n        style={{\n          ..._styles.textInput,\n          ...(inputStyle as Object),\n        }}\n        placeholderTextColor={dark ? colors.gray300 : colors.gray600}\n      />\n    </View>\n  );\n};\n\nexport default TextInput;\n","import React, {useCallback, useContext, useEffect} from 'react';\nimport Home from '../screens/Home';\nimport Email from '../screens/Email';\nimport Settings from '../screens/Settings';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Material from '../screens/Material';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  getRecentMaterial,\n  loadCourse,\n  loadCoursesData,\n  setLoadExtendedCourseInfoStatus,\n} from '../store/coursesSlice';\nimport {DeviceContext} from '../context/Device';\nimport {\n  getNotificationList,\n  getUnreadEmailCount,\n  UserState,\n} from '../store/userSlice';\nimport {registerPushNotifications} from 'open-polito-api/lib/notifications';\nimport {NativeModules, Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport {pendingStatus, STATUS, successStatus} from '../store/status';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport Drawer from '../ui/Drawer';\nimport {login, SessionState} from '../store/sessionSlice';\nimport Bookings from '../screens/Bookings';\nimport Timetable from '../screens/Timetable';\nimport Exams from '../screens/Exams';\nimport ExamSessions from '../screens/ExamSessions';\nimport Maps from '../screens/Maps';\nimport Classrooms from '../screens/Classrooms';\nimport People from '../screens/People';\nimport Courses from '../screens/Courses';\nimport Notifications from '../screens/Notifications';\nimport {DrawerContentComponentProps} from '@react-navigation/drawer';\nimport {DeviceSize} from '../types';\n\nexport type DrawerStackParamList = {\n  Home: undefined;\n  Material: undefined;\n  Email: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n  ExamSessions: undefined;\n  Timetable: undefined;\n  Exams: undefined;\n  Bookings: undefined;\n  Courses: undefined;\n  Maps: undefined;\n  People: undefined;\n  Classrooms: undefined;\n};\n\nconst DrawerStack = createDrawerNavigator<DrawerStackParamList>();\n\nexport default function HomeRouter() {\n  const dispatch = useDispatch<AppDispatch>();\n  const {dark, device, size} = useContext(DeviceContext);\n\n  const {getNotificationsStatus} = useSelector<RootState, UserState>(\n    state => state.user,\n  );\n\n  const {loginStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  const {courses, getRecentMaterialStatus, loadCoursesStatus} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  /**\n   * Login with token\n   */\n  useEffect(() => {\n    if (loginStatus.code === STATUS.IDLE) {\n      dispatch(login({method: 'token', device}));\n    }\n  }, [loginStatus, device, dispatch]);\n\n  /**\n   * Whenever notifications status is set to IDLE,\n   * load them again\n   */\n  useEffect(() => {\n    if (\n      getNotificationsStatus.code !== STATUS.IDLE ||\n      loginStatus.code !== STATUS.SUCCESS\n    ) {\n      return;\n    }\n    dispatch(getNotificationList(device));\n  }, [getNotificationsStatus, loginStatus]);\n\n  /**\n   * Load everything else only after login successful\n   */\n  useEffect(() => {\n    if (loginStatus.code !== STATUS.SUCCESS) {\n      return;\n    }\n    dispatch(loadCoursesData(device));\n    dispatch(getUnreadEmailCount(device));\n\n    /**\n     * After user successfully logged in, register FCM notifications\n     * with current messaging token.\n     * TODO iOS support.\n     */\n    (async () => {\n      if (Platform.OS === 'android' && Config.VARIANT !== 'debug') {\n        const FCMToken = await NativeModules.NotificationModule.getToken();\n        await registerPushNotifications(device, FCMToken);\n      }\n    })();\n  }, [loginStatus]);\n\n  /**\n   * Load full course data when basic data loaded\n   * TODO change when persistence implemented\n   */\n  useEffect(() => {\n    (async () => {\n      if (loadCoursesStatus.code !== STATUS.SUCCESS) {\n        return; // Cancel if basic data not loaded\n      }\n      dispatch(setLoadExtendedCourseInfoStatus(pendingStatus())); // Pending\n      courses.forEach(course => {\n        if (course.status.code === STATUS.IDLE) {\n          dispatch(loadCourse({basicCourseInfo: course.basicInfo, device}));\n        }\n      });\n    })();\n  }, [loadCoursesStatus]);\n\n  /**\n   * When all courses fully loaded, get recent material\n   */\n  useEffect(() => {\n    if (\n      getRecentMaterialStatus.code !== STATUS.IDLE ||\n      loadCoursesStatus.code !== STATUS.SUCCESS\n    ) {\n      return; // Cancel if already computed/computing or basic data not even loaded\n    }\n    let allLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code !== STATUS.SUCCESS) {\n        allLoaded = false;\n      }\n    });\n    if (allLoaded) {\n      dispatch(setLoadExtendedCourseInfoStatus(successStatus())); // Success\n      dispatch(getRecentMaterial());\n    }\n  }, [courses, getRecentMaterialStatus]);\n\n  const getDrawerComponent = useCallback(\n    (props: DrawerContentComponentProps) => <Drawer dark={dark} {...props} />,\n    [dark],\n  );\n\n  return (\n    <DrawerStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        drawerType: size >= DeviceSize.lg ? 'permanent' : 'front',\n      }}\n      useLegacyImplementation\n      drawerContent={props => getDrawerComponent(props)}>\n      <DrawerStack.Screen name=\"Home\" component={Home} />\n      <DrawerStack.Screen name=\"Email\" component={Email} />\n      <DrawerStack.Screen name=\"Notifications\" component={Notifications} />\n      <DrawerStack.Screen name=\"Settings\" component={Settings} />\n      <DrawerStack.Screen name=\"Courses\" component={Courses} />\n      <DrawerStack.Screen name=\"Material\" component={Material} />\n      <DrawerStack.Screen name=\"Bookings\" component={Bookings} />\n      <DrawerStack.Screen name=\"Timetable\" component={Timetable} />\n      <DrawerStack.Screen name=\"Exams\" component={Exams} />\n      <DrawerStack.Screen name=\"ExamSessions\" component={ExamSessions} />\n      <DrawerStack.Screen name=\"Maps\" component={Maps} />\n      <DrawerStack.Screen name=\"Classrooms\" component={Classrooms} />\n      <DrawerStack.Screen name=\"People\" component={People} />\n    </DrawerStack.Navigator>\n  );\n}\n","import React, {useContext, useEffect, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, ScrollView, StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport sections from '../sections';\nimport PressableBase from '../ui/core/PressableBase';\nimport Text from '../ui/core/Text';\nimport {useNavigation} from '@react-navigation/native';\nimport Section from '../ui/Section';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport {STATUS} from '../store/status';\nimport Notification from '../ui/Notification';\nimport {NotificationType} from 'open-polito-api/lib/notifications';\nimport {ExtendedAlert} from '../types';\n\n// TODO \"quick access\" section using recently opened sections\n// TODO open notification section\n// TODO show update widget\n// TODO show live classes\n\nconst sectionsData = [\n  {name: 'Courses', icon: 'school'},\n  {name: 'Material', icon: 'folders'},\n  {name: 'Email', icon: 'mail'},\n  {name: 'ExamSessions', icon: 'ballpen'},\n];\nconst sectionColors = [colors.accent300, colors.red, '#9b51e0', '#f2c94c'];\n\nconst Home = () => {\n  const {t} = useTranslation();\n  const {dark, device} = useContext(DeviceContext);\n  const navigation = useNavigation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {\n    courses,\n    recentMaterial,\n    getRecentMaterialStatus,\n    loadCoursesStatus,\n    loadExtendedCourseInfoStatus,\n  } = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const latestAlert = useMemo<ExtendedAlert>(() => {\n    return courses\n      .flatMap(\n        c =>\n          c.extendedInfo?.notices.map(notice => {\n            return {\n              ...notice,\n              course_name: c.basicInfo.name,\n              course_code: c.basicInfo.code,\n            };\n          }) || [],\n      )\n      .sort((a, b) => b.date - a.date)[0];\n  }, [courses]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n      topSections: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingBottom: 16,\n      },\n      topSection: {\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionInner: {\n        width: 40 * p,\n        height: 40 * p,\n        borderRadius: 4 * p,\n        marginBottom: 4 * p,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      topSectionText: {\n        position: 'absolute',\n        bottom: -16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header title={t('home')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          <PressableBase\n            onPress={() => {\n              navigation.navigate('Search');\n            }}>\n            <TextInput\n              editable={false}\n              placeholder={t('searchForAnything')}\n              dark={dark}\n              icon=\"search\"\n              style={{marginBottom: 32 * p}}\n            />\n          </PressableBase>\n\n          {/* Top sections */}\n          <View style={_styles.topSections}>\n            {sectionsData.map((btn, i) => (\n              <PressableBase\n                key={btn.name}\n                style={_styles.topSection}\n                onPress={() => {\n                  navigation.navigate(btn.name);\n                }}>\n                <View\n                  style={{\n                    ..._styles.topSectionInner,\n                    backgroundColor: sectionColors[i],\n                  }}>\n                  <TablerIcon\n                    name={btn.icon}\n                    size={24 * p}\n                    color={colors.gray100}\n                  />\n                </View>\n                <Text\n                  numberOfLines={1}\n                  s={10 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}\n                  style={_styles.topSectionText}>\n                  {t(btn.name[0].toLowerCase() + btn.name.slice(1))}\n                </Text>\n              </PressableBase>\n            ))}\n            <PressableBase\n              style={_styles.topSection}\n              onPress={() => {\n                navigation.toggleDrawer();\n              }}>\n              <View\n                style={{\n                  ..._styles.topSectionInner,\n                  borderColor: colors.gray200,\n                  borderWidth: 1 * p,\n                }}>\n                <TablerIcon name=\"plus\" size={24 * p} color={colors.gray200} />\n              </View>\n              <Text\n                numberOfLines={1}\n                s={10 * p}\n                w=\"r\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={_styles.topSectionText}>\n                {t('more')}\n              </Text>\n            </PressableBase>\n          </View>\n\n          {/* Latest files */}\n          <Section\n            dark={dark}\n            title={t('latestFiles')}\n            style={{marginTop: 32 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              recentMaterial.slice(0, 3).map(file => (\n                <View key={file.code}>\n                  <DirectoryItem\n                    relativeDate\n                    dark={dark}\n                    item={file}\n                    course={file.course_name}\n                  />\n                </View>\n              ))\n            )}\n          </Section>\n\n          {/* Latest alert */}\n          <Section\n            dark={dark}\n            title={t('latestAlert')}\n            style={{marginTop: 24 * p}}>\n            {loadExtendedCourseInfoStatus.code != STATUS.SUCCESS ? (\n              <ActivityIndicator />\n            ) : (\n              <Notification\n                type={NotificationType.NOTICE}\n                notification={latestAlert}\n                dark={dark}\n              />\n            )}\n          </Section>\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n};\n\nexport default Home;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch} from 'react-redux';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch} from '../store/store';\nimport WebView, {WebViewNavigation} from 'react-native-webview';\nimport {getUnreadEmailCount} from '../store/userSlice';\nimport Animated from 'react-native-reanimated';\nimport {emailUrl} from 'open-polito-api/lib/user';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport {genericPlatform} from '../utils/platform';\nimport {Device} from 'open-polito-api/lib/device';\n\n// TODO dark mode in WebView\n\nconst getWebMailUrl = async (device: Device) => {\n  const url = await emailUrl(device);\n  return url;\n};\n\nexport default function Email() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [mounted, setMounted] = useState(true);\n  const [loaded, setLoaded] = useState(false);\n  const [webViewRef, setWebViewRef] = useState<WebView | null>(null);\n  const [webMailUrl, setWebMailUrl] = useState('');\n\n  useEffect(() => {\n    return () => setMounted(false);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      dispatch(getUnreadEmailCount(device));\n      !webMailUrl && mounted && setWebMailUrl(await getWebMailUrl(device));\n      webMailUrl && genericPlatform !== 'mobile' && setLoaded(true);\n    })();\n  }, [device, dispatch, mounted, webMailUrl]);\n\n  const handleNavigationStateChange = (state: WebViewNavigation) => {\n    if (genericPlatform !== 'mobile') {\n      return;\n    }\n    if (!state.loading && !loaded && mounted) {\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <Screen>\n      <Header title={t('email')} headerType={HEADER_TYPE.MAIN} />\n      <Animated.View style={{flex: 1}}>\n        {loaded ? (\n          genericPlatform !== 'mobile' ? (\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Text\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('emailCannotBeShownDesktop')}\n              </Text>\n              <Text\n                href={webMailUrl}\n                s={12 * p}\n                w=\"m\"\n                c={dark ? colors.gray100 : colors.gray800}\n                style={{marginRight: 16 * p}}>\n                {t('openBrowser')}\n              </Text>\n            </View>\n          ) : null\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={dark ? colors.gray100 : colors.gray800}\n              style={{marginRight: 16 * p}}>\n              {t('loading')}\n            </Text>\n            <ActivityIndicator />\n          </View>\n        )}\n        {genericPlatform === 'mobile' && (\n          <View\n            style={{\n              flex: loaded ? 1 : 0,\n            }}>\n            <WebView\n              ref={ref => !ref && setWebViewRef(ref)}\n              source={{uri: webMailUrl}}\n              onNavigationStateChange={handleNavigationStateChange}\n            />\n          </View>\n        )}\n      </Animated.View>\n    </Screen>\n  );\n}\n","import React, {useContext, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport SettingsItem, {SettingsItemProps} from '../ui/SettingsItem';\nimport {useDispatch} from 'react-redux';\nimport {useTranslation} from 'react-i18next';\nimport {AppDispatch, RootState} from '../store/store';\nimport {resetConfig, setConfig, setToast} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\nimport {Configuration} from '../defaultConfig';\nimport Config from 'react-native-config';\nimport {sendTestPushNotification} from 'open-polito-api/lib/notifications';\nimport Analytics from 'appcenter-analytics';\nimport version from '../../version.json';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport colors from '../colors';\nimport SettingsEnableLoggingModal from '../components/modals/SettingsEnableLoggingModal';\nimport {ModalContext} from '../context/ModalProvider';\n\n/**\n * Creates Settings item component from data\n * @param item Settings item data\n * @returns Settings item component\n */\nexport const buildSettingsItem = (item: SettingsItemProps) => {\n  return <SettingsItem key={item.name} {...item} />;\n};\n\nexport default function Settings() {\n  const {t} = useTranslation();\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const {setModal} = useContext(ModalContext);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  // const _setConfig = (config: Configuration) => {\n  //   dispatch(setConfig(config));\n  // };\n\n  // const showRestartAppNeeded = () => {\n  //   dispatch(\n  //     setToast({\n  //       message: t('restartToastMessage'),\n  //       type: 'warn',\n  //       visible: true,\n  //     }),\n  //   );\n  // };\n\n  // const settingsItems: SettingsItemProps[] = [\n  //   {\n  //     icon: 'bell',\n  //     name: t('notifications'),\n  //     description: t('notificationsDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  //   {\n  //     icon: 'moon-stars',\n  //     name: t('darkMode'),\n  //     settingsFunction: () => notImplemented(t),\n  //     toggle: true,\n  //     toggleValue: config.theme == 'dark',\n  //   },\n  //   {\n  //     icon: 'info-circle',\n  //     name: t('about'),\n  //     description: t('aboutDesc'),\n  //     settingsFunction: () => notImplemented(t),\n  //   },\n  // ];\n\n  const debugSettingsItems: SettingsItemProps[] = [\n    {\n      icon: 'bug',\n      name: t('debugEnableLogging'),\n      description: t('debugEnableLoggingDesc'),\n      settingsFunction: () => {\n        if (!config.logging) {\n          setModal(<SettingsEnableLoggingModal />);\n        } else {\n          dispatch(setConfig({...config, logging: false}));\n        }\n      },\n      toggle: true,\n      toggleValue: config.logging,\n    },\n    {\n      icon: 'arrow-back',\n      name: t('debugResetConfig'),\n      description: t('debugResetConfigDesc'),\n      settingsFunction: () => {\n        dispatch(resetConfig());\n      },\n    },\n    {\n      icon: 'bell-ringing',\n      name: t('debugTestNotification'),\n      description: t('debugTestNotificationDesc'),\n      settingsFunction: () => {\n        dispatch(\n          setToast({message: t('pleaseWait'), type: 'info', visible: true}),\n        );\n        (async () => {\n          await sendTestPushNotification(device);\n        })();\n      },\n    },\n  ];\n\n  // const experimentalSettingsItems: SettingsItemProps[] = [];\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('settings')} />\n      <View style={_styles.container}>\n        {/* <Section dark={dark} title={t('generalSettings')}>\n          {settingsItems.map(item => buildSettingsItem(item))}\n        </Section> */}\n\n        {/* Debug options */}\n        {parseInt(Config.ENABLE_DEBUG_OPTIONS!) ? (\n          <Section dark={dark} title={t('debugSettings')}>\n            <View style={{marginTop: -8 * p}}>\n              {debugSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null}\n        {/* Experimental options */}\n        {/* {parseInt(Config.ENABLE_EXPERIMENTAL_OPTIONS) ? (\n          <Section dark={dark} title={t('experimentalSettings')}>\n            <View>\n              {experimentalSettingsItems.map(item => buildSettingsItem(item))}\n            </View>\n          </Section>\n        ) : null} */}\n      </View>\n      <View\n        style={{\n          marginTop: 8,\n          marginBottom: 16,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n          {'v' + version.version}\n        </Text>\n      </View>\n    </Screen>\n  );\n}\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig, setToast} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport Logger from '../../utils/Logger';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\n\nconst SettingsEnableLoggingModal = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const enableLogging = () => {\n    dispatch(setConfig({...config, logging: !config.logging}));\n    dispatch(\n      setToast({\n        message: t('restartToastMessage'),\n        type: 'warn',\n        visible: true,\n      }),\n    );\n  };\n\n  return (\n    <BaseActionConfirmModal\n      title={t('debugEnableLogging')}\n      icon=\"alert-triangle\"\n      accentColor={colors.red}\n      onConfirm={enableLogging}>\n      <RenderHTMLSource\n        source={{\n          html: t('debugEnableLoggingDialogMessage', {\n            path: Logger.logsDirectoryPath,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default SettingsEnableLoggingModal;\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useContext} from 'react';\nimport MaterialExplorer from '../ui/MaterialExplorer';\nimport {DeviceContext} from '../context/Device';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  CoursesState,\n  CourseState,\n  getRecentMaterial,\n  loadCourse,\n} from '../store/coursesSlice';\nimport {STATUS} from '../store/status';\nimport {useNavigation} from '@react-navigation/core';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport TextInput from '../ui/core/TextInput';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport DirectoryItem from '../ui/DirectoryItem';\nimport PressableBase from '../ui/core/PressableBase';\n\n// TODO folder stats (n of files, folder size)\n// TODO download features (e.g. download folders too, selection feature, ...)\n\nconst tabs = ['explore', 'recentlyAdded'];\n\nexport default function Material() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigation = useNavigation();\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const {getRecentMaterialStatus, recentMaterial} = useSelector<\n    RootState,\n    CoursesState\n  >(state => state.courses);\n\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const {dark, device} = useContext(DeviceContext);\n\n  const [materialLoaded, setMaterialLoaded] = useState(false);\n  const [allLoaded, setAllLoaded] = useState(false);\n\n  /**\n   * Initial setup.\n   * Load all course data if not already loaded, set {@link materialLoaded} to true if already loaded.\n   */\n  useEffect(() => {\n    let _materialLoaded = true;\n    courses.forEach(course => {\n      if (course.status.code != STATUS.SUCCESS) {\n        _materialLoaded = false;\n        dispatch(\n          loadCourse({\n            basicCourseInfo: course.basicInfo,\n            device: device,\n          }),\n        );\n      }\n    });\n    _materialLoaded && setMaterialLoaded(true);\n  }, []);\n\n  /**\n   * Called each time {@link courses} changes.\n   * Check if data is loaded, then set {@link materialLoaded} to true if so.\n   */\n  useEffect(() => {\n    if (!materialLoaded) {\n      let _materialLoaded = true;\n      courses.forEach(course => {\n        if (course.status.code != STATUS.SUCCESS) {\n          _materialLoaded = false;\n        }\n      });\n      _materialLoaded && setMaterialLoaded(true);\n    }\n  }, [courses]);\n\n  /**\n   * When {@link materialLoaded}, get recent material only if not already set.\n   */\n  useEffect(() => {\n    if (\n      materialLoaded &&\n      getRecentMaterialStatus.code != STATUS.SUCCESS &&\n      getRecentMaterialStatus.code != STATUS.PENDING\n    ) {\n      dispatch(getRecentMaterial());\n    }\n  }, [materialLoaded]);\n\n  /**\n   * Finally, when recent material has been loaded, set {@link allLoaded} to true.\n   */\n  useEffect(() => {\n    if (getRecentMaterialStatus.code == STATUS.SUCCESS) {\n      setAllLoaded(true);\n    }\n  }, [getRecentMaterialStatus]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('material')} />\n      <FlatList\n        data={[0]}\n        renderItem={() => (\n          <View style={_styles.container}>\n            <PressableBase\n              onPress={() => {\n                navigation.navigate('Search');\n              }}>\n              <TextInput\n                editable={false}\n                placeholder={t('searchForAnything')}\n                dark={dark}\n                icon=\"search\"\n              />\n            </PressableBase>\n            <Tabs\n              style={{marginTop: 24 * p, marginBottom: 16 * p}}\n              onChange={i => setSelectedTab(i)}\n              dark={dark}\n              items={tabs.map(tab => {\n                return {label: t(tab), value: tab};\n              })}\n            />\n            {selectedTab == 0 ? (\n              <MaterialExplorer courseId=\"all\" dark={dark} />\n            ) : (\n              <FlatList\n                data={recentMaterial}\n                keyExtractor={item => item.code}\n                renderItem={({item}) => (\n                  <DirectoryItem\n                    item={item}\n                    key={item.code}\n                    dark={dark}\n                    course={item.course_name}\n                  />\n                )}\n              />\n            )}\n          </View>\n        )}\n      />\n    </Screen>\n  );\n}\n","import {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport React, {FC, useCallback, useContext, useMemo, useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport colors from '../colors';\nimport Text from './core/Text';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport version from '../../version.json';\nimport sections from '../sections';\nimport {useTranslation} from 'react-i18next';\nimport TablerIcon from './core/TablerIcon';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {PersonalData} from 'open-polito-api/lib/user';\nimport {logout} from '../store/sessionSlice';\nimport {DeviceContext} from '../context/Device';\n\n// TODO remove when sections completed\nconst isSectionUnavailable = (name: string) => {\n  return ['Maps', 'Classrooms', 'People'].includes(name);\n};\n\ntype DrawerParams = {\n  dark: boolean;\n} & DrawerContentComponentProps;\n\n// TODO proper separation of logic\n// TODO badges\n\nconst orderedSections = sections.flatMap(sec => sec.items.map(i => i.name));\n\nconst getShortenedDegreeName = (degreeType: string, degreeName: string) => {\n  const prefix =\n    degreeType.toLowerCase() == 'corso di laurea in'\n      ? 'L3'\n      : degreeType.toLowerCase() == 'corso di laurea magistrale in'\n      ? 'LM'\n      : '';\n  const suffix = degreeName\n    .toLowerCase()\n    .replace('ingegneria', '')\n    .toUpperCase()\n    .trim();\n  return `${prefix} ${suffix}`;\n};\n\n// TODO fix bug where highlighted selection doesn't update if pressing back button\n\nconst Drawer: FC<DrawerParams> = ({dark, ...props}) => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const deviceContext = useContext(DeviceContext);\n\n  const userInfo = useSelector<RootState, PersonalData | null>(\n    state => state.user.userInfo,\n  );\n\n  const shortDegreeName = useMemo(() => {\n    if (userInfo == null) {\n      return '';\n    }\n    return getShortenedDegreeName(userInfo.degree_type, userInfo.degree_name);\n  }, [userInfo]);\n\n  const [current, setCurrent] = useState(orderedSections[0]);\n\n  // TODO optimize (maybe with useMemo)\n  const createButtons = () => {\n    return sections.map(sec => (\n      <View style={_styles.category}>\n        <View style={{marginBottom: 8 * p}}>\n          <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {t(sec.name).toUpperCase()}\n          </Text>\n        </View>\n        {sec.items.map(screen => (\n          <PressableBase\n            disabled={isSectionUnavailable(screen.name)}\n            style={{\n              paddingVertical: 4 * p,\n              flexDirection: 'row',\n              alignItems: 'center',\n              opacity: isSectionUnavailable(screen.name) ? 0.3 : 1,\n            }}\n            key={screen.name}\n            onPress={() => {\n              setCurrent(screen.name);\n              props.navigation.navigate(screen.name);\n            }}>\n            <TablerIcon\n              name={screen.icon}\n              size={24 * p}\n              color={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              s={12 * p}\n              w=\"m\"\n              c={\n                screen.name == current\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {t(screen.name.charAt(0).toLowerCase() + screen.name.slice(1))}\n            </Text>\n          </PressableBase>\n        ))}\n      </View>\n    ));\n  };\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout(deviceContext.device));\n  }, [dispatch, deviceContext]);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      drawerScrollView: {\n        backgroundColor: dark ? colors.gray800 : colors.gray100,\n      },\n      drawer: {\n        flexDirection: 'column',\n        paddingHorizontal: 16 * p,\n        paddingVertical: 24 * p,\n      },\n      hr: {\n        backgroundColor: colors.gray500,\n        height: 1 * p,\n        marginBottom: 16 * p,\n      },\n      category: {\n        marginBottom: 16 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <DrawerContentScrollView style={_styles.drawerScrollView} {...props}>\n      <View style={_styles.drawer}>\n        <View style={{justifyContent: 'flex-start', marginBottom: 16 * p}}>\n          <Text s={14 * p} w=\"b\" c={dark ? colors.gray100 : colors.gray800}>\n            Open PoliTo\n          </Text>\n          <Text s={10 * p} w=\"r\" c={dark ? colors.gray200 : colors.gray700}>\n            v{version.version}\n          </Text>\n        </View>\n        <View style={_styles.hr} />\n        {createButtons()}\n        <View style={_styles.hr} />\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <View\n            style={{\n              width: 24 * p,\n              height: 24 * p,\n              borderRadius: 24 * p,\n              backgroundColor: colors.accent100,\n              marginRight: 8 * p,\n            }}\n          />\n          <View style={{justifyContent: 'flex-start', flex: 1}}>\n            <Text\n              numberOfLines={1}\n              w=\"b\"\n              c={dark ? colors.gray100 : colors.gray800}\n              s={12 * p}>\n              {userInfo?.surname} {userInfo?.name}\n            </Text>\n            <Text\n              numberOfLines={1}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}\n              s={10 * p}>\n              {shortDegreeName}\n            </Text>\n          </View>\n          <PressableBase\n            onPress={() => {\n              handleLogout();\n            }}>\n            <TablerIcon name=\"logout\" size={24 * p} color={colors.accent300} />\n          </PressableBase>\n        </View>\n      </View>\n    </DrawerContentScrollView>\n  );\n};\n\nexport default Drawer;\n","const sections = [\n  {\n    name: 'general',\n    items: [\n      {\n        name: 'Home',\n        icon: 'layout-dashboard',\n      },\n      {\n        name: 'Email',\n        icon: 'mail',\n      },\n      {\n        name: 'Notifications',\n        icon: 'bell',\n      },\n      {\n        name: 'Settings',\n        icon: 'settings',\n      },\n    ],\n  },\n  {\n    name: 'classes',\n    items: [\n      {\n        name: 'Courses',\n        icon: 'school',\n      },\n      {\n        name: 'Material',\n        icon: 'folders',\n      },\n      {\n        name: 'Bookings',\n        icon: 'ticket',\n      },\n      {\n        name: 'Timetable',\n        icon: 'clock',\n      },\n    ],\n  },\n  {\n    name: 'exams',\n    items: [\n      {\n        name: 'Exams',\n        icon: 'book-2',\n      },\n      {\n        name: 'ExamSessions',\n        icon: 'ballpen',\n      },\n    ],\n  },\n  {\n    name: 'headquarters',\n    items: [\n      {\n        name: 'Maps',\n        icon: 'map-2',\n      },\n      {\n        name: 'Classrooms',\n        icon: 'building-arch',\n      },\n      {\n        name: 'People',\n        icon: 'user',\n      },\n    ],\n  },\n];\n\nexport default sections;\n","import i18next from 'i18next';\nimport moment from 'moment';\nimport {\n  barcode_url,\n  Booking,\n  BookingContext,\n  BookingSlot,\n  BookingSubcontext,\n} from 'open-polito-api/lib/booking';\nimport React, {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {\n  ActivityIndicator,\n  Image,\n  Pressable,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {STATUS} from '../store/status';\nimport {AppDispatch, RootState} from '../store/store';\nimport {getBookingContexts, getMyBookings, UserState} from '../store/userSlice';\nimport PressableCard from '../ui/core/PressableCard';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport NoContent from '../ui/NoContent';\nimport Screen from '../ui/Screen';\nimport Tabs from '../ui/Tabs';\n\n// TODO add booking capabilities\n\nconst BookingSubctx = ({\n  ctxId,\n  subctx,\n  language,\n  dark,\n}: {\n  ctxId: string;\n  subctx: BookingSubcontext;\n  language: string;\n  dark: boolean;\n}) => {\n  const {device} = useContext(DeviceContext);\n\n  const [state, setState] = useState<{\n    loaded: boolean;\n    expanded: boolean;\n    mounted: boolean;\n    slots: BookingSlot[];\n  }>({\n    loaded: false,\n    expanded: false,\n    mounted: true,\n    slots: [],\n  });\n\n  // TODO re-enable when booking feature added\n  // useEffect(() => {\n  //   const condition =\n  //     state.mounted &&\n  //     state.expanded &&\n  //     !state.loaded &&\n  //     state.slots.length === 0;\n  //   if (!condition) {\n  //     return;\n  //   }\n  //   (async () => {\n  //     const slots = await getSlots(device, ctxId, subctx.id);\n  //     state.mounted && setState(prev => ({...prev, loaded: true, slots}));\n  //   })();\n  // }, [state, device, ctxId, subctx]);\n\n  useEffect(() => {\n    return () => setState(prev => ({...prev, mounted: false}));\n  }, []);\n\n  return (\n    <View key={subctx.id}>\n      <Pressable\n        onPress={() => setState(prev => ({...prev, expanded: !prev.expanded}))}\n        android_ripple={{color: colors.lightGray}}\n        style={{paddingVertical: 8 * p}}>\n        <Text s={10 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n          {language === 'it' ? subctx.ita.name : subctx.eng.name}\n        </Text>\n      </Pressable>\n      <View></View>\n    </View>\n  );\n};\n\nconst BookingCtx = ({\n  ctx,\n  language,\n  dark,\n}: {\n  ctx: BookingContext;\n  language: string;\n  dark: boolean;\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <View>\n      <PressableCard\n        expanded={expanded}\n        dark={dark}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n        description={\n          language === 'it' ? ctx.ita.description : ctx.eng.description\n        }\n        title={language === 'it' ? ctx.ita.name : ctx.eng.name}\n        expandedElement={\n          ctx.subcontexts && ctx.subcontexts.length > 0 ? (\n            <View style={{marginTop: 16 * p}}>\n              {ctx.subcontexts?.map(subctx => (\n                <BookingSubctx\n                  dark={dark}\n                  key={subctx.id}\n                  subctx={subctx}\n                  language={language}\n                  ctxId={ctx.id}\n                />\n              ))}\n            </View>\n          ) : null\n        }\n      />\n    </View>\n  );\n};\n\ninterface BookingCardProps {\n  dark: boolean;\n  booking: Booking;\n  barcodeUrl: string;\n}\n\nconst BookingCard: FC<BookingCardProps> = ({dark, booking, barcodeUrl}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const sections = useMemo(() => {\n    return [\n      {\n        type: 'date',\n        label: moment(booking.start_time).format('ll'),\n        icon: 'calendar-time',\n      },\n      {\n        type: 'time',\n        label: `${moment(booking.start_time).format('LT')} - ${moment(\n          booking.end_time,\n        ).format('LT')}`,\n        icon: 'clock',\n      },\n    ];\n  }, [booking]);\n\n  return (\n    <PressableCard\n      title={\n        booking.course_id\n          ? `${booking.course_name} - ${booking.course_id}`\n          : booking.subcontext_name\n      }\n      description={booking.context_name}\n      expanded={expanded}\n      dark={dark}\n      sideElement={\n        !expanded && (\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{width: '100%', aspectRatio: 2.5, resizeMode: 'contain'}}\n            resizeMode=\"contain\"\n          />\n        )\n      }\n      expandedElement={\n        <View style={{flex: 1, marginTop: 16 * p}}>\n          <Image\n            source={{uri: barcodeUrl}}\n            style={{\n              width: '100%',\n              aspectRatio: 2.5,\n              resizeMode: 'contain',\n            }}\n          />\n        </View>\n      }\n      onPress={() => setExpanded(prev => !prev)}>\n      <View style={{marginTop: 16 * p}}>\n        {sections.map((section, i) => (\n          <View\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'center',\n              },\n              i > 0 && {marginTop: 8 * p},\n            ]}>\n            <TablerIcon\n              name={section.icon}\n              size={16 * p}\n              color={dark ? colors.gray200 : colors.gray700}\n              style={{marginRight: 8 * p}}\n            />\n            <Text\n              style={{marginRight: 8 * p}}\n              s={10 * p}\n              w=\"r\"\n              c={dark ? colors.gray200 : colors.gray700}>\n              {section.label}\n            </Text>\n          </View>\n        ))}\n      </View>\n    </PressableCard>\n  );\n};\n\nconst Bookings = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {\n    userInfo,\n    getBookingsStatus,\n    getBookingContextsStatus,\n    bookings,\n    bookingContexts,\n  } = useSelector<RootState, UserState>(state => state.user);\n\n  const mounted = useRef(true);\n\n  const tabs = useMemo(() => {\n    return ['myBookings', 'newBooking'];\n  }, []);\n\n  const [state, setState] = useState<{\n    currentTab: string;\n    barcodeUrl: string;\n  }>({\n    currentTab: tabs[0],\n    barcodeUrl: '',\n  });\n\n  // Refreshing\n  const refreshing = useMemo(() => {\n    return (\n      getBookingsStatus.code === STATUS.PENDING ||\n      getBookingContextsStatus.code === STATUS.PENDING\n    );\n  }, [getBookingsStatus, getBookingContextsStatus]);\n\n  // Refresh\n  const refresh = useCallback(\n    (tab: 'myBookings' | 'newBooking') => {\n      if (tab === 'myBookings') {\n        dispatch(getMyBookings(device));\n      }\n      if (tab === 'newBooking') {\n        dispatch(getBookingContexts(device));\n      }\n    },\n    [device, dispatch],\n  );\n\n  // Load barcode\n  useEffect(() => {\n    if (state.barcodeUrl === '' && userInfo) {\n      setState(prev => ({\n        ...prev,\n        barcodeUrl: barcode_url(userInfo.current_id),\n      }));\n    }\n  }, [state.barcodeUrl, userInfo]);\n\n  // On tab change\n  useEffect(() => {\n    (async () => {\n      if (state.currentTab === tabs[0]) {\n        dispatch(getMyBookings(device));\n      } else if (state.currentTab === tabs[1]) {\n        dispatch(getBookingContexts(device));\n      }\n    })();\n  }, [state.currentTab, userInfo, device, dispatch, tabs]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        flex: 1,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('bookings')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        adjusted\n        dark={dark}\n        onChange={i =>\n          setState(prev => ({\n            ...prev,\n            currentTab: tabs[i],\n          }))\n        }\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n      />\n      <View style={_styles.container}>\n        <ScrollView\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={() =>\n                refresh(\n                  state.currentTab === tabs[0] ? 'myBookings' : 'newBooking',\n                )\n              }\n            />\n          }>\n          {(state.currentTab === tabs[0] &&\n            getBookingsStatus.code === STATUS.PENDING) ||\n          (state.currentTab === tabs[1] &&\n            getBookingContextsStatus.code === STATUS.PENDING) ? (\n            <ActivityIndicator />\n          ) : state.currentTab === tabs[0] ? (\n            bookings.length === 0 ? (\n              <NoContent />\n            ) : (\n              bookings.map(booking => (\n                <BookingCard\n                  key={`${booking.context_id}${booking.subcontext_id}${booking.start_time}${booking.end_time}`}\n                  dark={dark}\n                  booking={booking}\n                  barcodeUrl={state.barcodeUrl}\n                />\n              ))\n            )\n          ) : bookingContexts.length === 0 ? (\n            <NoContent />\n          ) : (\n            bookingContexts.map(ctx => (\n              <BookingCtx\n                dark={dark}\n                key={ctx.id}\n                ctx={ctx}\n                language={i18next.language}\n              />\n            ))\n          )}\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Bookings;\n","import moment from 'moment';\nimport {getTimetable, TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, View} from 'react-native';\nimport {DeviceContext} from '../context/Device';\nimport TimetableSlots from '../components/timetable/TimetableSlots';\nimport TimetableGrid from '../components/timetable/TimetableGrid';\nimport TimetableHeader from '../components/timetable/TimetableHeader';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport {p} from '../scaling';\n\nconst Timetable = () => {\n  const {t} = useTranslation();\n  const {device, dark} = useContext(DeviceContext);\n\n  const [loaded, setLoaded] = useState(false);\n  const [weekStartDate, setWeekStartDate] = useState<Date | null>(null);\n\n  const [slots, setSlots] = useState<TimetableSlot[]>([]);\n\n  /**\n   * When slots change, update {@link timetableDays}\n   */\n  const timetableDays = useMemo(() => {\n    let _timetableDays: TimetableSlot[][] = Array.from({length: 7}, () => []);\n    slots.forEach(slot => {\n      _timetableDays[moment(slot.start_time).day()].push(slot);\n    });\n    return _timetableDays;\n  }, [slots]);\n\n  const [layout, setLayout] = useState<'day' | 'week'>('day');\n\n  const [mounted, setMounted] = useState(true);\n\n  const [selectedDay, setSelectedDay] = useState(1); // Today's day index. TODO display first day of week when week is not current\n\n  const [fetchTimer, setFetchTimer] = useState<any>(null);\n  const [doUpdate, setDoUpdate] = useState<boolean>(false); // Flip it to trigger effect\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: withTiming(opacity.value, {duration: 500}),\n      transform: [{translateX: offset.value}],\n    };\n  });\n\n  /**\n   * Controls the \"scrolling\" effect animation\n   * @param direction left or right\n   */\n  const controlTransition = (direction: 'l' | 'r') => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(0, {duration: 500}),\n      withTiming(1, {duration: 250}),\n    );\n    offset.value =\n      direction === 'l'\n        ? withSequence(\n            withTiming(32, {duration: 750}),\n            withTiming(-32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          )\n        : withSequence(\n            withTiming(-32, {duration: 750}),\n            withTiming(32, {duration: 0}),\n            withTiming(0, {duration: 750}),\n          );\n  };\n\n  /**\n   * Get slots and set {@link weekStartDate}\n   */\n  useEffect(() => {\n    (async () => {\n      if (!weekStartDate) controlTransition('r');\n      if (fetchTimer) clearTimeout(fetchTimer);\n      setFetchTimer(\n        setTimeout(async () => {\n          setLoaded(false);\n          let slots: TimetableSlot[] = [];\n          setSlots([]);\n          try {\n            slots = await getTimetable(device, weekStartDate ?? new Date());\n            setLoaded(true);\n          } catch (e) {\n            // console.log(e);\n          } finally {\n            if (!weekStartDate) {\n              const date = moment().startOf('isoWeek').toDate();\n              mounted && setWeekStartDate(date);\n            }\n            setSlots(slots);\n          }\n        }, 250),\n      );\n    })();\n    return () => {\n      clearTimeout(fetchTimer);\n      setMounted(false);\n    };\n  }, [doUpdate]);\n\n  /**\n   * Whether to show red line\n   */\n  const showLine: boolean = useMemo(() => {\n    return (\n      (layout === 'week' &&\n        weekStartDate?.getTime() ===\n          moment().startOf('isoWeek').toDate().getTime()) ||\n      (layout === 'day' &&\n        moment(weekStartDate)\n          .add(selectedDay - 1, 'days')\n          .toDate()\n          .getTime() === moment().startOf('day').toDate().getTime())\n    );\n  }, [weekStartDate, selectedDay, layout]);\n\n  return (\n    <Screen>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('timetable')} />\n      <View\n        style={{\n          flex: 1,\n          paddingTop: 24 * p,\n        }}>\n        <View style={{paddingHorizontal: 16 * p}}>\n          <TimetableHeader\n            selectedDay={layout === 'week' ? null : selectedDay}\n            onDayChanged={(value: number) => {\n              setSelectedDay(value);\n            }}\n            onLayoutChanged={(value: 'day' | 'week') => {\n              setLayout(value);\n            }}\n            weekStartDate={weekStartDate}\n            onWeekStartDateChanged={(value: Date) => {\n              if (weekStartDate && value.getTime() < weekStartDate.getTime()) {\n                controlTransition('l');\n              } else {\n                controlTransition('r');\n              }\n              setWeekStartDate(moment(value).startOf('isoWeek').toDate());\n              setDoUpdate(!doUpdate);\n            }}\n            timetableDays={timetableDays}\n          />\n        </View>\n        <ScrollView style={{flex: 1}}>\n          <Animated.View style={[animStyle, {flex: 1}]}>\n            <TimetableGrid showLine={showLine} dark={dark} />\n            <TimetableSlots\n              loaded={loaded}\n              timetableDays={timetableDays}\n              layout={layout}\n              selectedDay={selectedDay}\n            />\n          </Animated.View>\n        </ScrollView>\n      </View>\n    </Screen>\n  );\n};\n\nexport default Timetable;\n","import {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport TimetableDay from './TimetableDay';\nimport {Configuration} from '../../defaultConfig';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport {p} from '../../scaling';\n\nconst TimetableSlots = ({\n  loaded,\n  timetableDays,\n  layout,\n  selectedDay,\n}: {\n  loaded: boolean;\n  timetableDays: TimetableSlot[][];\n  layout: 'week' | 'day';\n  selectedDay: number;\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  const [courseNames, setCourseNames] = useState<string[]>(['', '', '']);\n\n  const days = useMemo<TimetableSlot[][]>(() => {\n    if (timetableDays.length === 1) return timetableDays;\n    return timetableDays.slice(1, 6);\n  }, [timetableDays]);\n\n  const getCourseNames = (): string[] => {\n    let _courseNames: string[] = [];\n    timetableDays.forEach(day => {\n      day.forEach(slot => {\n        if (!_courseNames.includes(slot.course_name)) {\n          _courseNames.push(slot.course_name);\n        }\n      });\n    });\n    return _courseNames.sort();\n  };\n\n  useEffect(() => {\n    setCourseNames(getCourseNames());\n  }, [days]);\n\n  /**\n   * When course names or slots change, if priority enabled, update the priority list\n   */\n  useEffect(() => {\n    if (!config.timetableOverlap || !config.timetablePriority) return;\n    let _list: string[] = [...config.timetablePriority];\n    let changed = false;\n    courseNames.forEach(courseName => {\n      if (\n        courseName.trim() !== '' &&\n        !config.timetablePriority.includes(courseName)\n      ) {\n        _list.push(courseName);\n        changed = true;\n      }\n    });\n    changed && dispatch(setConfig({...config, timetablePriority: _list}));\n  }, [days, courseNames, config, dispatch]);\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        flex: 1,\n        marginLeft: 32 * p,\n        marginRight: 16 * p,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n      }}>\n      {(layout === 'week' ? days : [days[selectedDay - 1]]).map(\n        (day, index) => (\n          <TimetableDay\n            fake={!loaded}\n            config={config}\n            key={index}\n            {...{day, h, index, courseNames}}\n          />\n        ),\n      )}\n    </View>\n  );\n};\n\nexport default TimetableSlots;\n","import moment from 'moment';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport React, {useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport {Configuration} from '../../defaultConfig';\nimport {p} from '../../scaling';\nimport TimetableDayLoader from '../loaders/TimetableDayLoader';\nimport TimetableEvent from './TimetableEvent';\n\nconst TimetableDay = ({\n  fake = false,\n  day,\n  h,\n  courseNames,\n  config,\n  index = 0,\n}: {\n  fake?: boolean;\n  day: TimetableSlot[];\n  h: number;\n  courseNames: string[];\n  config: Configuration;\n  index?: number;\n}) => {\n  const [w, setW] = useState(0);\n\n  /**\n   * Array of slots sorted by priority\n   */\n  const sortedByPriority: TimetableSlot[] = useMemo(() => {\n    return [...day].sort(\n      (a, b) =>\n        config.timetablePriority.indexOf(b.course_name) -\n        config.timetablePriority.indexOf(a.course_name),\n    );\n  }, [config.timetablePriority, day]);\n\n  /**\n   * Array of arrays of overlapping events.\n   *\n   * @remarks\n   * Sub-array length equals number to divide width by.\n   * Show overlapping events in the order given by their sub-array index.\n   *\n   * @example\n   * [\"course a\", \"course b\", \"course c\"] means:\n   *\n   * <------------ WIDTH ------------->\n   * |----------|----------|----------|\n   * | course a | course b | course c |\n   * |----------|----------|----------|\n   */\n  const overlapping: TimetableSlot[][] = useMemo(() => {\n    if (config.timetableOverlap === 'priority') return []; // Only compute if splitting enabled\n    if (day.length === 0) return []; // Only compute when slots fetched\n\n    let _overlapping: TimetableSlot[][] = [];\n    // Go through slots and find overlaps\n    const start = moment(day[0].start_time).set({h: 8, m: 45});\n    for (let i = 0; i < 9; i++) {\n      start.add(90, 'm');\n      let _localOverlapping: TimetableSlot[] = [];\n      day.map(event => {\n        if (\n          event.start_time < start.toDate().getTime() &&\n          start.toDate().getTime() < event.end_time\n        ) {\n          _localOverlapping.push(event);\n        }\n      });\n      if (_localOverlapping.length > 1) _overlapping.push(_localOverlapping);\n    }\n    return _overlapping;\n  }, [day, config.timetableOverlap]);\n\n  /**\n   * Finds and returns overlap group of given slot\n   * @param slot The timetable slot\n   * @returns overlap group\n   */\n  const findOverlapGroup = (slot: TimetableSlot): TimetableSlot[] => {\n    let _group: TimetableSlot[] = [];\n    overlapping.forEach(group => {\n      if (group.includes(slot)) {\n        _group = group;\n        return;\n      }\n    });\n    return _group;\n  };\n\n  return (\n    <View\n      onLayout={e => {\n        setW(e.nativeEvent.layout.width);\n      }}\n      style={{\n        backgroundColor: colors.white,\n        flex: 1,\n        zIndex: 200,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        borderColor: colors.gray200,\n        marginHorizontal: 1 * p,\n      }}>\n      {fake ? (\n        <TimetableDayLoader w={w} h={h} />\n      ) : config.timetableOverlap === 'priority' ? (\n        // If priority enabled, show sorted by priority\n        sortedByPriority.map((slot, i) => {\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup: [], slot, w, h, courseNames, index: i}}\n            />\n          );\n        })\n      ) : (\n        // If priority not enabled\n        day.map((slot, i) => {\n          const overlapGroup = findOverlapGroup(slot);\n          const _index = overlapGroup.findIndex(_slot => slot === _slot);\n          return (\n            <TimetableEvent\n              key={i}\n              {...{overlapGroup, slot, w, h, courseNames, index: _index}}\n            />\n          );\n        })\n      )}\n    </View>\n  );\n};\n\nexport default TimetableDay;\n","import React, {useState} from 'react';\nimport {View} from 'react-native';\nimport {Rect} from 'react-native-svg';\nimport {p} from '../../scaling';\nimport AnimatedGradientBase from './AnimatedGradientBase';\nimport LoaderBase from './LoaderBase';\n\nconst TimetableDayLoader = ({w, h}: {w: number; h: number}) => {\n  const [n] = useState(Math.ceil(Math.random() * 2));\n  const [yPositions] = useState(\n    Array.from({length: n}, (_, i) => (i + 1) * (3 + Math.random()) * h),\n  );\n\n  return (\n    <View style={{height: h * 10, position: 'absolute'}}>\n      <LoaderBase>\n        <AnimatedGradientBase width={w} height={h * 15}>\n          {Array.from({length: n}).map((_, i) => (\n            <Rect\n              key={i}\n              x={0}\n              y={yPositions[i]}\n              rx={4 * p}\n              ry={4 * p}\n              width={w - 4}\n              height={h * 2}\n            />\n          ))}\n        </AnimatedGradientBase>\n      </LoaderBase>\n    </View>\n  );\n};\n\nexport default TimetableDayLoader;\n","import React, {ReactNode} from 'react';\nimport {View} from 'react-native';\n\nconst AnimatedGradientBase = ({\n  width,\n  height,\n  children,\n}: {\n  width: number;\n  height: number;\n  children: ReactNode;\n}) => {\n  return (\n    <View\n      style={{\n        width,\n        height,\n      }}>\n      {children}\n    </View>\n  );\n};\n\nexport default AnimatedGradientBase;\n","import React, {ReactNode, useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst LoaderBase = ({children}: {children: ReactNode}) => {\n  const [visible, setVisible] = useState(false);\n  const [mounted, setMounted] = useState(true);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      opacity: offset.value,\n      transform: [\n        {translateY: 8 - offset.value * 8},\n        {translateX: 8 - offset.value * 8},\n      ],\n    };\n  });\n\n  useEffect(() => {\n    (async () => {\n      setTimeout(() => {\n        mounted && setVisible(true);\n      }, 150);\n    })();\n    return () => {\n      setMounted(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (visible) {\n      offset.value = withTiming(1, {duration: 200});\n    }\n  }, [visible]);\n\n  return visible ? (\n    <Animated.View style={[animStyle]}>{children}</Animated.View>\n  ) : null;\n};\n\nexport default LoaderBase;\n","import React, {useContext, useEffect, useState} from 'react';\nimport colors, {courseColors} from '../../colors';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {TouchableOpacity, View} from 'react-native';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableEventModal from '../modals/TimetableEventModal';\n\nconst TimetableEvent = ({\n  overlapGroup,\n  slot,\n  w,\n  h,\n  courseNames,\n  index,\n}: {\n  overlapGroup: TimetableSlot[];\n  slot: TimetableSlot;\n  w: number;\n  h: number;\n  courseNames: string[];\n  index: number;\n}) => {\n  const {setModal} = useContext(ModalContext);\n\n  const offset = useSharedValue(0);\n  const opacity = useSharedValue(0);\n  const textOpacity = useSharedValue(0);\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    opacity.value = 1;\n  }, []);\n\n  useEffect(() => {\n    offset.value = w;\n    if (w >= 60) {\n      setTimeout(() => {\n        textOpacity.value = 1;\n      }, 100);\n    }\n  }, [w]);\n\n  const animTextSectionStyle = useAnimatedStyle(() => {\n    return {opacity: withTiming(textOpacity.value, {duration: 500})};\n  });\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      width: withTiming(\n        overlapGroup.length > 0\n          ? offset.value / overlapGroup.length\n          : offset.value,\n        {duration: 250},\n      ),\n      left: withTiming(\n        overlapGroup.length > 0\n          ? index * (offset.value / overlapGroup.length)\n          : 0,\n        {duration: 250},\n      ),\n    };\n  });\n\n  return (\n    <Animated.View\n      onLayout={e => setWidth(e.nativeEvent.layout.width)}\n      style={[\n        {\n          overflow: 'hidden',\n          position: 'absolute',\n\n          top:\n            h +\n            (moment\n              .duration(\n                moment(slot.start_time).diff(\n                  moment(slot.start_time).set({\n                    h: 8,\n                    m: 0,\n                  }),\n                ),\n              )\n              .as('ms') /\n              (3600 * 1000)) *\n              h -\n            h / 2,\n\n          borderRadius: 4 * p,\n          backgroundColor:\n            courseColors[courseNames.findIndex(val => val == slot.course_name)],\n          height:\n            (moment.duration(slot.end_time - slot.start_time).as('ms') /\n              (3600 * 1000)) *\n            h,\n        },\n        animStyle,\n      ]}>\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          padding: 4 * p,\n        }}\n        onPress={() => {\n          setModal(<TimetableEventModal slot={slot} />);\n        }}>\n        {width >= 25 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <Text w={'r'} s={8 * p} c={colors.white} numberOfLines={2}>\n              {slot.course_name}\n            </Text>\n          </Animated.View>\n        ) : null}\n        {width >= 60 ? (\n          <Animated.View style={[animTextSectionStyle]}>\n            <View\n              style={{\n                flexDirection: 'row',\n                marginTop: 8 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"map-pin\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.room}\n              </Text>\n            </View>\n            <View\n              style={{\n                opacity: opacity.value,\n                flexDirection: 'row',\n                marginTop: 4 * p,\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                overflow: 'hidden',\n              }}>\n              <TablerIcon name=\"list\" size={8 * p} color={colors.gray50} />\n              <Text\n                w=\"r\"\n                s={8 * p}\n                c={colors.gray50}\n                numberOfLines={2}\n                style={{marginLeft: 2 * p}}>\n                {slot.type}\n              </Text>\n            </View>\n          </Animated.View>\n        ) : null}\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nexport default TimetableEvent;\n","import React, {FC, useContext, useMemo} from 'react';\nimport {View} from 'react-native';\nimport colors from '../../colors';\nimport moment from 'moment';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {p} from '../../scaling';\nimport {DeviceContext} from '../../context/Device';\nimport Text from '../../ui/core/Text';\nimport ModalBase from './ModalBase';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\n\nconst TimetableEventModal: FC<{slot: TimetableSlot}> = ({slot}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const items: {icon: string; name: string}[] = useMemo(() => {\n    return [\n      {\n        icon: 'map-pin',\n        name: slot.room,\n      },\n      {\n        icon: 'align-justified',\n        name: slot.type,\n      },\n      {\n        icon: 'clock',\n        name:\n          moment(slot.start_time).format('HH:mm') +\n          ' - ' +\n          moment(slot.end_time).format('HH:mm') +\n          ' (' +\n          moment(slot.start_time).format('ll') +\n          ')',\n      },\n      {\n        icon: 'user',\n        name: slot.professor.surname + ' ' + slot.professor.name,\n      },\n    ];\n  }, [slot]);\n\n  return (\n    <ModalBase title={slot.course_name}>\n      {items.map((item, i) => (\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            marginTop: (i == 0 ? 0 : 8) * p,\n          }}>\n          <TablerIcon\n            name={item.icon}\n            size={16 * p}\n            color={dark ? colors.gray300 : colors.gray600}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n            {item.name}\n          </Text>\n        </View>\n      ))}\n    </ModalBase>\n  );\n};\n\nexport default TimetableEventModal;\n","import moment, {Moment} from 'moment';\nimport React, {useEffect, useState} from 'react';\nimport {Dimensions, View} from 'react-native';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\n\nconst TimetableGrid = ({\n  showLine,\n  dark,\n}: {\n  showLine: boolean;\n  dark: boolean;\n}) => {\n  const [h, setH] = useState(Dimensions.get('window').height / 15);\n\n  // Used to update red line position\n  const [currentTime, setCurrentTime] = useState<Moment>(moment());\n  const [mounted, setMounted] = useState<boolean>(true);\n  const [updateTimeout, setUpdateTimeout] = useState<any>(null);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      if (updateTimeout) clearTimeout(updateTimeout);\n      setMounted(false);\n    };\n  }, []);\n\n  /**\n   * Update time every 10 seconds, which will ensure red line is always in correct position\n   */\n  useEffect(() => {\n    setTimeout(() => {\n      mounted && setCurrentTime(moment());\n    }, 10000);\n  }, [currentTime, mounted]);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingLeft: 8 * p,\n        paddingRight: 16 * p,\n        paddingBottom: 16 * p,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n      }}>\n      {showLine ? (\n        <View\n          style={{\n            zIndex: 300,\n            height: 0,\n            borderTopColor: colors.red,\n            borderBottomColor: colors.red,\n            backgroundColor: colors.red,\n            borderTopWidth: 0.5 * p,\n            borderBottomWidth: 0.5 * p,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            transform: [\n              {\n                translateY:\n                  h +\n                  (moment\n                    .duration(\n                      currentTime.diff(\n                        moment().set({\n                          h: 8,\n                          m: 0,\n                        }),\n                      ),\n                    )\n                    .as('ms') /\n                    (3600 * 1000)) *\n                    h -\n                  h / 2,\n              },\n            ],\n          }}>\n          <View\n            style={{\n              backgroundColor: colors.red,\n              width: 8 * p,\n              height: 8 * p,\n              borderRadius: 16 * p,\n            }}></View>\n        </View>\n      ) : null}\n      {Array.from({length: 14}).map((_, index) => (\n        <View\n          key={index}\n          style={{\n            zIndex: 100,\n            width: '100%',\n            height: index == 0 ? h / 2 : h,\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            alignItems: 'flex-end',\n          }}>\n          <Text\n            s={8 * p}\n            c={dark ? colors.gray200 : colors.gray700}\n            w=\"r\"\n            style={{\n              transform: [{translateY: 4 * p}],\n            }}>\n            {`${8 + index}:00`}\n          </Text>\n          <View\n            style={{\n              flex: 1,\n              // width: '100%',\n              borderBottomWidth: 0.5 * p,\n              borderColor: dark ? colors.gray500 : colors.gray200,\n              marginLeft: 4 * p,\n\n              height: h,\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'flex-end',\n            }}\n          />\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default TimetableGrid;\n","import React, {useContext, useMemo} from 'react';\nimport {Platform, Pressable, View} from 'react-native';\nimport colors from '../../colors';\nimport {TimetableSlot} from 'open-polito-api/lib/timetable';\nimport moment from 'moment';\nimport {useTranslation} from 'react-i18next';\nimport Toggles from '../../ui/HorizontalIconSelector';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Text from '../../ui/core/Text';\nimport {DeviceContext} from '../../context/Device';\nimport {p} from '../../scaling';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {ModalContext} from '../../context/ModalProvider';\nimport TimetableOptionsModal from '../modals/TimetableOptionsModal';\n\nconst showDatePicker = (callback: (date: number | undefined) => any) => {\n  DateTimePickerAndroid.open({\n    mode: 'date',\n    value: new Date(),\n    onChange: date => callback(date.nativeEvent.timestamp),\n  });\n};\n\nconst TimetableHeader = ({\n  selectedDay = null,\n  timetableDays,\n  weekStartDate,\n  onLayoutChanged,\n  onDayChanged,\n  onWeekStartDateChanged,\n}: {\n  selectedDay: number | null;\n  timetableDays: TimetableSlot[][];\n  weekStartDate: Date | null;\n  onLayoutChanged: Function;\n  onDayChanged: Function;\n  onWeekStartDateChanged: Function;\n}) => {\n  const {t} = useTranslation();\n\n  const {dark} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const _onLayoutChanged = (value: string) => {\n    onLayoutChanged(value);\n  };\n\n  const _onDayChanged = (value: number) => {\n    onDayChanged(value);\n  };\n\n  const _onWeekStartDateChanged = (value: Date) => {\n    opacity.value = withSequence(\n      withTiming(0, {duration: 250}),\n      withTiming(1, {duration: 250}),\n    );\n    onWeekStartDateChanged(value);\n  };\n\n  const opacity = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {opacity: opacity.value};\n  });\n\n  const headerTitle: string = useMemo(() => {\n    const weekStartMoment = moment(weekStartDate);\n    const weekEndMoment = moment(weekStartDate).add(4, 'day');\n    return weekStartDate\n      ? weekStartDate.getTime() == moment().startOf('w').toDate().getTime()\n        ? t('thisWeek')\n        : `${weekStartMoment.get('date')} ${\n            weekStartMoment.get('month') != weekEndMoment.get('month')\n              ? weekStartMoment.format('MMM ')\n              : ''\n          }${\n            weekStartMoment.get('year') != weekEndMoment.get('year')\n              ? weekStartMoment.format('YYYY ')\n              : ''\n          }- ${weekEndMoment.format('D MMM YYYY')}`\n      : t('thisWeek');\n  }, [weekStartDate, t]);\n\n  return (\n    <View style={{borderBottomWidth: 1 * p, borderBottomColor: colors.gray200}}>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        {Platform.OS === 'android' ? (\n          <Button\n            secondary\n            small\n            text={t('jumpToDate')}\n            icon=\"chevrons-right\"\n            onPress={() =>\n              showDatePicker(date => {\n                if (!date) return;\n                _onWeekStartDateChanged(new Date(date));\n              })\n            }\n          />\n        ) : (\n          <View />\n        )}\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <Toggles\n            defaultValue=\"week\"\n            onValueChange={(value: string) => {\n              _onLayoutChanged(value);\n            }}\n            label=\"Layout:\"\n            items={[\n              {icon: 'layout-rows', value: 'day'},\n              {icon: 'layout-columns', value: 'week'},\n            ]}\n            dark={dark}\n          />\n          <TouchableOpacity style={{marginLeft: 24 * p}}>\n            <TablerIcon\n              onPress={() => setModal(<TimetableOptionsModal />)}\n              name=\"settings\"\n              size={20 * p}\n              color={dark ? colors.gray100 : colors.gray800}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View\n        style={{\n          marginBottom: 16 * p,\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(\n              moment(weekStartDate).subtract(1, 'w').toDate(),\n            )\n          }>\n          <TablerIcon\n            name=\"arrow-left\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n        <Animated.View style={[animStyle]}>\n          <Text c={dark ? colors.gray100 : colors.gray800} s={12 * p} w=\"m\">\n            {headerTitle}\n          </Text>\n        </Animated.View>\n        <Pressable\n          onPress={() =>\n            _onWeekStartDateChanged(moment(weekStartDate).add(1, 'w').toDate())\n          }>\n          <TablerIcon\n            name=\"arrow-right\"\n            size={24 * p}\n            color={dark ? colors.gray100 : colors.gray800}\n          />\n        </Pressable>\n      </View>\n      <View\n        style={{\n          // ...styles.withHorizontalPadding,\n          marginLeft: 12,\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'space-around',\n          paddingBottom: 12,\n        }}>\n        {timetableDays.slice(1, 6).map((day, index) => (\n          <Pressable\n            onPress={() => {\n              _onDayChanged(index + 1);\n            }}\n            key={index}\n            style={{\n              opacity: weekStartDate ? 1 : 0,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              paddingHorizontal: 12,\n              paddingVertical: 4,\n              borderRadius: 4,\n              backgroundColor:\n                selectedDay == index + 1\n                  ? colors.accent300\n                  : dark\n                  ? colors.gray700\n                  : colors.gray200,\n            }}>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray800\n              }>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').format('ddd')\n                : ''}\n            </Text>\n            <Text\n              s={10 * p}\n              w=\"r\"\n              c={\n                selectedDay == index + 1\n                  ? colors.gray100\n                  : dark\n                  ? colors.gray100\n                  : colors.gray700\n              }\n              key={index}>\n              {weekStartDate\n                ? moment(weekStartDate).add(index, 'd').date()\n                : ''}\n            </Text>\n          </Pressable>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default TimetableHeader;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nconst HorizontalIconSelector = ({\n  items,\n  label = '',\n  onValueChange,\n  defaultValue = items[0].value,\n  dark,\n}: {\n  items: {icon: string; value: string}[];\n  label?: string;\n  onValueChange: Function;\n  defaultValue?: string;\n  dark: boolean;\n}) => {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    onValueChange(value);\n  }, [value]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n      }}>\n      {label ? (\n        <Text\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginRight: 4 * p}}>\n          {label}\n        </Text>\n      ) : null}\n      <View\n        style={{\n          flexDirection: 'row',\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n          marginLeft: 4 * p,\n          borderRadius: 4 * p,\n        }}>\n        {items.map((item, i) => (\n          <PressableBase\n            onPress={() => {\n              setValue(item.value);\n            }}\n            key={item.value}\n            style={[\n              {\n                backgroundColor:\n                  item.value == value ? colors.accent300 : 'rgba(0,0,0,0)',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: 4 * p,\n              },\n              i === 0\n                ? {\n                    borderTopLeftRadius: 4 * p,\n                    borderBottomLeftRadius: 4 * p,\n                  }\n                : i === items.length - 1\n                ? {\n                    borderTopRightRadius: 4 * p,\n                    borderBottomRightRadius: 4 * p,\n                  }\n                : {},\n            ]}>\n            <TablerIcon\n              name={item.icon}\n              size={16 * p}\n              color={\n                item.value == value\n                  ? colors.gray50\n                  : dark\n                  ? colors.gray200\n                  : colors.gray700\n              }\n            />\n          </PressableBase>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default HorizontalIconSelector;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ActivityIndicator, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Configuration} from '../../defaultConfig';\nimport {setConfig} from '../../store/sessionSlice';\nimport {AppDispatch, RootState} from '../../store/store';\nimport ListRank from '../ListRank';\nimport SettingsItem, {SettingsItemProps} from '../../ui/SettingsItem';\nimport {DeviceContext} from '../../context/Device';\nimport ModalBase from './ModalBase';\nimport colors from '../../colors';\n\nconst TimetableOptionsModal = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const [showListRank, setShowListRank] = useState(false);\n\n  //  Ugly hack to make the modal actually show.\n  //  If I render the children elements immediately,\n  //  for some reason the whole modal won't render.\n  //  The problem seems to be caused by the draggable elements,\n  //  but for now this fix does the job.\n  useEffect(() => {\n    setTimeout(() => setShowListRank(true), 0);\n  }, []);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const rankItems = useMemo(() => {\n    return config.timetablePriority.map(item => {\n      return {label: item, value: item};\n    });\n  }, [config]);\n\n  const toggleOverlapMode = useCallback(() => {\n    const mode: Configuration['timetableOverlap'] =\n      config.timetableOverlap === 'split' ? 'priority' : 'split';\n    dispatch(setConfig({...config, timetableOverlap: mode}));\n  }, [config, dispatch]);\n\n  const timetableOptionsItems = useMemo<SettingsItemProps[]>(() => {\n    return [\n      {\n        name: t('timetablePriority'),\n        description: t('timetablePriorityDesc'),\n        icon: 'stack-2',\n        toggle: true,\n        toggleValue: config.timetableOverlap === 'priority',\n        settingsFunction: toggleOverlapMode,\n      },\n      {\n        name: t('timetablePriorityList'),\n        settingsFunction: () => {},\n        disabled: config.timetableOverlap !== 'priority',\n        children: (\n          <View>\n            <ListRank\n              dark={dark}\n              disabled={config.timetableOverlap !== 'priority'}\n              items={rankItems}\n              callback={data =>\n                dispatch(\n                  setConfig({\n                    ...config,\n                    timetablePriority: data.filter(d => d !== ''),\n                  }),\n                )\n              }\n            />\n          </View>\n        ),\n        paddingBottom: false,\n      },\n    ];\n  }, [config, dark, dispatch, rankItems, t, toggleOverlapMode]);\n\n  return (\n    <ModalBase title={t('timetableOptions')}>\n      <View>\n        {showListRank ? (\n          timetableOptionsItems.map(item => (\n            <SettingsItem key={item.name} {...item} />\n          ))\n        ) : (\n          <ActivityIndicator color={colors.accent300} />\n        )}\n      </View>\n    </ModalBase>\n  );\n};\n\nexport default TimetableOptionsModal;\n","import React, {useEffect, useState} from 'react';\nimport {View} from 'react-native';\nimport DraggableFlatList, {\n  RenderItemParams,\n  ScaleDecorator,\n} from 'react-native-draggable-flatlist';\nimport {TouchableOpacity} from 'react-native';\nimport colors from '../colors';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst ListRank = ({\n  items,\n  callback,\n  disabled,\n  dark,\n}: {\n  items: Array<{label: string; value: string}>;\n  callback: (data: string[]) => void;\n  disabled: boolean;\n  dark: boolean;\n}) => {\n  const [data, setData] = useState(items);\n\n  useEffect(() => {\n    callback(data.map(item => item.label));\n  }, [data]);\n\n  const renderItem = ({\n    item,\n    index,\n    drag,\n  }: RenderItemParams<{label: string; value: string}>) => {\n    return (\n      <ScaleDecorator>\n        <TouchableOpacity\n          disabled={disabled}\n          onLongPress={drag}\n          onPressIn={drag}\n          onPress={drag}\n          style={{\n            paddingVertical: 4 * p,\n          }}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              marginLeft: 0 * p,\n              opacity: disabled ? 0.5 : 1,\n            }}>\n            <TablerIcon\n              name=\"grid-dots\"\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n            <View style={{marginLeft: 8 * p}}>\n              <Text s={12 * p} c={dark ? colors.gray100 : colors.gray800} w=\"r\">\n                {item.label}\n              </Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      </ScaleDecorator>\n    );\n  };\n\n  return (\n    <GestureHandlerRootView>\n      <DraggableFlatList\n        onDragEnd={({data}) => setData(data)}\n        data={data}\n        keyExtractor={item => item.value}\n        renderItem={renderItem}\n      />\n    </GestureHandlerRootView>\n  );\n};\n\nexport default ListRank;\n","import {PermanentMark, ProvisionalMark} from 'open-polito-api/lib/courses';\nimport React, {useContext, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {RootState} from '../store/store';\nimport {CoursesState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {DeviceContext} from '../context/Device';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {p} from '../scaling';\nimport Text from '../ui/core/Text';\nimport Section from '../ui/Section';\nimport NoContent from '../ui/NoContent';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport moment from 'moment';\nimport i18next from 'i18next';\nimport ProgressCircle from '../ui/ProgressCircle';\nimport Progress from '../components/exams/Progress';\nimport openURL from '../utils/openUrl';\n\nconst tabs = ['overview', 'permanentMarks', 'provisionalMarks'];\n\nconst get_avg = (marks: PermanentMark[]) => {\n  const _marks = marks.filter(mark => !!parseInt(mark.mark || ''));\n\n  const total_credits = _marks.reduce((acc, mark) => {\n    return acc + mark.num_credits;\n  }, 0);\n\n  return parseFloat(\n    (\n      _marks.reduce((acc, mark) => {\n        return acc + parseInt(mark.mark) * mark.num_credits;\n      }, 0) / total_credits\n    ).toFixed(2),\n  );\n};\n\nconst Exams = () => {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const {marks} = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const [tab, setTab] = useState<string>(tabs[0]);\n\n  const filteredMarks = useMemo<(PermanentMark | ProvisionalMark)[]>(() => {\n    if (tab == tabs[1]) return marks.permanent;\n    if (tab == tabs[2]) return marks.provisional;\n    return [];\n  }, [marks, tab]);\n\n  const avg = useMemo(() => get_avg(marks.permanent), [marks]);\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  return (\n    <Screen>\n      <Header title={t('exams')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => ({label: t(tab), value: tab}))}\n        onChange={idx => setTab(tabs[idx])}\n      />\n\n      <View style={styles.container}>\n        {tab == tabs[2] ? (\n          <View style={styles.paddingHorizontal}>\n            <TouchableOpacity\n              onPress={async () =>\n                await openURL('https://didattica.polito.it/img/RE_stati.jpg')\n              }\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 16 * p,\n              }}>\n              <TablerIcon\n                name=\"help\"\n                size={12 * p}\n                color={dark ? colors.gray200 : colors.gray700}\n                style={{marginRight: 8 * p}}\n              />\n              <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n                {t('statusCodeHelp')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        ) : null}\n        {tab == tabs[0] ? (\n          <View style={styles.list}>\n            <AvgWidget avg={avg} dark={dark} />\n            <View\n              style={{\n                height: 1 * p,\n                backgroundColor: colors.gray500,\n                marginVertical: 24 * p,\n              }}\n            />\n            <Section title={t('progressOverTime')} dark={dark}>\n              <View>\n                <Progress marks={marks.permanent || []} dark={dark} />\n              </View>\n            </Section>\n          </View>\n        ) : (\n          <FlatList\n            contentContainerStyle={styles.list}\n            data={filteredMarks}\n            keyExtractor={item => item.date + item.name}\n            renderItem={({item}) => (\n              <MarkWidget\n                mark={\n                  tab == tabs[1]\n                    ? (item as PermanentMark)\n                    : (item as ProvisionalMark)\n                }\n                provisional={tab == tabs[2]}\n                dark={dark}\n              />\n            )}\n            ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n            ListEmptyComponent={<NoContent />}\n          />\n        )}\n      </View>\n    </Screen>\n  );\n};\n\nconst AvgWidget = ({avg, dark}: {avg: number; dark: boolean}) => {\n  const {t} = useTranslation();\n\n  return (\n    <View style={{flexDirection: 'row', alignItems: 'center'}}>\n      <ProgressCircle\n        strokeWidth={8 * p}\n        radius={30 * p}\n        value={avg}\n        dark={dark}\n        max={30}\n      />\n      <View style={{marginLeft: 16 * p}}>\n        <Text\n          s={16 * p}\n          w=\"m\"\n          c={dark ? colors.gray100 : colors.gray800}\n          style={{marginBottom: 8 * p}}>\n          {t('yourAverageMark')}*\n        </Text>\n        <Text s={10 * p} w=\"r\" c={dark ? colors.gray300 : colors.gray600}>\n          *{t('yourAverageMarkNotice')}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst MarkWidget = ({\n  mark,\n  provisional,\n  dark,\n}: {\n  mark: PermanentMark | ProvisionalMark;\n  provisional: boolean;\n  dark: boolean;\n}) => {\n  const fields = useMemo(\n    () => getFields(mark, provisional, dark),\n    [mark, provisional, dark],\n  );\n  const {t} = useTranslation();\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        padding: 16 * p,\n        borderRadius: 4 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        alignItems: 'flex-start',\n      }}>\n      <View style={{flexDirection: 'column', flex: 1}}>\n        <View style={{flexDirection: 'row'}}>\n          {provisional ? (\n            <View\n              style={{\n                width: 16 * p,\n                height: 16 * p,\n                borderRadius: 16 * p,\n                marginRight: 8 * p,\n                backgroundColor: colors.gray200,\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}>\n              <Text s={10} w=\"b\" c={colors.gray900}>\n                {(mark as ProvisionalMark).status}\n              </Text>\n            </View>\n          ) : null}\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {mark.name}\n          </Text>\n        </View>\n\n        <View\n          style={{\n            flexDirection: provisional ? 'column' : 'row',\n            marginTop: 16 * p,\n          }}>\n          {fields}\n        </View>\n      </View>\n      {parseInt(mark.mark!) ? (\n        <ProgressCircle\n          radius={20 * p}\n          value={parseInt(mark.mark!)}\n          max={30}\n          dark={dark}>\n          {(mark.mark?.toLowerCase() === '30 e lode' ||\n            parseInt(mark.mark!) > 30) && (\n            <>\n              <Text\n                style={{marginTop: -4 * p}} // make the text fit better\n                s={8 * p}\n                c={dark ? colors.gray100 : colors.gray800}\n                w=\"b\">\n                LODE\n              </Text>\n            </>\n          )}\n        </ProgressCircle>\n      ) : (\n        <View\n          style={[\n            {\n              padding: 8 * p,\n              borderRadius: 4 * p,\n              backgroundColor: colors.accent300,\n            },\n            !mark.mark ||\n            (mark as ProvisionalMark).failed ||\n            (mark as ProvisionalMark).absent\n              ? {\n                  backgroundColor: colors.red,\n                }\n              : null,\n          ]}>\n          {(mark as ProvisionalMark).failed ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examFailed')}\n            </Text>\n          ) : null}\n          {(mark as ProvisionalMark).absent ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {t('examAbsent')}\n            </Text>\n          ) : null}\n          {mark.mark ? (\n            <Text s={12} w=\"m\" c={colors.gray100}>\n              {mark.mark}\n            </Text>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst getFields = (\n  mark: PermanentMark | ProvisionalMark,\n  provisional: boolean,\n  dark: boolean,\n) => {\n  const perm_fields = ['date', 'credits'];\n  const prov_fields = ['date', 'message'];\n\n  const fields = provisional ? prov_fields : perm_fields;\n\n  let icons: string[] = [];\n  let values: string[] = [];\n\n  fields.forEach(name => {\n    switch (name) {\n      case 'date':\n        icons.push('calendar-time');\n        values.push(moment(mark.date).format('ll'));\n        break;\n      case 'credits':\n        icons.push('north-star');\n        values.push(\n          (mark as PermanentMark).num_credits + ' ' + i18next.t('credits'),\n        );\n        break;\n      case 'message':\n        icons.push('message');\n        values.push((mark as ProvisionalMark).message || '');\n        break;\n      default:\n        icons.push('');\n        values.push('');\n        break;\n    }\n  });\n\n  return fields.map((name, i) => (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          alignItems: name == 'message' ? 'flex-start' : 'center',\n          flex: 1,\n        },\n        provisional && i > 0 ? {marginTop: 8 * p} : {},\n      ]}>\n      <TablerIcon\n        name={icons[i]}\n        size={16 * p}\n        color={dark ? colors.gray200 : colors.gray700}\n        style={{marginRight: 8 * p}}\n      />\n      <Text\n        style={{marginRight: 8 * p}}\n        s={10 * p}\n        w=\"r\"\n        c={dark ? colors.gray200 : colors.gray700}>\n        {values[i] || ''}\n      </Text>\n    </View>\n  ));\n};\n\nexport default Exams;\n","import React, {ReactNode, useMemo, useState} from 'react';\nimport {View} from 'react-native';\nimport Svg, {Circle} from 'react-native-svg';\nimport colors, {Color} from '../colors';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst ProgressCircle = ({\n  label, // Optional label to display instead of the value\n  value,\n  max,\n  radius,\n  strokeWidth = 4 * p,\n  fontSize,\n  backgroundColor,\n  dark,\n  children,\n}: {\n  label?: string | null;\n  value: number | string;\n  max: number;\n  radius: number;\n  strokeWidth?: number;\n  fontSize?: number;\n  backgroundColor?: Color;\n  dark: boolean;\n  children?: ReactNode;\n}) => {\n  const circ = 2 * Math.PI * radius;\n\n  const _value = useMemo(() => {\n    return value <= max ? value : max; // Avoid going over max value\n  }, [value, max]);\n\n  return (\n    <View style={{position: 'relative'}}>\n      <Svg\n        width={2 * (radius + strokeWidth)}\n        height={2 * (radius + strokeWidth)}>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={backgroundColor || 'transparent'}\n          stroke={dark ? colors.gray700 : colors.gray200}\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n        <Circle\n          transform={`rotate(-90 ${radius + strokeWidth} ${\n            radius + strokeWidth\n          })`}\n          strokeWidth={strokeWidth}\n          fill={'transparent'}\n          stroke={colors.accent300}\n          strokeDasharray={circ}\n          strokeDashoffset={\n            typeof _value === 'number'\n              ? ((100 - (100 * _value) / max) * circ) / 100\n              : 0\n          }\n          r={radius}\n          cx={radius + strokeWidth}\n          cy={radius + strokeWidth}></Circle>\n      </Svg>\n      <View\n        style={{\n          position: 'absolute',\n          width: 2 * (radius + strokeWidth),\n          height: 2 * (radius + strokeWidth),\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Text\n          s={\n            fontSize || (label || typeof _value === 'string' ? 10 * p : 16 * p)\n          }\n          c={dark ? colors.gray100 : colors.gray800}\n          w=\"b\">\n          {label || _value}\n        </Text>\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default ProgressCircle;\n","import moment from 'moment';\nimport {PermanentMark} from 'open-polito-api/lib/courses';\nimport React, {useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useWindowDimensions, View} from 'react-native';\nimport LineChart, {\n  LineChartData,\n} from 'react-native-chart-kit/dist/line-chart/LineChart';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport Text from '../../ui/core/Text';\n\nconst Progress = ({marks, dark}: {marks: PermanentMark[]; dark: boolean}) => {\n  const {t} = useTranslation();\n  const width = useWindowDimensions().width;\n\n  /**\n   * Marks sorted by date ascending and filtered to be at most 1 year ago\n   */\n  const sorted_marks = useMemo(() => {\n    return [\n      ...marks.filter(\n        mark =>\n          parseInt(mark.mark) &&\n          moment.duration(Date.now() - mark.date).asDays() <= 365,\n      ),\n    ].sort((mark1, mark2) => mark1.date - mark2.date);\n  }, [marks]);\n\n  /**\n   * Weighted averages over time\n   */\n  const avgs = useMemo(() => {\n    let _avgs = new Array<number>(sorted_marks.length);\n    let weights = 0; // Cumulative weight counter\n\n    for (let i = 0; i < sorted_marks.length; i++) {\n      if (i == 0) {\n        weights += sorted_marks[i].num_credits;\n        _avgs[i] = parseInt(sorted_marks[i].mark) || 0;\n      } else {\n        _avgs[i] =\n          (_avgs[i - 1] * weights +\n            (parseInt(sorted_marks[i].mark) || 0) *\n              sorted_marks[i].num_credits) /\n          (weights + sorted_marks[i].num_credits);\n        weights += sorted_marks[i].num_credits;\n      }\n    }\n\n    return _avgs;\n  }, [sorted_marks]);\n\n  /**\n   * Data for the chart\n   */\n  const data = useMemo<LineChartData>(\n    () => ({\n      labels: sorted_marks.map(mark => moment(mark.date).format('MMM D')),\n      datasets: [\n        {\n          data: avgs,\n          color: () => colors.accent300,\n          strokeWidth: 2 * p,\n        },\n      ],\n      legend: [t('weightedAverage')],\n    }),\n    [sorted_marks, avgs, t],\n  );\n\n  return sorted_marks.length == 0 ? (\n    <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n      <Text s={12} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n        You'll see your progress when you get at least 1 permament mark.\n      </Text>\n    </View>\n  ) : (\n    <LineChart\n      data={data}\n      width={width}\n      height={220}\n      yAxisInterval={1}\n      chartConfig={{\n        backgroundColor: '#e26a00',\n        backgroundGradientFrom: colors.gray900,\n        backgroundGradientTo: colors.gray700,\n        decimalPlaces: 2,\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        style: {\n          borderRadius: 16,\n        },\n        propsForDots: {\n          r: '6',\n          strokeWidth: '2',\n          stroke: colors.accent300,\n        },\n      }}\n      style={{\n        borderRadius: 4 * p,\n        transform: [{translateX: -16 * p}],\n      }}\n    />\n  );\n};\n\nexport default Progress;\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FlatList, RefreshControl, TouchableOpacity, View} from 'react-native';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport colors from '../colors';\nimport moment from 'moment';\nimport * as RNLocalize from 'react-native-localize';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppDispatch, RootState} from '../store/store';\nimport {ExamsState, getExams} from '../store/examsSlice';\nimport {STATUS} from '../store/status';\nimport {DeviceContext} from '../context/Device';\nimport Screen from '../ui/Screen';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\nimport NoContent from '../ui/NoContent';\nimport ExamsBookExamModal from '../components/modals/ExamsBookExamModal';\nimport ExamsCancelExamModal from '../components/modals/ExamsCancelExamModal';\nimport {ModalContext} from '../context/ModalProvider';\n\nconst isExamBooked = (examSession: ExamSession): boolean => {\n  return examSession.user_is_signed_up;\n};\n\nconst isExamAvailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id === 0;\n};\n\nconst isExamUnavailable = (examSession: ExamSession): boolean => {\n  return !examSession.user_is_signed_up && examSession.error.id !== 0;\n};\n\nconst tabs = ['allExams', 'myBookings', 'availableToBook', 'unavailableExams'];\n\nexport default function ExamSessions() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const {dark, device} = useContext(DeviceContext);\n  const {setModal} = useContext(ModalContext);\n\n  const {exams, getExamsStatus} = useSelector<RootState, ExamsState>(\n    state => state.exams,\n  );\n\n  const [tab, setTab] = useState(tabs[0]);\n\n  const [errorMsgLanguage, setErrorMsgLanguage] = useState('en');\n\n  // Initial setup\n  useEffect(() => {\n    if (\n      getExamsStatus.code === STATUS.IDLE ||\n      getExamsStatus.code === STATUS.ERROR\n    ) {\n      dispatch(getExams(device));\n    }\n    (async () => {\n      // Set language for error messages\n      switch (RNLocalize.getLocales()[0].languageCode) {\n        case 'en':\n          setErrorMsgLanguage('en');\n          break;\n        case 'it':\n          setErrorMsgLanguage('it');\n          break;\n        default:\n          setErrorMsgLanguage('en');\n          break;\n      }\n    })();\n  }, [device, dispatch, getExamsStatus.code]);\n\n  /**\n   * Refresh exams\n   */\n  const refresh = useMemo(() => {\n    if (getExamsStatus.code !== STATUS.PENDING) {\n      dispatch(getExams(device));\n    }\n  }, [getExamsStatus, device, dispatch]);\n\n  // If tab or exams change, re-filter the exam sessions based on the active tab\n  const filteredSessions = useMemo(() => {\n    switch (tab) {\n      case tabs[0]:\n        return exams;\n      case tabs[1]:\n        return exams.filter(e => isExamBooked(e));\n      case tabs[2]:\n        return exams.filter(e => isExamAvailable(e));\n      case tabs[3]:\n        return exams.filter(e => isExamUnavailable(e));\n      default:\n        return [];\n    }\n  }, [tab, exams]);\n\n  const buildField = (type: string, e: ExamSession) => {\n    const icon =\n      type === 'date'\n        ? 'calendar-time'\n        : type === 'course'\n        ? 'grid-pattern'\n        : type === 'type'\n        ? 'writing'\n        : type === 'deadline'\n        ? 'alert-triangle'\n        : type === 'rooms'\n        ? 'map-pin'\n        : 'user-circle';\n    const text =\n      type === 'date'\n        ? `${moment(e.date).format('lll')} (${moment(e.date).fromNow()})`\n        : type === 'course'\n        ? e.course_id\n        : type === 'type'\n        ? e.type\n        : type === 'deadline'\n        ? `${t('bookingDeadline')}: ${moment(e.signup_deadline).format(\n            'lll',\n          )} (${moment(e.signup_deadline).fromNow()})`\n        : type === 'rooms'\n        ? e.rooms.join(', ')\n        : '(coming soon)';\n    return (\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginBottom: 8 * p,\n        }}>\n        <TablerIcon\n          name={icon}\n          size={16 * p}\n          color={dark ? colors.gray200 : colors.gray700}\n          style={{marginRight: 8 * p}}\n        />\n        <Text\n          numberOfLines={1}\n          style={{marginRight: 8 * p}}\n          s={10 * p}\n          w=\"r\"\n          c={dark ? colors.gray200 : colors.gray700}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  const examSessionCard = (examSession: ExamSession) => (\n    <View style={{flexDirection: 'row'}}>\n      <View\n        style={{\n          flexDirection: 'column',\n          flex: 1,\n          padding: 16 * p,\n          paddingRight: 8 * p,\n          paddingBottom: 8 * p,\n          borderTopLeftRadius: 4 * p,\n          borderBottomLeftRadius: 4 * p,\n          backgroundColor: dark ? colors.gray700 : colors.gray200,\n        }}>\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <TablerIcon\n            name={\n              examSession.user_is_signed_up\n                ? 'circle-check'\n                : examSession.error.id === 0\n                ? 'circle'\n                : 'circle-off'\n            }\n            color={\n              examSession.user_is_signed_up\n                ? colors.green\n                : examSession.error.id === 0\n                ? colors.accent200\n                : colors.red\n            }\n            size={24 * p}\n            style={{marginRight: 8 * p}}\n          />\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray200 : colors.gray700}>\n            {examSession.exam_name}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: 'column',\n            marginTop: 16 * p,\n          }}>\n          {['course', 'date', 'deadline', 'rooms'].map(field =>\n            buildField(field, examSession),\n          )}\n        </View>\n        {examSession.error.id !== 0 &&\n        (examSession.error.eng !== '' || examSession.error.ita !== '') ? (\n          <Text s={10 * p} w=\"r\" c={colors.red} style={{marginVertical: 8 * p}}>\n            {errorMsgLanguage === 'it'\n              ? examSession.error.ita\n              : examSession.error.eng}\n          </Text>\n        ) : null}\n      </View>\n      <View\n        style={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          borderTopRightRadius: 4 * p,\n          borderBottomRightRadius: 4 * p,\n          backgroundColor: dark ? colors.gray600 : colors.gray300,\n        }}>\n        {isExamAvailable(examSession) || isExamBooked(examSession) ? (\n          <TouchableOpacity\n            onPress={() =>\n              setModal(\n                isExamAvailable(examSession) ? (\n                  <ExamsBookExamModal examSession={examSession} />\n                ) : (\n                  <ExamsCancelExamModal examSession={examSession} />\n                ),\n              )\n            }>\n            <View\n              style={{\n                flexDirection: 'column',\n                alignItems: 'center',\n                padding: 8 * p,\n              }}>\n              <View style={{marginBottom: 4 * p}}>\n                <TablerIcon\n                  name={\n                    isExamAvailable(examSession) ? 'circle-plus' : 'circle-x'\n                  }\n                  color={\n                    isExamAvailable(examSession) ? colors.accent300 : colors.red\n                  }\n                  size={20 * p}\n                />\n              </View>\n              <Text\n                s={10 * p}\n                w=\"m\"\n                c={\n                  isExamAvailable(examSession) ? colors.accent300 : colors.red\n                }>\n                {t(isExamAvailable(examSession) ? 'bookVerb' : 'cancel')}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    </View>\n  );\n\n  return (\n    <Screen>\n      <Header title={t('examSessions')} headerType={HEADER_TYPE.MAIN} />\n      <Tabs\n        dark={dark}\n        adjusted\n        items={tabs.map(tab => {\n          return {label: t(tab), value: tab};\n        })}\n        onChange={idx => setTab(tabs[idx])}\n      />\n      <FlatList\n        contentContainerStyle={{\n          paddingTop: 24 * p,\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        }}\n        data={filteredSessions}\n        keyExtractor={item => item.session_id + item.course_id + item.date}\n        renderItem={({item}) => examSessionCard(item)}\n        ItemSeparatorComponent={() => <View style={{height: 16 * p}} />}\n        ListEmptyComponent={<NoContent />}\n        refreshing={getExamsStatus.code == STATUS.PENDING}\n        refreshControl={\n          <RefreshControl\n            refreshing={getExamsStatus.code == STATUS.PENDING}\n            onRefresh={refresh}\n          />\n        }\n      />\n    </Screen>\n  );\n}\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {bookExamSession, ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {Device} from 'open-polito-api/lib/device';\nimport {DeviceContext} from '../../context/Device';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\n\nconst bookExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await bookExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamBookedToastMessage'\n              : 'examsExamBookingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsBookExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('confirmExamBooking')}\n      onConfirm={() => bookExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('confirmExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsBookExamModal;\n","import React, {useContext} from 'react';\nimport i18next, {t} from 'i18next';\nimport colors from '../../colors';\nimport BaseActionConfirmModal from './BaseActionConfirmModal';\nimport {RenderHTMLSource} from 'react-native-render-html';\nimport moment from 'moment';\nimport {Device} from 'open-polito-api/lib/device';\nimport {ExamSession} from 'open-polito-api/lib/exam_sessions';\nimport {cancelExamSession} from 'open-polito-api/lib/exam_sessions';\nimport store from '../../store/store';\nimport {setToast} from '../../store/sessionSlice';\nimport {DeviceContext} from '../../context/Device';\n\nconst cancelExamSync = (\n  device: Device,\n  examSession: ExamSession,\n  callback: () => any = () => {},\n) => {\n  (async () => {\n    let success: boolean = false;\n    try {\n      await cancelExamSession(\n        device,\n        examSession.session_id,\n        examSession.course_id,\n      );\n      success = true;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      store.dispatch(\n        setToast({\n          visible: true,\n          message: i18next.t(\n            success\n              ? 'examsExamCanceledToastMessage'\n              : 'examsExamCancelingErrorToastMessage',\n          ),\n          type: success ? 'success' : 'err',\n        }),\n      );\n      callback();\n    }\n  })();\n};\n\nconst ExamsCancelExamModal = ({examSession}: {examSession: ExamSession}) => {\n  const {device} = useContext(DeviceContext);\n  return (\n    <BaseActionConfirmModal\n      title={t('cancelExamBooking')}\n      accentColor={colors.red}\n      icon=\"alert-triangle\"\n      onConfirm={() => cancelExamSync(device, examSession)}>\n      <RenderHTMLSource\n        source={{\n          html: t('cancelExamBookingDialogMessage', {\n            code: examSession.course_id,\n            name: examSession.exam_name,\n            date: moment(examSession.date).format('lll'),\n            rooms: examSession.rooms,\n          }),\n        }}\n      />\n    </BaseActionConfirmModal>\n  );\n};\n\nexport default ExamsCancelExamModal;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Maps = () => {\n  return <View></View>;\n};\n\nexport default Maps;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst Classrooms = () => {\n  return <View></View>;\n};\n\nexport default Classrooms;\n","import React from 'react';\nimport {View} from 'react-native';\n\n// TODO implement\n\nconst People = () => {\n  return <View></View>;\n};\n\nexport default People;\n","import React, {useCallback, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ScrollView, StyleSheet, View} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport {RootState} from '../store/store';\nimport {CourseState} from '../store/coursesSlice';\nimport Screen from '../ui/Screen';\nimport {p} from '../scaling';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Section from '../ui/Section';\nimport PressableCard from '../ui/core/PressableCard';\n\nexport default function Courses({navigation}) {\n  const {t} = useTranslation();\n  const {dark} = useContext(DeviceContext);\n\n  const courses = useSelector<RootState, CourseState[]>(\n    state => state.courses.courses,\n  );\n\n  const gotoCourse = useCallback(\n    (course: CourseState) => {\n      navigation.navigate('Course', {\n        courseCode: course.basicInfo.code + course.basicInfo.name,\n      });\n    },\n    [navigation],\n  );\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        marginTop: 24 * p,\n        paddingHorizontal: 16 * p,\n        paddingBottom: 16 * p,\n      },\n    });\n  }, []);\n\n  return (\n    <Screen>\n      <Header title={t('courses')} headerType={HEADER_TYPE.MAIN} />\n      <ScrollView>\n        <View style={_styles.container}>\n          {courses\n            .filter(course => course.isMain)\n            .map(mainCourse => (\n              <PressableCard\n                dark={dark}\n                onPress={() => gotoCourse(mainCourse)}\n                key={mainCourse.basicInfo.code + mainCourse.basicInfo.name}\n                title={mainCourse.basicInfo.name}\n              />\n            ))}\n          {courses.filter(course => !course.isMain).length > 0 ? (\n            <Section\n              dark={dark}\n              title={t('otherCourses')}\n              style={{marginTop: 8}}>\n              {courses\n                .filter(course => !course.isMain)\n                .map(secondaryCourse => (\n                  <PressableCard\n                    dark={dark}\n                    onPress={() => gotoCourse(secondaryCourse)}\n                    key={\n                      secondaryCourse.basicInfo.code +\n                      secondaryCourse.basicInfo.name\n                    }\n                    title={secondaryCourse.basicInfo.name}\n                  />\n                ))}\n            </Section>\n          ) : null}\n        </View>\n      </ScrollView>\n    </Screen>\n  );\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport Header, {HEADER_TYPE} from '../ui/Header';\nimport Screen from '../ui/Screen';\nimport {\n  deleteNotification,\n  markNotificationRead,\n  Notification,\n  NotificationType,\n} from 'open-polito-api/lib/notifications';\nimport {\n  ActivityIndicator,\n  BackHandler,\n  FlatList,\n  RefreshControl,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {DeviceContext} from '../context/Device';\nimport store, {AppDispatch, RootState} from '../store/store';\nimport {\n  getNotificationList,\n  setNotifications,\n  UserState,\n} from '../store/userSlice';\nimport Tabs from '../ui/Tabs';\nimport {p} from '../scaling';\nimport NotificationComponent from '../ui/Notification';\nimport NoContent from '../ui/NoContent';\nimport {STATUS} from '../store/status';\nimport PressableBase from '../ui/core/PressableBase';\nimport {CoursesState} from '../store/coursesSlice';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../colors';\nimport Checkbox from '../ui/core/Checkbox';\nimport {LongPressGestureHandler, State} from 'react-native-gesture-handler';\nimport TablerIcon from '../ui/core/TablerIcon';\nimport Text from '../ui/core/Text';\n\nconst _SelectableNotification = ({\n  dark,\n  n,\n  handlePress,\n  courseName,\n  selecting,\n  setSelecting,\n  selected,\n  onSelectionChange,\n}: {\n  dark: boolean;\n  n: Notification;\n  handlePress: (id: number) => any;\n  courseName: string;\n  selecting: boolean;\n  setSelecting: (selecting: boolean) => any;\n  selected: boolean;\n  onSelectionChange: (id: number, selected: boolean) => any;\n}) => {\n  const offset = useSharedValue(0);\n\n  const animStyleCheckbox = useAnimatedStyle(() => ({\n    width: 32 * p * offset.value,\n    transform: [\n      {\n        scale: offset.value,\n      },\n    ],\n    alignItems: 'flex-start',\n  }));\n\n  /**\n   * Show/hide checkbox\n   */\n  useEffect(() => {\n    offset.value = withTiming(selecting ? 1 : 0, {duration: 150});\n  }, [selecting]);\n\n  return (\n    <View style={{flex: 1}}>\n      <LongPressGestureHandler\n        onHandlerStateChange={({nativeEvent}) => {\n          if (nativeEvent.state === State.ACTIVE) {\n            if (!selecting) {\n              setSelecting(true);\n              onSelectionChange(n.id, true);\n            }\n          }\n        }}>\n        <Animated.View\n          style={{\n            marginBottom: 24 * p,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}>\n          <Animated.View style={[animStyleCheckbox]}>\n            <Checkbox\n              selected={selected}\n              onChange={sel => onSelectionChange(n.id, sel)}\n            />\n          </Animated.View>\n          <PressableBase style={{flex: 1}} onPress={() => handlePress(n.id)}>\n            <NotificationComponent\n              type={n.topic}\n              notification={n}\n              dark={dark}\n              read={n.is_read}\n              courseName={courseName}\n            />\n          </PressableBase>\n        </Animated.View>\n      </LongPressGestureHandler>\n    </View>\n  );\n};\n\nconst Notifications = () => {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const notificationTypes = [\n    {label: t('allF'), value: 'all'},\n    {label: t('readF'), value: 'read'},\n    {label: t('unreadF'), value: 'unread'},\n    {label: t('directAlerts'), value: 'direct'},\n    {label: t('courses'), value: 'course'},\n    {label: t('material'), value: 'material'},\n  ];\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        container: {\n          paddingTop: 24 * p,\n          flex: 1,\n        },\n        paddingHorizontal: {\n          paddingHorizontal: 16 * p,\n        },\n        list: {\n          paddingHorizontal: 16 * p,\n          paddingBottom: 24 * p,\n        },\n      }),\n    [],\n  );\n\n  const {notifications, getNotificationsStatus} = useSelector<\n    RootState,\n    UserState\n  >(state => state.user);\n\n  const courses = useSelector<RootState, CoursesState>(state => state.courses);\n\n  const {device, dark} = useContext(DeviceContext);\n\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [refreshing, setRefreshing] = useState(false);\n\n  const refreshNotifications = () => {\n    setRefreshing(true);\n    dispatch(getNotificationList(device));\n  };\n\n  const getNotificationCourseName = (notification: Notification): string => {\n    return (\n      courses.courses.find(\n        course => course.basicInfo.id_incarico === (notification as any).course,\n      )?.basicInfo.name || ''\n    );\n  };\n\n  /**\n   * Set refreshing to false when done refreshing\n   */\n  useEffect(() => {\n    if (refreshing && getNotificationsStatus.code !== STATUS.PENDING) {\n      setRefreshing(false);\n    }\n  }, [notifications, refreshing, getNotificationsStatus.code, courses]);\n\n  /**\n   * Set notification as read.\n   * @param id The id of the notification\n   */\n  const handlePress = (id: number): void => {\n    // Find the notification index\n    const index = notifications.findIndex(n => n.id == id);\n\n    // Don't proceed if not found or if already read\n    if (index === -1) return;\n    if (notifications[index].is_read) return;\n\n    // Send read\n    (async () => {\n      await markNotificationRead(device, id);\n    })();\n\n    // Send updated array to store\n    let copy = {...notifications[index]};\n    copy.is_read = true;\n    store.dispatch(\n      setNotifications([\n        ...notifications.slice(0, index),\n        copy,\n        ...notifications.slice(index + 1),\n      ]),\n    );\n  };\n\n  const visible = useMemo<Notification[]>(() => {\n    switch (selectedCategory) {\n      case 'all':\n        return notifications;\n      case 'read':\n        return notifications.filter(n => n.is_read);\n      case 'unread':\n        return notifications.filter(n => !n.is_read);\n      case 'direct':\n        return notifications.filter(n => n.topic === NotificationType.DIRECT);\n      case 'course':\n        return notifications.filter(n => n.topic === NotificationType.NOTICE);\n      case 'material':\n        return notifications.filter(n => n.topic === NotificationType.MATERIAL);\n      default:\n        return [];\n    }\n  }, [notifications, selectedCategory]);\n\n  /**\n   * Whether we're in selection mode\n   */\n  const [selecting, setSelecting] = useState(false);\n  /**\n   * Selected notification ids in selection mode\n   */\n  const [selected, setSelected] = useState<number[]>([]);\n\n  const tabOffset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        scale: 0.75 + 0.25 * tabOffset.value,\n      },\n      {\n        translateY: 128 * p * (1 - tabOffset.value),\n      },\n    ],\n  }));\n\n  /**\n   * Show/hide bottom bar\n   */\n  useEffect(() => {\n    tabOffset.value = withTiming(selecting ? 1 : 0, {duration: 200});\n  }, [selecting]);\n\n  /**\n   * On exiting selection mode\n   */\n  useEffect(() => {\n    if (!selecting) setSelected([]);\n  }, [selecting]);\n\n  const handleSelectionChange = (id: number, sel: boolean) => {\n    if (sel) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter(s => s !== id));\n    }\n  };\n\n  /**\n   * Quit selection mode if no selected items\n   */\n  useEffect(() => {\n    if (selected.length === 0) {\n      setSelecting(false);\n    }\n  }, [selected]);\n\n  /**\n   * When in selection mode, if the hardware back button is pressed,\n   * exit selection mode instead of going back\n   */\n  const onHardwareBackButtonPressed = useCallback(() => {\n    if (selecting) {\n      setSelecting(false);\n      return true;\n    }\n    setSelected([]);\n    return false;\n  }, [selecting]);\n\n  /**\n   * When changing tab, exit selection mode\n   */\n  useEffect(() => {\n    setSelected([]);\n    setSelecting(false);\n  }, [selectedCategory]);\n\n  /**\n   * Setup & Cleanup\n   */\n  useEffect(() => {\n    BackHandler.addEventListener(\n      'hardwareBackPress',\n      onHardwareBackButtonPressed,\n    );\n    return () => {\n      setSelecting(false);\n      setSelected([]);\n      BackHandler.removeEventListener(\n        'hardwareBackPress',\n        onHardwareBackButtonPressed,\n      );\n    };\n  }, []);\n\n  const [deleting, setDeleting] = useState(false);\n\n  const deleteSelected = () => {\n    (async () => {\n      setDeleting(true);\n      for (let i = 0; i < selected.length; i++) {\n        await deleteNotification(device, selected[i]);\n      }\n      setTimeout(() => {\n        setDeleting(false);\n        setSelecting(false);\n      }, 500);\n      refreshNotifications();\n    })();\n  };\n\n  const areAllSelected = () => {\n    let allSelected = true;\n    for (let i = 0; i < visible.length; i++) {\n      if (!selected.includes(visible[i].id)) {\n        allSelected = false;\n        break;\n      }\n    }\n    return allSelected;\n  };\n\n  const selectionOptions = [\n    {\n      icon: areAllSelected() ? 'circle-minus' : 'circle-plus',\n      value: 'selectAll',\n      label: areAllSelected() ? t('deselectAll') : t('selectAll'),\n      action: () =>\n        areAllSelected()\n          ? setSelected([])\n          : setSelected(visible.map(n => n.id)),\n    },\n    {\n      icon: deleting ? 'loading' : 'trash',\n      value: 'delete',\n      label: t('delete'),\n      action: deleteSelected,\n    },\n    {\n      icon: 'checks',\n      value: 'markAsRead',\n      label: t('markAsRead'),\n      action: () => {\n        selected.forEach(id => handlePress(id));\n        setSelecting(false);\n      },\n    },\n  ];\n\n  return (\n    <Screen>\n      <Animated.View\n        style={[\n          animStyle,\n          {\n            position: 'absolute',\n            bottom: 16 * p,\n            left: 0,\n            right: 0,\n            zIndex: 1000,\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            paddingVertical: 8 * p,\n            marginHorizontal: 16 * p,\n            borderRadius: 16 * p,\n            borderWidth: 1 * p,\n            borderColor: dark ? colors.gray600 : colors.gray300,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n          },\n        ]}>\n        {selectionOptions.map(opt => (\n          <View\n            style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n            <PressableBase\n              disabled={opt.icon === 'loading'}\n              style={{justifyContent: 'center', alignItems: 'center'}}\n              onPress={opt.action}>\n              {opt.icon === 'loading' ? (\n                <ActivityIndicator color={colors.accent300} size={20 * p} />\n              ) : (\n                <TablerIcon\n                  name={opt.icon}\n                  color={colors.accent300}\n                  size={20 * p}\n                />\n              )}\n              <View style={{height: 4 * p}} />\n              <Text c={colors.accent300} w=\"r\" s={10 * p}>\n                {opt.label}\n              </Text>\n            </PressableBase>\n          </View>\n        ))}\n      </Animated.View>\n      <Header headerType={HEADER_TYPE.MAIN} title={t('notifications')} />\n      <Tabs\n        adjusted\n        dark={dark}\n        items={notificationTypes}\n        onChange={(index: number) =>\n          setSelectedCategory(notificationTypes[index].value)\n        }\n      />\n      <View style={styles.container}>\n        <FlatList\n          contentContainerStyle={styles.paddingHorizontal}\n          data={visible}\n          keyExtractor={item => item.id.toString()}\n          ListEmptyComponent={<NoContent />}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={refreshNotifications}\n            />\n          }\n          initialNumToRender={10}\n          maxToRenderPerBatch={10}\n          renderItem={n => (\n            <_SelectableNotification\n              dark={dark}\n              n={n.item}\n              handlePress={id => handlePress(id)}\n              courseName={getNotificationCourseName(n.item)}\n              selecting={selecting}\n              setSelecting={sel => setSelecting(sel)}\n              selected={selected.includes(n.item.id)}\n              onSelectionChange={(id, sel) => handleSelectionChange(id, sel)}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  );\n};\n\nexport default Notifications;\n","import React, {FC, useEffect} from 'react';\nimport {View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\n\ninterface CheckboxProps {\n  selected: boolean;\n  onChange: (value: boolean) => any;\n}\n\nconst Checkbox: FC<CheckboxProps> = ({selected, onChange}) => {\n  const offset = useSharedValue(1);\n\n  const animStyle = useAnimatedStyle(() => ({\n    width: 20 * p * offset.value,\n    height: 20 * p * offset.value,\n    borderRadius: 4 * p,\n    backgroundColor: colors.accent300,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }));\n\n  /**\n   * Handle selection change\n   */\n  const handlePress = () => {\n    // Callback function\n    onChange(!selected);\n  };\n\n  /**\n   * Animate on change\n   */\n  useEffect(() => {\n    if (selected) {\n      offset.value = withTiming(1, {duration: 100});\n    } else {\n      offset.value = withTiming(0, {duration: 100});\n    }\n  }, [selected]);\n\n  return (\n    <PressableBase style={{padding: 4 * p}} onPress={handlePress}>\n      <View\n        style={{\n          width: 20 * p,\n          height: 20 * p,\n          backgroundColor: colors.gray700,\n          borderColor: colors.gray600,\n          borderWidth: 1 * p,\n          borderRadius: 4 * p,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Animated.View style={[animStyle]}>\n          <TablerIcon name=\"check\" size={12 * p} color={colors.gray50} />\n        </Animated.View>\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default Checkbox;\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {StyleSheet, Switch, View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\nexport type SettingsItemProps = {\n  icon?: string;\n  name: string;\n  description?: string;\n  disabled?: boolean;\n  settingsFunction: () => any;\n  toggle?: boolean; // whether to show toggle\n  toggleValue?: boolean; // value of toggle\n  padding?: boolean; // adds horizontal padding\n  paddingBottom?: boolean; // add bottom padding (e.g. when not last item)\n  children?: ReactNode;\n};\n\nconst SettingsItem: FC<SettingsItemProps> = ({\n  icon,\n  name,\n  description,\n  disabled = false,\n  settingsFunction = () => {},\n  toggle = false,\n  toggleValue,\n  padding = false,\n  paddingBottom = true,\n  children = null,\n}) => {\n  const {dark} = useContext(DeviceContext);\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n      textContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n      },\n    });\n  }, []);\n\n  return (\n    <View\n      style={[\n        padding ? {paddingHorizontal: 16 * p} : {},\n        paddingBottom ? {paddingBottom: 16 * p} : {},\n      ]}>\n      <PressableBase\n        disabled={!!children || disabled}\n        onPress={settingsFunction}\n        android_ripple={{color: colors.gray200}}\n        style={[_styles.container, disabled ? {opacity: 0.5} : {}]}>\n        {icon ? (\n          <View style={{marginRight: 12 * p}}>\n            <TablerIcon\n              name={icon}\n              size={24 * p}\n              color={dark ? colors.gray300 : colors.gray600}\n            />\n          </View>\n        ) : null}\n        <View style={_styles.textContainer}>\n          <Text\n            w=\"m\"\n            s={12 * p}\n            c={dark ? colors.gray100 : colors.gray800}\n            style={{marginBottom: 2 * p}}>\n            {name}\n          </Text>\n          {description ? (\n            <Text w=\"r\" s={10 * p} c={dark ? colors.gray200 : colors.gray700}>\n              {description}\n            </Text>\n          ) : null}\n        </View>\n        {toggle ? (\n          <Switch value={toggleValue} onChange={settingsFunction} />\n        ) : null}\n      </PressableBase>\n      <View>{children}</View>\n    </View>\n  );\n};\nexport default SettingsItem;\n","import React, {FC, ReactNode, useEffect, useMemo} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\nimport Text from './Text';\n\ninterface PressableCardProps {\n  dark: boolean;\n  title?: string;\n  description?: string;\n  onPress: () => any;\n  expanded?: boolean;\n  sideElement?: ReactNode; // Element to show right next to title and description\n  expandedElement?: ReactNode; // Element to show only when card expanded\n  children?: ReactNode; // Always shown\n}\n\nconst PressableCard: FC<PressableCardProps> = ({\n  dark,\n  title,\n  description,\n  onPress,\n  expanded,\n  sideElement,\n  expandedElement,\n  children,\n}) => {\n  const rotation = useSharedValue(0);\n  const scale = useSharedValue(0);\n  const expandedElementOpacity = useSharedValue(0);\n  const sideElementOpacity = useSharedValue(1);\n\n  useEffect(() => {\n    const condition = expanded && expandedElement;\n    rotation.value = withTiming(condition ? 90 : 0, {duration: 200});\n    scale.value = withTiming(condition ? 1 : 0, {duration: 200});\n    expandedElementOpacity.value = withTiming(condition ? 1 : 0, {\n      duration: 400,\n    });\n  }, [expanded, rotation, scale, expandedElementOpacity, expandedElement]);\n\n  useEffect(() => {\n    sideElementOpacity.value = withTiming(sideElement ? 1 : 0, {duration: 400});\n  }, [sideElement, sideElementOpacity]);\n\n  const animChevronStyle = useAnimatedStyle(() => ({\n    transform: [\n      {\n        rotate: `${rotation.value}deg`,\n      },\n    ],\n  }));\n\n  const expandedElementStyle = useAnimatedStyle(() => ({\n    opacity: expandedElementOpacity.value,\n    maxHeight: `${scale.value * 100}%`,\n  }));\n\n  const sideElementStyle = useAnimatedStyle(() => ({\n    opacity: sideElementOpacity.value,\n  }));\n\n  const styles = useMemo(() => {\n    return StyleSheet.create({\n      button: {\n        paddingVertical: 8 * p,\n        paddingLeft: 16 * p,\n        paddingRight: 8 * p,\n        marginBottom: 16 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        borderRadius: 4 * p,\n      },\n    });\n  }, [dark]);\n\n  return (\n    <PressableBase\n      onPress={onPress}\n      android_ripple={{color: dark ? colors.gray400 : colors.gray500}}\n      style={styles.button}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: expandedElement ? 'flex-start' : 'center',\n        }}>\n        <View style={{flex: 1}}>\n          <View style={{flexDirection: 'row', alignItems: 'center'}}>\n            <View style={{flex: 4}}>\n              {title && (\n                <Text\n                  s={12 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  w=\"m\">\n                  {title}\n                </Text>\n              )}\n              {description && (\n                <Text\n                  s={10 * p}\n                  c={dark ? colors.gray300 : colors.gray600}\n                  w=\"r\">\n                  {description}\n                </Text>\n              )}\n            </View>\n            <Animated.View\n              style={[sideElementStyle, {flex: sideElement ? 1 : 0}]}>\n              {sideElement}\n            </Animated.View>\n            <View\n              style={{\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n              }}>\n              <View>\n                <Animated.View style={[animChevronStyle]}>\n                  <TablerIcon\n                    name=\"chevron-right\"\n                    color={dark ? colors.gray200 : colors.gray700}\n                    size={24 * p}\n                  />\n                </Animated.View>\n              </View>\n            </View>\n          </View>\n          <View style={{paddingRight: 8 * p}}>\n            {children}\n            <Animated.View style={[expandedElementStyle]}>\n              <View>{expandedElement}</View>\n            </Animated.View>\n          </View>\n        </View>\n      </View>\n    </PressableBase>\n  );\n\n  return (\n    <PressableBase\n      onPress={onPress}\n      android_ripple={{color: dark ? colors.gray400 : colors.gray500}}\n      style={styles.button}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: expandedElement ? 'flex-start' : 'center',\n        }}>\n        <View style={{flex: 1, backgroundColor: 'red'}}>\n          <View style={{flexDirection: 'row', alignItems: 'center'}}>\n            <View style={{flex: 4}}>\n              {title && (\n                <Text\n                  s={12 * p}\n                  c={dark ? colors.gray200 : colors.gray700}\n                  w=\"m\">\n                  {title}\n                </Text>\n              )}\n              {description && (\n                <Text\n                  s={10 * p}\n                  c={dark ? colors.gray300 : colors.gray600}\n                  w=\"r\">\n                  {description}\n                </Text>\n              )}\n            </View>\n            <Animated.View\n              style={[sideElementStyle, {flex: sideElement ? 1 : 0}]}>\n              {sideElement}\n            </Animated.View>\n          </View>\n          <View>\n            {children}\n            <Animated.View style={[expandedElementStyle]}>\n              <View>{expandedElement}</View>\n            </Animated.View>\n          </View>\n        </View>\n        <View\n          style={{\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n          }}>\n          <View>\n            <Animated.View style={[animChevronStyle]}>\n              <TablerIcon\n                name=\"chevron-right\"\n                color={dark ? colors.gray200 : colors.gray700}\n                size={24 * p}\n              />\n            </Animated.View>\n          </View>\n        </View>\n      </View>\n    </PressableBase>\n  );\n};\n\nexport default PressableCard;\n"],"sourceRoot":""}