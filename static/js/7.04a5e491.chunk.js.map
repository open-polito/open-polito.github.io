{"version":3,"sources":["node_modules/moment/locale sync /^/.//.*$","src/store/userSlice.ts","src/utils/openUrl.ts","src/utils/platform.ts","src/screens/Updater.web.tsx","src/locales/en.ts","src/locales/it.ts","src/ui/Toast.tsx","src/components/modals/ModalComponent.tsx","src/ui/Fallback.tsx","assets/fonts/Inter-Regular.ttf","assets/fonts/Inter-Medium.ttf","assets/fonts/Inter-Bold.ttf","src/store/store.ts","src/colors.ts","src/components/modals/BaseActionConfirmModal.tsx","src/components/modals/ModalBase.tsx","src/store/coursesSlice.ts","src/scaling.ts","src/ui/core/Text.tsx","src/context/Device.tsx","src/types.ts","src/ui/core/TablerIcon.web.tsx","src/ui/core/Button.tsx","src/utils/api-utils.ts","src/defaultConfig.ts","src/utils/fs.web.ts","src/utils/Logger.ts","src/AppWeb.tsx","src/ui/core/PressableBase.tsx","src/store/examsSlice.ts","src/store/sessionSlice.ts","src/store/status.ts","src/context/ModalProvider.tsx","src/App.tsx","src/routes/Router.tsx","src/utils/updater.web.ts","src/utils/updater.common.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","userInfo","unreadEmailCount","getUnreadEmailCountStatus","initialStatus","notifications","getNotificationsStatus","bookings","getBookingsStatus","bookingContexts","getBookingContextsStatus","getUnreadEmailCount","createAsyncThunk","device","getUnreadMail","unread","condition","_","getState","shouldWaitForCooldown","user","getNotificationList","getNotifications","reverse","getMyBookings","getBookings","getBookingContexts","getContexts","userSlice","createSlice","name","reducers","setUserInfo","state","action","payload","setNotificationsStatus","setNotifications","extraReducers","builder","addCase","pending","pendingStatus","fulfilled","successStatus","rejected","errorStatus","error","actions","reducer","url","genericPlatform","open","Linking","openURL","osFilters","Constants","expoConfig","extra","platform","then","res","default","catch","undefined","getOSIdentifier","p","os","family","toLowerCase","includes","appName","Config","VARIANT","search","searchResults","noResults","tryADifferentTerm","alerts","oldVideos","noContent","videoPlayer","deadline","pleaseWait","allF","allM","directAlerts","test","readF","unreadF","searchForAnything","more","relatedVideos","files","cancel","confirm","enable","bookVerb","allCourses","selectItem","selectAll","deselectAll","delete","markAsRead","defaultMsgTitle","defaultMsgBody","loading","retry","networkError","networkErrorDesc","caption","loginCall","userPlaceholder","passwordPlaceholder","login","or","and","takeTour","version","title1","desc1","title2","desc2","title3","desc3","agreement","tos","privacyPolicy","noUsernameProvided","noPasswordProvided","invalidUsernameProvided","downloadNativeApp","downloadNativeAppDescription","loginWebSpecificDescription","home","quickSearch","quickAccess","edit","allSections","latestFiles","latestAlert","examSessions","timetable","material","courses","exams","email","unreadEmail","unreadEmail_plural","noEmailAccess","emailCannotBeShownDesktop","openBrowser","settings","debugSettings","experimentalSettings","logout","notificationsDesc","theme","themeDesc","about","aboutDesc","debugEnableLogging","debugEnableLoggingDesc","debugEnableLoggingDialogMessage","debugResetConfig","debugResetConfigDesc","debugTestNotification","debugTestNotificationDesc","experimentalEmailWebView","experimentalEmailWebViewDesc","searchMaterial","recentMaterial","byCourse","selectCourseDropdown","selectCourse","explore","recentlyAdded","newBooking","otherCourses","overview","summary","info","courseInfo","recordings","videos","noVideos","allExams","myBookings","availableToBook","unavailableExams","bookingDeadline","confirmExamBooking","confirmExamBookingDialogMessage","cancelExamBooking","cancelExamBookingDialogMessage","yourAverageMark","yourAverageMarkNotice","progressOverTime","weightedAverage","permanentMarks","provisionalMarks","statusCodeHelp","examAbsent","examFailed","jumpToDate","thisWeek","timetableOptions","timetablePriority","timetablePriorityDesc","timetablePriorityList","newUpdateModalTitle","newUpdateModalText","newUpdateModalNotes","updaterScreenHeading","updaterStateIdle","updaterStateGetData","updaterStateDownload","updaterStateDone","updaterStateCheckIntegrity","updaterStateError","tryAgain","reopenInstallMenu","didYouMissTheInstallMenu","logoutToastMessage","loginPendingToastMessage","loginErrorToastMessage","loginErrorFlashDesc","loginSuccessToastMessage","notImplementedToastMessage","notImplementedToastMessageDesc","restartToastMessage","examsExamBookedToastMessage","examsExamBookingErrorToastMessage","examsExamCanceledToastMessage","examsExamCancelingErrorToastMessage","wipInfoWidgetTitle","wipInfoWidgetDesc","types","success","colors","green","warn","orange","err","red","accent300","dark","useContext","DeviceContext","toast","useSelector","session","dispatch","useDispatch","timeoutRef","useRef","useEffect","visible","clearTimeout","current","setTimeout","dismissToast","resetToast","setToast","icon","message","type","_styles","useMemo","StyleSheet","create","container","position","top","left","right","borderWidth","borderColor","borderRadius","backgroundColor","gray700","gray200","flexDirection","justifyContent","alignItems","marginHorizontal","marginTop","padding","View","style","color","size","marginRight","s","w","c","gray100","flex","onPress","gray800","modal","ModalContext","configureStore","sessionSlice","coursesSlice","examsSlice","gradient1","gradient2","black","white","background","gray","mediumGray","lightGray","accent50","accent100","accent200","gray50","gray300","gray400","gray500","gray600","gray900","title","children","onConfirm","onCancel","accentColor","customLabels","hideModal","t","useTranslation","label","value","onSelect","dismiss","dismissable","onDismiss","useState","internalVisible","setInternalVisible","useCallback","offset","useSharedValue","animStyle","useAnimatedStyle","opacity","transform","scale","withTiming","duration","Modal","transparent","animationType","statusBarTranslucent","onRequestClose","TouchableOpacity","maxHeight","ScrollView","paddingVertical","paddingHorizontal","width","paddingBottom","i","key","marginLeft","secondary","text","marks","permanent","provisional","loadCoursesStatus","loadExtendedCourseInfoStatus","getRecentMaterialStatus","loadCoursesData","data","getCoursesInfo","course_plan","standard","course","basicInfo","status","isMain","loadCourse","basicCourseInfo","getExtendedCourseInfo","find","getRecentMaterial","forEach","push","findFiles","items","course_name","course_code","_res","item","extendedInfo","sort","a","b","creation_date","slice","findCourseIndexByID","courseID","findIndex","getUpdatedCourses","courseState","index","mutatedArray","_index","setLoadExtendedCourseInfoStatus","meta","arg","getScalingFactor","Platform","OS","href","props","fontSize","fontFamily","textHref","textDecorationLine","textDecorationStyle","textDecorationColor","textComponent","createContext","chosenTheme","createDevice","setDevice","colorScheme","DeviceSize","normal","_device","_setDevice","config","request_logger","logging","Logger","logRequestSync","useWindowDimensions","_colorScheme","useColorScheme","_dark","lg","Provider","d","React","lazy","small","height","containerSecondary","Pressable","ActivityIndicator","toUpperCase","uuid","token","dev","Device","Version","model","manufacturer","schemaVersion","beta","timetableOverlap","appendFile","path","content","console","getCredentials","AsyncStorage","getItem","JSON","parse","saveCredentials","username","password","setItem","stringify","clearCredentials","removeItem","entry","logFilePath","log","hasLoggedBasicDeviceInfo","appBuildNumber","DeviceInfo","getBuildNumber","appBuildVariant","appVersion","appVersionBinary","getVersion","osApiLevel","getApiLevelSync","osName","getSystemName","getBaseOsSync","osVersion","getSystemVersion","store","writeToFile","logBasicDeviceInfo","parseInt","ENABLE_DEBUG_OPTIONS","endpoint","logRequest","logsDirectoryPath","getDocumentsPath","moment","format","useFonts","require","getExamsStatus","getExams","getExamSessions","authStatus","AUTH_STATUS","PENDING","deviceRegisterStatus","loginStatus","loginData","logoutStatus","defaultConfig","registerDevice","deviceData","getDeviceData","register","args","rejectWithValue","response","method","savedCredentials","loginWithToken","new_uuid","UUIDv4","loginWithCredentials","current_id","ping","e2","setAuthStatus","NOT_VALID","setConfig","setConfigState","resetConfig","VALID","OFFLINE","STATUS","IDLE","SUCCESS","ERROR","lastUpdated","Date","now","stack","RETRY","customTimeoutSeconds","setModal","showModal","setVisible","RNLocalize","addEventListener","setNewLocale","removeEventListener","getLocales","languageCode","i18n","changeLanguage","locale","Suspense","fallback","defaultDevice","ModalProvivder","TRenderEngineProvider","tagsStyles","RenderHTMLConfigProvider","lng","use","initReactI18next","init","resources","en","translation","EN","it","IT","fallbackLng","interpolation","escapeValue","debug","checked","acceptedUpdate","updaterState","setUpdaterState","checkForUpdates","prev","releaseData","updateCleanup","notes","n","language","note","RenderHTMLSource","source","html","setMessage","setupDone","setSetupDone","loadedConfig","CONFIG_SCHEMA_VERSION","currentSettingsKeys","defaultSettingsKeys","filter","k","buildMessage","NavigationContainer","AppStack","Navigator","screenOptions","headerShown","Screen","component","HomeRouter","Search","Course","Video","AuthStack","LoginScreen","createNativeStackNavigator","getUpdateDestinationFilePath","checkFileMatchesSHA256","isGitHubOnline","fetch","fetchReleaseJson","json","fetchReleaseByTag","tag","headers","Accept","from","r","versionCode"],"mappings":"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","file":"static/js/7.04a5e491.chunk.js","sourcesContent":["var map = {\n\t\"./af\": 396,\n\t\"./af.js\": 396,\n\t\"./ar\": 397,\n\t\"./ar-dz\": 398,\n\t\"./ar-dz.js\": 398,\n\t\"./ar-kw\": 399,\n\t\"./ar-kw.js\": 399,\n\t\"./ar-ly\": 400,\n\t\"./ar-ly.js\": 400,\n\t\"./ar-ma\": 401,\n\t\"./ar-ma.js\": 401,\n\t\"./ar-sa\": 402,\n\t\"./ar-sa.js\": 402,\n\t\"./ar-tn\": 403,\n\t\"./ar-tn.js\": 403,\n\t\"./ar.js\": 397,\n\t\"./az\": 404,\n\t\"./az.js\": 404,\n\t\"./be\": 405,\n\t\"./be.js\": 405,\n\t\"./bg\": 406,\n\t\"./bg.js\": 406,\n\t\"./bm\": 407,\n\t\"./bm.js\": 407,\n\t\"./bn\": 408,\n\t\"./bn-bd\": 409,\n\t\"./bn-bd.js\": 409,\n\t\"./bn.js\": 408,\n\t\"./bo\": 410,\n\t\"./bo.js\": 410,\n\t\"./br\": 411,\n\t\"./br.js\": 411,\n\t\"./bs\": 412,\n\t\"./bs.js\": 412,\n\t\"./ca\": 413,\n\t\"./ca.js\": 413,\n\t\"./cs\": 414,\n\t\"./cs.js\": 414,\n\t\"./cv\": 415,\n\t\"./cv.js\": 415,\n\t\"./cy\": 416,\n\t\"./cy.js\": 416,\n\t\"./da\": 417,\n\t\"./da.js\": 417,\n\t\"./de\": 418,\n\t\"./de-at\": 419,\n\t\"./de-at.js\": 419,\n\t\"./de-ch\": 420,\n\t\"./de-ch.js\": 420,\n\t\"./de.js\": 418,\n\t\"./dv\": 421,\n\t\"./dv.js\": 421,\n\t\"./el\": 422,\n\t\"./el.js\": 422,\n\t\"./en-au\": 423,\n\t\"./en-au.js\": 423,\n\t\"./en-ca\": 424,\n\t\"./en-ca.js\": 424,\n\t\"./en-gb\": 425,\n\t\"./en-gb.js\": 425,\n\t\"./en-ie\": 426,\n\t\"./en-ie.js\": 426,\n\t\"./en-il\": 427,\n\t\"./en-il.js\": 427,\n\t\"./en-in\": 428,\n\t\"./en-in.js\": 428,\n\t\"./en-nz\": 429,\n\t\"./en-nz.js\": 429,\n\t\"./en-sg\": 430,\n\t\"./en-sg.js\": 430,\n\t\"./eo\": 431,\n\t\"./eo.js\": 431,\n\t\"./es\": 432,\n\t\"./es-do\": 433,\n\t\"./es-do.js\": 433,\n\t\"./es-mx\": 434,\n\t\"./es-mx.js\": 434,\n\t\"./es-us\": 435,\n\t\"./es-us.js\": 435,\n\t\"./es.js\": 432,\n\t\"./et\": 436,\n\t\"./et.js\": 436,\n\t\"./eu\": 437,\n\t\"./eu.js\": 437,\n\t\"./fa\": 438,\n\t\"./fa.js\": 438,\n\t\"./fi\": 439,\n\t\"./fi.js\": 439,\n\t\"./fil\": 440,\n\t\"./fil.js\": 440,\n\t\"./fo\": 441,\n\t\"./fo.js\": 441,\n\t\"./fr\": 442,\n\t\"./fr-ca\": 443,\n\t\"./fr-ca.js\": 443,\n\t\"./fr-ch\": 444,\n\t\"./fr-ch.js\": 444,\n\t\"./fr.js\": 442,\n\t\"./fy\": 445,\n\t\"./fy.js\": 445,\n\t\"./ga\": 446,\n\t\"./ga.js\": 446,\n\t\"./gd\": 447,\n\t\"./gd.js\": 447,\n\t\"./gl\": 448,\n\t\"./gl.js\": 448,\n\t\"./gom-deva\": 449,\n\t\"./gom-deva.js\": 449,\n\t\"./gom-latn\": 450,\n\t\"./gom-latn.js\": 450,\n\t\"./gu\": 451,\n\t\"./gu.js\": 451,\n\t\"./he\": 452,\n\t\"./he.js\": 452,\n\t\"./hi\": 453,\n\t\"./hi.js\": 453,\n\t\"./hr\": 454,\n\t\"./hr.js\": 454,\n\t\"./hu\": 455,\n\t\"./hu.js\": 455,\n\t\"./hy-am\": 456,\n\t\"./hy-am.js\": 456,\n\t\"./id\": 457,\n\t\"./id.js\": 457,\n\t\"./is\": 458,\n\t\"./is.js\": 458,\n\t\"./it\": 247,\n\t\"./it-ch\": 459,\n\t\"./it-ch.js\": 459,\n\t\"./it.js\": 247,\n\t\"./ja\": 460,\n\t\"./ja.js\": 460,\n\t\"./jv\": 461,\n\t\"./jv.js\": 461,\n\t\"./ka\": 462,\n\t\"./ka.js\": 462,\n\t\"./kk\": 463,\n\t\"./kk.js\": 463,\n\t\"./km\": 464,\n\t\"./km.js\": 464,\n\t\"./kn\": 465,\n\t\"./kn.js\": 465,\n\t\"./ko\": 466,\n\t\"./ko.js\": 466,\n\t\"./ku\": 467,\n\t\"./ku.js\": 467,\n\t\"./ky\": 468,\n\t\"./ky.js\": 468,\n\t\"./lb\": 469,\n\t\"./lb.js\": 469,\n\t\"./lo\": 470,\n\t\"./lo.js\": 470,\n\t\"./lt\": 471,\n\t\"./lt.js\": 471,\n\t\"./lv\": 472,\n\t\"./lv.js\": 472,\n\t\"./me\": 473,\n\t\"./me.js\": 473,\n\t\"./mi\": 474,\n\t\"./mi.js\": 474,\n\t\"./mk\": 475,\n\t\"./mk.js\": 475,\n\t\"./ml\": 476,\n\t\"./ml.js\": 476,\n\t\"./mn\": 477,\n\t\"./mn.js\": 477,\n\t\"./mr\": 478,\n\t\"./mr.js\": 478,\n\t\"./ms\": 479,\n\t\"./ms-my\": 480,\n\t\"./ms-my.js\": 480,\n\t\"./ms.js\": 479,\n\t\"./mt\": 481,\n\t\"./mt.js\": 481,\n\t\"./my\": 482,\n\t\"./my.js\": 482,\n\t\"./nb\": 483,\n\t\"./nb.js\": 483,\n\t\"./ne\": 484,\n\t\"./ne.js\": 484,\n\t\"./nl\": 485,\n\t\"./nl-be\": 486,\n\t\"./nl-be.js\": 486,\n\t\"./nl.js\": 485,\n\t\"./nn\": 487,\n\t\"./nn.js\": 487,\n\t\"./oc-lnc\": 488,\n\t\"./oc-lnc.js\": 488,\n\t\"./pa-in\": 489,\n\t\"./pa-in.js\": 489,\n\t\"./pl\": 490,\n\t\"./pl.js\": 490,\n\t\"./pt\": 491,\n\t\"./pt-br\": 492,\n\t\"./pt-br.js\": 492,\n\t\"./pt.js\": 491,\n\t\"./ro\": 493,\n\t\"./ro.js\": 493,\n\t\"./ru\": 494,\n\t\"./ru.js\": 494,\n\t\"./sd\": 495,\n\t\"./sd.js\": 495,\n\t\"./se\": 496,\n\t\"./se.js\": 496,\n\t\"./si\": 497,\n\t\"./si.js\": 497,\n\t\"./sk\": 498,\n\t\"./sk.js\": 498,\n\t\"./sl\": 499,\n\t\"./sl.js\": 499,\n\t\"./sq\": 500,\n\t\"./sq.js\": 500,\n\t\"./sr\": 501,\n\t\"./sr-cyrl\": 502,\n\t\"./sr-cyrl.js\": 502,\n\t\"./sr.js\": 501,\n\t\"./ss\": 503,\n\t\"./ss.js\": 503,\n\t\"./sv\": 504,\n\t\"./sv.js\": 504,\n\t\"./sw\": 505,\n\t\"./sw.js\": 505,\n\t\"./ta\": 506,\n\t\"./ta.js\": 506,\n\t\"./te\": 507,\n\t\"./te.js\": 507,\n\t\"./tet\": 508,\n\t\"./tet.js\": 508,\n\t\"./tg\": 509,\n\t\"./tg.js\": 509,\n\t\"./th\": 510,\n\t\"./th.js\": 510,\n\t\"./tk\": 511,\n\t\"./tk.js\": 511,\n\t\"./tl-ph\": 512,\n\t\"./tl-ph.js\": 512,\n\t\"./tlh\": 513,\n\t\"./tlh.js\": 513,\n\t\"./tr\": 514,\n\t\"./tr.js\": 514,\n\t\"./tzl\": 515,\n\t\"./tzl.js\": 515,\n\t\"./tzm\": 516,\n\t\"./tzm-latn\": 517,\n\t\"./tzm-latn.js\": 517,\n\t\"./tzm.js\": 516,\n\t\"./ug-cn\": 518,\n\t\"./ug-cn.js\": 518,\n\t\"./uk\": 519,\n\t\"./uk.js\": 519,\n\t\"./ur\": 520,\n\t\"./ur.js\": 520,\n\t\"./uz\": 521,\n\t\"./uz-latn\": 522,\n\t\"./uz-latn.js\": 522,\n\t\"./uz.js\": 521,\n\t\"./vi\": 523,\n\t\"./vi.js\": 523,\n\t\"./x-pseudo\": 524,\n\t\"./x-pseudo.js\": 524,\n\t\"./yo\": 525,\n\t\"./yo.js\": 525,\n\t\"./zh-cn\": 526,\n\t\"./zh-cn.js\": 526,\n\t\"./zh-hk\": 527,\n\t\"./zh-hk.js\": 527,\n\t\"./zh-mo\": 528,\n\t\"./zh-mo.js\": 528,\n\t\"./zh-tw\": 529,\n\t\"./zh-tw.js\": 529\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1050;","/**\n * @file Manages actions and state related to user data\n */\n\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {\n  Booking,\n  BookingContext,\n  getBookings,\n  getContexts,\n} from 'open-polito-api/lib/booking';\nimport {Device} from 'open-polito-api/lib/device';\nimport {\n  getNotifications,\n  Notification,\n} from 'open-polito-api/lib/notifications';\nimport {getUnreadMail, PersonalData} from 'open-polito-api/lib/user';\nimport {\n  errorStatus,\n  initialStatus,\n  pendingStatus,\n  shouldWaitForCooldown,\n  Status,\n  successStatus,\n} from './status';\nimport {RootState} from './store';\n\nexport type UserState = {\n  userInfo: PersonalData | null;\n\n  unreadEmailCount: number;\n  getUnreadEmailCountStatus: Status;\n\n  notifications: Notification[];\n  getNotificationsStatus: Status;\n\n  bookings: Booking[];\n  getBookingsStatus: Status;\n\n  bookingContexts: BookingContext[];\n  getBookingContextsStatus: Status;\n};\n\nconst initialState: UserState = {\n  userInfo: null,\n\n  unreadEmailCount: 0,\n  getUnreadEmailCountStatus: initialStatus(),\n\n  notifications: [],\n  getNotificationsStatus: initialStatus(),\n\n  bookings: [],\n  getBookingsStatus: initialStatus(),\n\n  bookingContexts: [],\n  getBookingContextsStatus: initialStatus(),\n};\n\n/**\n * Wrapper of {@link getUnreadMail}\n */\nexport const getUnreadEmailCount = createAsyncThunk<\n  number,\n  Device,\n  {state: RootState}\n>(\n  'user/getUnreadEmailCount',\n  async device => {\n    const response = await getUnreadMail(device);\n    return response.unread;\n  },\n  {\n    condition: (_, {getState}) =>\n      !shouldWaitForCooldown(getState().user.getUnreadEmailCountStatus, 10),\n  },\n);\n\n/**\n * Wrapper of {@link getNotifications}\n */\nexport const getNotificationList = createAsyncThunk<\n  Notification[],\n  Device,\n  {state: RootState}\n>(\n  'user/getNotificationList',\n  async device => {\n    const notifications = await getNotifications(device);\n    return notifications.reverse();\n  },\n  {\n    condition: (_, {getState}) =>\n      !shouldWaitForCooldown(getState().user.getNotificationsStatus, 10),\n  },\n);\n\n/**\n * Wrapper of {@link getBookings}\n */\nexport const getMyBookings = createAsyncThunk<\n  Booking[],\n  Device,\n  {state: RootState}\n>(\n  'user/getMyBookings',\n  async device => {\n    const bookings = await getBookings(device);\n    return bookings;\n  },\n  {\n    condition: (_, {getState}) =>\n      !shouldWaitForCooldown(getState().user.getBookingsStatus),\n  },\n);\n\n/**\n * Wrapper of {@link getContexts}\n */\nexport const getBookingContexts = createAsyncThunk<\n  BookingContext[],\n  Device,\n  {state: RootState}\n>(\n  'user/getBookingContexts',\n  async device => {\n    const contexts = await getContexts(device);\n    return contexts;\n  },\n  {\n    condition: (_, {getState}) =>\n      !shouldWaitForCooldown(getState().user.getBookingContextsStatus),\n  },\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserInfo: (state, action: PayloadAction<PersonalData>) => {\n      state.userInfo = action.payload;\n    },\n    setNotificationsStatus: (state, action: PayloadAction<Status>) => {\n      state.getNotificationsStatus = action.payload;\n    },\n    setNotifications: (state, action: PayloadAction<Notification[]>) => {\n      state.notifications = action.payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getUnreadEmailCount.pending, state => {\n        state.getUnreadEmailCountStatus = pendingStatus();\n      })\n      .addCase(getUnreadEmailCount.fulfilled, (state, {payload}) => {\n        state.unreadEmailCount = payload;\n        state.getUnreadEmailCountStatus = successStatus();\n      })\n      .addCase(getUnreadEmailCount.rejected, (state, action) => {\n        state.getUnreadEmailCountStatus = errorStatus(action.error);\n      })\n      .addCase(getNotificationList.pending, state => {\n        state.getNotificationsStatus = pendingStatus();\n      })\n      .addCase(getNotificationList.fulfilled, (state, {payload}) => {\n        state.notifications = payload;\n        state.getNotificationsStatus = successStatus();\n      })\n      .addCase(getNotificationList.rejected, (state, action) => {\n        state.getNotificationsStatus = errorStatus(action.error);\n      })\n      .addCase(getMyBookings.pending, state => {\n        state.getBookingsStatus = pendingStatus();\n      })\n      .addCase(getMyBookings.fulfilled, (state, {payload}) => {\n        state.bookings = payload;\n        state.getBookingsStatus = successStatus();\n      })\n      .addCase(getMyBookings.rejected, (state, action) => {\n        state.getNotificationsStatus = errorStatus(action.error);\n      })\n      .addCase(getBookingContexts.pending, state => {\n        state.getBookingContextsStatus = pendingStatus();\n      })\n      .addCase(getBookingContexts.fulfilled, (state, {payload}) => {\n        state.bookingContexts = payload;\n        state.getBookingContextsStatus = successStatus();\n      })\n      .addCase(getBookingContexts.rejected, (state, action) => {\n        state.getBookingContextsStatus = errorStatus(action.error);\n      });\n  },\n});\n\nexport const {setUserInfo, setNotificationsStatus, setNotifications} =\n  userSlice.actions;\n\nexport default userSlice.reducer;\n","import {open} from '@tauri-apps/api/shell';\nimport {Linking} from 'react-native';\nimport {genericPlatform} from './platform';\n\nconst openURL = async (url: string): Promise<void> => {\n  if (genericPlatform === 'desktop') {\n    await open(url);\n  } else {\n    await Linking.openURL(url);\n  }\n};\n\nexport default openURL;\n","import Constants from 'expo-constants';\n\n/**\n * Generic platform identifier.\n * This is not the OS.\n */\nexport type PlatformIdentifier = 'mobile' | 'web' | 'desktop';\n\nexport const osFilters = [\n  'android',\n  'win',\n  'macos',\n  'os x',\n  'linux',\n  'ubuntu',\n  'debian',\n  'fedora',\n  'suse',\n] as const;\n\nexport type OSIdentifier = typeof osFilters[number] | undefined;\n\n/**\n * Current generic platform (not the OS).\n */\nexport const genericPlatform: PlatformIdentifier =\n  (Constants.expoConfig?.extra?.platform as PlatformIdentifier) || 'mobile';\n\nexport const platform =\n  genericPlatform === 'web'\n    ? import('platform').then(res => res.default).catch()\n    : undefined;\n\nexport type Platform = Awaited<typeof platform>;\n\n/**\n * Gets current OS generic name\n */\nexport const getOSIdentifier = async () => {\n  const p = await platform;\n  for (const os of osFilters) {\n    if (p?.os?.family?.toLowerCase().includes(os)) {\n      return os;\n    }\n  }\n};\n","const Updater = () => {\n  return <div>Updater for web not implemented yet</div>;\n};\n\nexport default Updater;\n","import Config from 'react-native-config';\n\nconst EN = {\n  // General\n  appName:\n    Config.VARIANT === 'release'\n      ? 'Open PoliTo'\n      : `Open PoliTo\\n[${Config.VARIANT}]`,\n  search: 'Search',\n  searchResults: '{{count}} results found',\n  noResults: 'No results',\n  tryADifferentTerm: 'Try a different term',\n  open: 'Open',\n  alerts: 'Alerts',\n  oldVideos: 'Videos from previous years',\n  noContent: 'Nothing to show...',\n  videoPlayer: 'Video player',\n  deadline: 'Deadline',\n  pleaseWait: 'Please wait...',\n  allF: 'All',\n  allM: 'All',\n  directAlerts: 'Direct',\n  test: 'Test',\n  readF: 'Read',\n  unreadF: 'Unread',\n  searchForAnything: 'Search for anything',\n  more: 'More',\n  relatedVideos: 'Related videos',\n  files: 'Files',\n  cancel: 'Cancel',\n  confirm: 'Confirm',\n  enable: 'Enable',\n  bookVerb: 'Book',\n  allCourses: 'All courses',\n  selectItem: 'Select item',\n  selectAll: 'Select all',\n  deselectAll: 'Deselect all',\n  delete: 'Delete',\n  markAsRead: 'Mark as read',\n\n  // Notifications\n  defaultMsgTitle: '🚀 New notification',\n  defaultMsgBody: 'Open the app to see it',\n\n  // Splash screen\n  loading: 'Loading...',\n  retry: 'Retry',\n  networkError: 'Network error',\n  networkErrorDesc:\n    'You are either offline or PoliTo servers are not available at the moment',\n\n  // Login screen\n  caption: 'The unofficial app for your\\nPoliTo account',\n  loginCall: 'Log in',\n  userPlaceholder: 'Username or e-mail address (e.g. S123456)',\n  passwordPlaceholder: 'Password',\n  login: 'Log in',\n  or: 'or',\n  and: 'and',\n  takeTour: 'Take the tour',\n  version: 'version',\n  title1: 'Open source',\n  desc1: 'Description 1',\n  title2: 'Powerful',\n  desc2: 'Description 2',\n  title3: 'Modern',\n  desc3: 'A modern, easy-to-use user interface',\n  agreement: 'By logging in, you agree to our',\n  tos: 'Terms of service',\n  privacyPolicy: 'Privacy policy',\n  noUsernameProvided: 'No username provided',\n  noPasswordProvided: 'No password provided',\n  invalidUsernameProvided: 'Username is not valid',\n  downloadNativeApp: 'Download the app',\n  downloadNativeAppDescription:\n    'Download the app to get access to all features.\\nAvailable for Android, Windows, macOS and Linux',\n  loginWebSpecificDescription: 'Try the web version, no download required',\n\n  // Home screen\n  home: 'Home',\n  quickSearch: 'Quick search...',\n  quickAccess: 'Quick access',\n  edit: 'EDIT',\n  allSections: 'All sections',\n  latestFiles: 'Latest files',\n  latestAlert: 'Latest alert',\n\n  // Sections\n  examSessions: 'Exam sessions',\n  timetable: 'Timetable',\n  material: 'Material',\n  courses: 'Courses',\n  bookings: 'Bookings',\n  exams: 'Exams',\n\n  // Email screen\n  email: 'E-mail',\n  unreadEmail: '{{count}} unread email',\n  unreadEmail_plural: '{{count}} unread emails',\n  noEmailAccess: 'E-mail access is not available yet.',\n  emailCannotBeShownDesktop: \"The desktop version can't show e-mail here\",\n  openBrowser: 'Open in browser',\n\n  // Settings screen\n  settings: 'Settings',\n  debugSettings: 'Debug settings',\n  experimentalSettings: 'Experimental settings',\n  logout: 'Logout',\n  notifications: 'Notifications',\n  notificationsDesc: 'Manage your notification preferences',\n  theme: 'Theme',\n  themeDesc: 'Choose dark mode, customize colors',\n  about: 'About',\n  aboutDesc: 'About Open PoliTo',\n  // Debug settings\n  debugEnableLogging: 'Enable logging',\n  debugEnableLoggingDesc: 'Save logs to device',\n  debugEnableLoggingDialogMessage: `<p>This option logs network requests and errors to a <b>local file</b>.\n  It is intended for debugging purposes only.</p> <p>Do <b>NOT</b> share these files\n  with people you don't trust, as they contain data from your account.</p>\n  <p>You can find the log files in <code>{{path}}</code>.</p>`,\n  debugResetConfig: 'Reset configuration',\n  debugResetConfigDesc: 'Restore to default settings',\n  debugTestNotification: 'Send test notification',\n  debugTestNotificationDesc:\n    'You should receive a notification in a few seconds',\n\n  // Experimental settings\n  experimentalEmailWebView: 'Open e-mail in app',\n  experimentalEmailWebViewDesc: 'Open e-mail page in a WebView',\n\n  // Material screen\n  // material: 'Material',\n  searchMaterial: 'Search material...',\n  recentMaterial: 'Recent material',\n  byCourse: 'By course',\n  selectCourseDropdown: 'Select course...',\n  selectCourse: 'Select a course to view its files',\n  explore: 'Explore',\n  recentlyAdded: 'Recently added',\n\n  // Bookings screen\n  newBooking: 'New booking',\n\n  // Courses screen\n  otherCourses: 'Other courses',\n\n  // Course screen\n  overview: 'Overview',\n  summary: 'Summary',\n  info: 'Info',\n  courseInfo: 'About this course',\n  recordings: 'Recordings',\n  videos: 'Videos',\n  noVideos: 'No videos',\n\n  // Exam sessions screen\n  allExams: 'All exams',\n  myBookings: 'My bookings',\n  availableToBook: 'Available to book',\n  unavailableExams: 'Unavailable',\n  bookingDeadline: 'Booking deadline',\n  confirmExamBooking: 'Confirm exam booking',\n  confirmExamBookingDialogMessage: `<p>Do you want to book this exam?</p>\n  <ul><li>{{code}} - {{name}}</li><li>{{date}}</li><li>{{rooms}}</li></ul>`,\n  cancelExamBooking: 'Cancel exam booking',\n  cancelExamBookingDialogMessage: `<p>Do you really want to <b><cancel</b> this exam booking?</p>\n  <ul><li>{{code}} - {{name}}</li><li>{{date}}</li><li>{{rooms}}</li></ul>`,\n\n  // Exams screen (Libretto)\n  yourAverageMark: 'Your average mark',\n  yourAverageMarkNotice: 'Not adjusted for lowest credits',\n  progressOverTime: 'Progress over time',\n  weightedAverage: 'Weighted average',\n  permanentMarks: 'Marks',\n  provisionalMarks: 'Provisional marks',\n  statusCodeHelp: 'What do status codes mean?',\n  examAbsent: 'ABSENT',\n  examFailed: 'FAILED',\n\n  // Timetable screen\n  jumpToDate: 'Jump to date',\n  thisWeek: 'This week',\n  timetableOptions: 'Timetable options',\n  timetablePriority: 'Show by priority',\n  timetablePriorityDesc: 'Events with higher priority will show first',\n  timetablePriorityList: 'Choose priority',\n\n  // Updater screen\n  newUpdateModalTitle: 'New update available',\n  newUpdateModalText:\n    'A new update is available. Please update the app to enjoy the latest features and bug fixes.',\n  newUpdateModalNotes: 'Update notes:',\n  updaterScreenHeading: 'Updating Open PoliTo',\n  updaterStateIdle: 'Waiting...',\n  updaterStateGetData: 'Getting latest update data...',\n  updaterStateDownload: 'Downloading update...',\n  updaterStateDone: 'Done! Please install the file.',\n  updaterStateCheckIntegrity: 'Checking file integrity...',\n  updaterStateError: 'Error during update!',\n  tryAgain: 'Try again',\n  reopenInstallMenu: 'Reopen install menu',\n  didYouMissTheInstallMenu: 'Did you miss the install menu?',\n\n  // Toast\n  logoutToastMessage: 'Logging out...',\n  loginPendingToastMessage: 'Connecting...',\n  loginErrorToastMessage: 'Authentication error',\n  loginErrorFlashDesc:\n    'Invalid credentials or Internet connection not available',\n  loginSuccessToastMessage: 'Log in successful!',\n  notImplementedToastMessage: 'Feature coming soon!',\n  notImplementedToastMessageDesc: 'Feature will be available in a next release',\n  restartToastMessage: 'Restart the app',\n  examsExamBookedToastMessage: 'Exam booked successfully!',\n  examsExamBookingErrorToastMessage: \"Error: Can't book exam\",\n  examsExamCanceledToastMessage: 'Exam booking canceled successfully!',\n  examsExamCancelingErrorToastMessage: \"Error: Can't cancel exam booking\",\n\n  // Info widgets\n  wipInfoWidgetTitle: 'Work in progress',\n  wipInfoWidgetDesc: 'This section is still a work in progress',\n\n  // Additional screens...\n};\n\nexport default EN;\n","import Config from 'react-native-config';\n\nconst IT = {\n  // General\n  appName:\n    Config.VARIANT === 'release'\n      ? 'Open PoliTo'\n      : `Open PoliTo\\n[${Config.VARIANT}]`,\n  search: 'Cerca',\n  searchResults: '{{count}} risultati trovati',\n  noResults: 'Nessun risultato',\n  tryADifferentTerm: 'Prova un altro termine',\n  open: 'Apri',\n  alerts: 'Avvisi',\n  oldVideos: 'Video di anni precedenti',\n  noContent: 'Nulla da mostrare...',\n  videoPlayer: 'Player video',\n  deadline: 'Scadenza',\n  pleaseWait: 'Per favore attendi...',\n  allF: 'Tutte',\n  allM: 'Tutti',\n  directAlerts: 'Individuali',\n  test: 'Test',\n  readF: 'Lette',\n  unreadF: 'Non lette',\n  searchForAnything: 'Cerca qualcosa...',\n  more: 'Altro',\n  relatedVideos: 'Video correlati',\n  files: 'File',\n  cancel: 'Annulla',\n  confirm: 'Conferma',\n  enable: 'Abilita',\n  bookVerb: 'Prenota',\n  allCourses: 'Tutti i corsi',\n  selectItem: 'Scegli elemento',\n  selectAll: 'Seleziona tutto',\n  deselectAll: 'Deseleziona tutto',\n  delete: 'Elimina',\n  markAsRead: 'Segna come letto',\n\n  // Notifications\n  defaultMsgTitle: '🚀 Nuova notifica',\n  defaultMsgBody: \"Apri l'app per vederla\",\n\n  // Splash screen\n  loading: 'Caricamento...',\n  retry: 'Riprova',\n  networkError: 'Errore di rete',\n  networkErrorDesc:\n    'Sei offline o i server PoliTo non sono attualmente disponibili',\n\n  // Login screen\n  caption: \"L'app non ufficiale per il\\ntuo account PoliTo\",\n  loginCall: 'Accedi',\n  userPlaceholder: 'Codice utente o indirizzo e-mail (es. S123456)',\n  passwordPlaceholder: 'Password',\n  login: 'Accedi',\n  or: 'oppure',\n  and: 'e',\n  takeTour: 'Fai il tour',\n  version: 'versione',\n  title1: 'Open source',\n  desc1: 'Descrizione 1',\n  title2: 'Potente',\n  desc2: 'Descrizione 2',\n  title3: 'Moderno',\n  desc3: \"Un'interfaccia moderna e facile da usare\",\n  agreement: 'Accedendo, acconsenti ai nostri',\n  tos: 'Termini di servizio',\n  privacyPolicy: 'Privacy policy',\n  noUsernameProvided: 'Nessun nome utente inserito',\n  noPasswordProvided: 'Nessuna password inserita',\n  invalidUsernameProvided: 'Nome utente non valido',\n  downloadNativeApp: \"Scarica l'app\",\n  downloadNativeAppDescription:\n    \"Scarica l'app per accedere a tutte le funzionalità.\\nDisponibile per Android, Windows, macOS e Linux\",\n  loginWebSpecificDescription:\n    'Prova la versione web, nessun download richiesto',\n\n  // Home screen\n  home: 'Home',\n  quickSearch: 'Ricerca rapida...',\n  quickAccess: 'Accesso rapido',\n  edit: 'MODIFICA',\n  allSections: 'Tutte le sezioni',\n  latestFiles: 'Ultimi file',\n  latestAlert: 'Ultimo avviso',\n\n  // Sections\n  examSessions: 'Sessioni',\n  timetable: 'Orario',\n  material: 'Materiale',\n  courses: 'Corsi',\n  bookings: 'Prenotazioni',\n  exams: 'Libretto',\n\n  // Email screen\n  email: 'E-mail',\n  unreadEmail: '{{count}} e-mail non letta',\n  unreadEmail_plural: '{{count}} e-mail non lette',\n  noEmailAccess: \"L'accesso alle e-mail non è ancora disponibile.\",\n  emailCannotBeShownDesktop:\n    'La versione desktop non può mostrare le email qui',\n  openBrowser: 'Apri nel browser',\n\n  // Settings screen\n  settings: 'Impostazioni',\n  debugSettings: 'Impostazioni di debug',\n  experimentalSettings: 'Impostazioni sperimentali',\n  logout: 'Esci',\n  notifications: 'Notifiche',\n  notificationsDesc: 'Gestisci le tue preferenze di notifica',\n  theme: 'Tema',\n  themeDesc: 'Scegli la dark mode, personalizza i colori',\n  about: 'Informazioni',\n  aboutDesc: 'Informazioni su Open PoliTo',\n  // Debug settings\n  debugEnableLogging: 'Abilita logging',\n  debugEnableLoggingDesc: 'Salva i log nel dispositivo',\n  debugEnableLoggingDialogMessage: `<p>Questa opzione salva le richieste di rete e gli errori in un <b>file locale</b>.\n  Deve essere utilizzata esclusivamente per il debugging.</p> <p><b>NON</b> condividere questi file\n  con persone di cui non ti fidi, perché contengono dati del tuo account.</p>\n  <p>Puoi trovare i file di log in <code>{{path}}</code>.</p>`,\n  debugResetConfig: 'Ripristina impostazioni',\n  debugResetConfigDesc: 'Torna alle impostazioni iniziali',\n  debugTestNotification: 'Invia notifica di test',\n  debugTestNotificationDesc: 'Dovresti ricevere una notifica in pochi secondi',\n  // Experimental settings\n  experimentalEmailWebView: 'Apri e-mail in app',\n  experimentalEmailWebViewDesc: 'Apri la schermata e-mail in una WebView',\n\n  // Material screen\n  // material: 'Materiale',\n  searchMaterial: 'Cerca materiale...',\n  recentMaterial: 'Materiali recenti',\n  byCourse: 'Per corso',\n  selectCourseDropdown: 'Seleziona corso...',\n  selectCourse: 'Seleziona un corso per vederne i file',\n  explore: 'Esplora',\n  recentlyAdded: 'Aggiunti di recente',\n\n  // Bookings screen\n  newBooking: 'Nuova prenotazione',\n\n  // Courses screen\n  otherCourses: 'Altri corsi',\n\n  // Course screen\n  overview: 'Riepilogo',\n  summary: 'Overview',\n  info: 'Info',\n  courseInfo: 'Informazioni sul corso',\n  recordings: 'Registrazioni',\n  videos: 'Video',\n  noVideos: 'Nessun video',\n\n  // Exam sessions screen\n  allExams: 'Tutti gli esami',\n  myBookings: 'Le mie prenotazioni',\n  availableToBook: 'Prenotabili',\n  unavailableExams: 'Non disponibili',\n  bookingDeadline: 'Scadenza',\n  confirmExamBooking: 'Conferma prenotazione esame',\n  confirmExamBookingDialogMessage: `<p>Confermi la prenotazione dell'esame?</p>\n  <ul><li>{{code}} - {{name}}</li><li>{{date}}</li><li>{{rooms}}</li></ul>`,\n  cancelExamBooking: 'Annulla prenotazione esame',\n  cancelExamBookingDialogMessage: `<p>Vuoi davvero <b>annullare</b> questa prenotazione?</p>\n  <ul><li>{{code}} - {{name}}</li><li>{{date}}</li><li>{{rooms}}</li></ul>`,\n\n  // Exams screen (Libretto)\n  yourAverageMark: 'La tua media',\n  yourAverageMarkNotice: 'Non depurata dai crediti più bassi',\n  progressOverTime: 'Progresso nel tempo',\n  weightedAverage: 'Media ponderata',\n  permanentMarks: 'Valutazioni',\n  provisionalMarks: 'Valutazioni provvisorie',\n  statusCodeHelp: 'Cosa significano i codici di stato?',\n  examAbsent: 'ASSENTE',\n  examFailed: 'FALLITO',\n\n  // Timetable screen\n  jumpToDate: 'Vai a data',\n  thisWeek: 'Questa settimana',\n  timetableOptions: 'Opzioni orario',\n  timetablePriority: 'Mostra per priorità',\n  timetablePriorityDesc:\n    'Gli eventi con priorità più alta verranno mostrati per primi',\n  timetablePriorityList: 'Scegli priorità',\n\n  // Updater screen\n  newUpdateModalTitle: 'Aggiornamento disponibile',\n  newUpdateModalText:\n    \"È disponibile un aggiornamento. Aggiorna l'app per accedere a nuove funzionalità e correzioni di bug.\",\n  newUpdateModalNotes: 'Note di aggiornamento:',\n  updaterScreenHeading: 'Aggiornamento di Open PoliTo',\n  updaterStateIdle: 'In attesa...',\n  updaterStateGetData: 'Scaricando dati di aggiornamento...',\n  updaterStateDownload: 'Download in corso...',\n  updaterStateDone: 'Fatto! Installa il file.',\n  updaterStateCheckIntegrity: 'Controllo integrità del file...',\n  updaterStateError: \"Errore durante l'aggiornamento!\",\n  tryAgain: 'Riprova',\n  reopenInstallMenu: 'Riapri menu di installazione',\n  didYouMissTheInstallMenu: 'Hai perso il menu di installazione?',\n\n  // Toast\n  logoutToastMessage: 'Disconnessione...',\n  loginPendingToastMessage: 'Accesso...',\n  loginErrorToastMessage: 'Errore di accesso',\n  loginErrorFlashDesc:\n    'Credenziali invalide o connessione Internet non disponibile',\n  loginSuccessToastMessage: 'Accesso riuscito!',\n  notImplementedToastMessage: 'Funzionalità in arrivo!',\n  notImplementedToastMessageDesc:\n    'Questa funzionalità sarà disponibile in una prossima versione',\n  restartToastMessage: \"Riavvia l'app\",\n  examsExamBookedToastMessage: 'Esame prenotato con successo!',\n  examsExamBookingErrorToastMessage: \"Errore: Impossibile prenotare l'esame\",\n  examsExamCanceledToastMessage: 'Prenotazione annullata con successo!',\n  examsExamCancelingErrorToastMessage:\n    'Errore: Impossibile annullare la prenotazione',\n\n  // Info widgets\n  wipInfoWidgetTitle: 'Lavori in corso',\n  wipInfoWidgetDesc: 'Questa sezione è ancora in costruzione',\n\n  // Additional screens...\n};\n\nexport default IT;\n","import React, {useContext, useEffect, useMemo, useRef} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport {SessionState, setToast} from '../store/sessionSlice';\nimport {AppDispatch, RootState} from '../store/store';\nimport PressableBase from './core/PressableBase';\nimport TablerIcon from './core/TablerIcon';\nimport Text from './core/Text';\n\n// TODO swipe to dismiss\n// TODO in/out animation\n\nconst types = {\n  success: ['circle-check', colors.green],\n  warn: ['alert-triangle', colors.orange],\n  err: ['circle-x', colors.red],\n  info: ['info-circle', colors.accent300],\n};\n\nconst Toast = () => {\n  const {dark} = useContext(DeviceContext);\n  const {toast} = useSelector<RootState, SessionState>(state => state.session);\n  const dispatch = useDispatch<AppDispatch>();\n\n  const timeoutRef = useRef<any>(null);\n\n  // Hide toast after some time\n  useEffect(() => {\n    if (toast.visible) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(dismissToast, 5000);\n    }\n  }, [toast]);\n\n  // Handles other stuff before resetting toast\n  const dismissToast = () => {\n    setTimeout(resetToast, 0);\n  };\n\n  // Resets toast to default state\n  const resetToast = () => {\n    dispatch(setToast({icon: '', visible: false, message: '', type: 'info'}));\n  };\n\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        borderWidth: 1 * p,\n        borderColor: types[toast.type][1],\n        borderRadius: 4 * p,\n        backgroundColor: dark ? colors.gray700 : colors.gray200,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginHorizontal: 16 * p,\n        marginTop: 16 * p,\n        padding: 12 * p,\n      },\n    });\n  }, [toast, dark]);\n\n  return toast.visible ? (\n    <View style={_styles.container}>\n      <View style={{flexDirection: 'row', alignItems: 'center'}}>\n        <TablerIcon\n          name={toast.icon ? toast.icon : types[toast.type][0]}\n          color={types[toast.type][1]}\n          size={18 * p}\n          style={{marginRight: 12 * p}}\n        />\n        <Text\n          s={12 * p}\n          w=\"m\"\n          c={colors.gray100}\n          style={{flex: 1, marginRight: 2 * p}}>\n          {toast.message}\n        </Text>\n        <PressableBase onPress={dismissToast}>\n          <TablerIcon\n            name=\"x\"\n            color={dark ? colors.gray100 : colors.gray800}\n            size={18 * p}\n          />\n        </PressableBase>\n      </View>\n    </View>\n  ) : null;\n};\n\nexport default Toast;\n","import React, {useContext} from 'react';\nimport {ModalContext} from '../../context/ModalProvider';\n\nconst ModalComponent = () => {\n  const {modal} = useContext(ModalContext);\n  return <>{modal}</>;\n};\n\nexport default ModalComponent;\n","import React, {useContext} from 'react';\nimport {View} from 'react-native';\nimport colors from '../colors';\nimport {DeviceContext} from '../context/Device';\nimport {p} from '../scaling';\nimport Text from './core/Text';\n\nconst Fallback = () => {\n  const {dark} = useContext(DeviceContext);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: dark ? colors.gray800 : colors.gray100,\n      }}>\n      <Text s={16 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n        LOADING...\n      </Text>\n    </View>\n  );\n};\n\nexport default Fallback;\n","module.exports = __webpack_public_path__ + \"./fonts/Inter-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Inter-Medium.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Inter-Bold.ttf\";","import {\n  AnyAction,\n  configureStore,\n  Dispatch,\n  ThunkDispatch,\n} from '@reduxjs/toolkit';\nimport coursesSlice from './coursesSlice';\nimport examsSlice from './examsSlice';\nimport sessionSlice from './sessionSlice';\nimport userSlice from './userSlice';\n\nconst store = configureStore({\n  reducer: {\n    session: sessionSlice,\n    user: userSlice,\n    courses: coursesSlice,\n    exams: examsSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = Dispatch<AnyAction> &\n  ThunkDispatch<RootState, null, AnyAction>;\n\nexport default store;\n","export type Color = string;\n\nconst colors = {\n  // Legacy palette\n  // TODO delete when UI transition complete\n  gradient1: '#253efc',\n  gradient2: '#4625fc',\n  black: '#000',\n  white: '#fff',\n  background: '#FDFDFD',\n  gray: '#777',\n  mediumGray: '#aaa',\n  lightGray: '#eee',\n  orange: '#ffa500',\n\n  // Accent colors\n  accent50: '#F0F5FF',\n  accent100: '#D3E2FF',\n  accent200: '#95B9FF',\n  accent300: '#538DFF',\n\n  // Gray colors\n  gray50: '#F5F6F8',\n  gray100: '#DFE2E8',\n  gray200: '#B0B6C4',\n  gray300: '#878F9F',\n  gray400: '#626A79',\n  gray500: '#434B5A',\n  gray600: '#29303F',\n  gray700: '#1B1E25',\n  gray800: '#0E0E10',\n  gray900: '#010102',\n\n  // Other colors\n  red: '#FF3F3F',\n  green: '#6FCF97',\n};\n\nconst courseColors = ['#0E13B0', '#C2272C', '#E09326', '#6903AD', '#1E91D6'];\n\nexport default colors;\nexport {courseColors};\n","import React, {FC, ReactNode, useContext, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Color} from '../../colors';\nimport {ModalContext} from '../../context/ModalProvider';\nimport ModalBase, {ModalAction} from './ModalBase';\n\nexport interface BaseActionConfirmModalProps {\n  title: string;\n  onConfirm?: () => any;\n  onCancel?: () => any;\n  icon?: string;\n  accentColor?: Color;\n  customLabels?: {\n    cancel: string;\n    confirm: string;\n  };\n  children: ReactNode;\n}\n\nconst BaseActionConfirmModal: FC<BaseActionConfirmModalProps> = ({\n  title,\n  children,\n  onConfirm = () => {},\n  onCancel = () => {},\n  icon,\n  accentColor,\n  customLabels,\n}) => {\n  const {hideModal} = useContext(ModalContext);\n  const {t} = useTranslation();\n\n  const actions = useMemo<ModalAction[]>(() => {\n    return [\n      {\n        type: 'secondary',\n        label: customLabels ? customLabels.cancel : t('cancel'),\n        value: 'cancel',\n        onSelect: async () => {\n          onCancel();\n          hideModal();\n        },\n        dismiss: true,\n      },\n      {\n        type: 'colored',\n        label: customLabels ? customLabels.confirm : t('confirm'),\n        value: 'confirm',\n        onSelect: async () => {\n          onConfirm();\n          hideModal();\n        },\n        dismiss: true,\n      },\n    ];\n  }, [hideModal, onCancel, onConfirm, t, customLabels]);\n\n  return (\n    <ModalBase\n      icon={icon}\n      accentColor={accentColor}\n      title={title}\n      actions={actions}>\n      {children}\n    </ModalBase>\n  );\n};\n\nexport default BaseActionConfirmModal;\n","import React, {\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport {Modal, ScrollView, TouchableOpacity, View} from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport colors, {Color} from '../../colors';\nimport {DeviceContext} from '../../context/Device';\nimport {ModalContext} from '../../context/ModalProvider';\nimport {p} from '../../scaling';\nimport Button from '../../ui/core/Button';\nimport TablerIcon from '../../ui/core/TablerIcon';\nimport Text from '../../ui/core/Text';\n\nexport interface ModalAction {\n  type: 'colored' | 'main' | 'secondary';\n  label: string;\n  value: string;\n  onSelect: (value: string) => Promise<any>;\n  dismiss: boolean; // Whether to dismiss the modal when action executed\n}\n\nexport interface ModalBaseProps {\n  title: string;\n  actions?: ModalAction[];\n  dismissable?: boolean;\n  onDismiss?: () => any;\n  children: ReactNode;\n  icon?: string;\n  accentColor?: Color;\n}\n\nconst ModalBase: FC<ModalBaseProps> = ({\n  title,\n  actions,\n  dismissable = true,\n  onDismiss = () => {},\n  children,\n  icon,\n  accentColor,\n}) => {\n  const {dark} = useContext(DeviceContext);\n  const {visible, hideModal} = useContext(ModalContext);\n\n  const [internalVisible, setInternalVisible] = useState(true);\n\n  const dismiss = useCallback(() => {\n    if (dismissable) {\n      setTimeout(() => setInternalVisible(false), 200);\n      hideModal();\n      onDismiss();\n    }\n  }, [hideModal, dismissable, onDismiss]);\n\n  const offset = useSharedValue(0);\n\n  const animStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: `rgba(0, 0, 0, ${offset.value / 2})`,\n      opacity: offset.value,\n      transform: [\n        {\n          scale: 1.1 - 0.1 * offset.value,\n        },\n      ],\n    };\n  });\n\n  useEffect(() => {\n    offset.value = withTiming(visible ? 1 : 0, {duration: 200});\n  }, [visible, offset]);\n\n  return (\n    <Modal\n      transparent={true}\n      visible={internalVisible}\n      animationType=\"none\"\n      statusBarTranslucent={true}\n      onRequestClose={dismiss}>\n      <Animated.View style={[animStyle, {flex: 1, justifyContent: 'center'}]}>\n        <TouchableOpacity onPress={dismiss} style={{flex: 1}} />\n        <View\n          style={{\n            maxHeight: '80%',\n            backgroundColor: dark ? colors.gray700 : colors.gray200,\n            borderRadius: 4 * p,\n            marginHorizontal: 16 * p,\n          }}>\n          <ScrollView>\n            <View\n              style={{\n                paddingVertical: 24 * p,\n                paddingHorizontal: 16 * p,\n              }}>\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}>\n                {icon && (\n                  <>\n                    <TablerIcon name={icon} color={accentColor} size={24 * p} />\n                    <View style={{width: 16 * p}} />\n                  </>\n                )}\n                <Text s={16} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n                  {title}\n                </Text>\n              </View>\n              <View\n                style={{\n                  marginTop: 16 * p,\n                }}>\n                {children}\n              </View>\n            </View>\n          </ScrollView>\n          {actions && (\n            <View\n              style={{\n                flexDirection: 'row',\n                paddingBottom: 24 * p,\n                paddingHorizontal: 16 * p,\n              }}>\n              {actions.map((action, i) => (\n                <View\n                  key={action.value}\n                  style={[\n                    {\n                      flex: 1,\n                    },\n                    i !== 0\n                      ? {\n                          marginLeft: 32 * p,\n                        }\n                      : {},\n                  ]}>\n                  <Button\n                    color={\n                      action.type === 'colored' ? accentColor : colors.accent300\n                    }\n                    secondary={action.type === 'secondary'}\n                    text={action.label}\n                    onPress={() => {\n                      action.onSelect(action.value).then(() => {\n                        action.dismiss && dismiss();\n                      });\n                    }}\n                  />\n                </View>\n              ))}\n            </View>\n          )}\n        </View>\n        <TouchableOpacity onPress={dismiss} style={{flex: 1}} />\n      </Animated.View>\n    </Modal>\n  );\n};\n\nexport default ModalBase;\n","/**\n * @file Manages actions and state related courses and their data\n */\n\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {Device} from 'open-polito-api/lib/device';\nimport {\n  CourseInfo,\n  BasicCourseInfo,\n  getExtendedCourseInfo,\n} from 'open-polito-api/lib/course';\nimport {\n  errorStatus,\n  initialStatus,\n  pendingStatus,\n  shouldWaitForCooldown,\n  Status,\n  successStatus,\n} from './status';\nimport {RootState} from './store';\nimport {MaterialItem} from 'open-polito-api/lib/material';\nimport {\n  getCoursesInfo,\n  PermanentMark,\n  ProvisionalMark,\n} from 'open-polito-api/lib/courses';\nimport {ExtendedFile} from '../types';\n\nexport type CourseState = {\n  basicInfo: BasicCourseInfo;\n  extendedInfo?: CourseInfo;\n  isMain: boolean; // whether course is standard or extra\n  status: Status;\n};\n\nexport type CoursesState = {\n  marks: {\n    permanent: PermanentMark[];\n    provisional: ProvisionalMark[];\n  };\n  courses: CourseState[];\n  loadCoursesStatus: Status;\n  loadExtendedCourseInfoStatus: Status;\n\n  recentMaterial: ExtendedFile[];\n  getRecentMaterialStatus: Status;\n};\n\nconst initialState: CoursesState = {\n  marks: {permanent: [], provisional: []},\n  courses: [],\n  loadCoursesStatus: initialStatus(),\n  loadExtendedCourseInfoStatus: initialStatus(),\n\n  recentMaterial: [],\n  getRecentMaterialStatus: initialStatus(),\n};\n\n/**\n * Wrapper of {@link getCoursesInfo}.\n *\n * @remarks\n * Calls {@link getCoursesInfo} and re-arranges data for the store's custom type.\n */\nexport const loadCoursesData = createAsyncThunk<\n  {\n    marks: {permanent: PermanentMark[]; provisional: ProvisionalMark[]};\n    courses: CourseState[];\n  },\n  Device,\n  {state: RootState}\n>(\n  'courses/loadCoursesData',\n  async device => {\n    const data = await getCoursesInfo(device);\n    let courses: CourseState[] = [\n      ...data.course_plan.standard.map(course => {\n        return {basicInfo: course, status: initialStatus(), isMain: true};\n      }),\n      ...data.course_plan.extra.map(course => {\n        return {basicInfo: course, status: initialStatus(), isMain: false};\n      }),\n    ];\n    return {\n      marks: data.marks,\n      courses: courses,\n    };\n  },\n  {\n    condition: (_, {getState}) =>\n      !shouldWaitForCooldown(getState().courses.loadCoursesStatus),\n  },\n);\n\n/**\n * Wrapper of {@link getExtendedCourseInfo}.\n *\n * @remarks\n * Accepts {@link BasicCourseInfo} and {@link Device}, then loads all its data and returns\n * loaded {@link CourseInfo}.\n */\nexport const loadCourse = createAsyncThunk<\n  CourseInfo,\n  {basicCourseInfo: BasicCourseInfo; device: Device},\n  {state: RootState}\n>(\n  'courses/loadCourse',\n  async ({basicCourseInfo, device}, _) => {\n    return await getExtendedCourseInfo(device, basicCourseInfo);\n  },\n  {\n    condition: ({basicCourseInfo}, {getState}) =>\n      !shouldWaitForCooldown(\n        getState().courses.courses.find(\n          c =>\n            c.basicInfo.code + c.basicInfo.name ===\n            basicCourseInfo.code + basicCourseInfo.name,\n        )?.status,\n      ),\n  },\n);\n\n/**\n * Gets most recent items from material.\n */\nexport const getRecentMaterial = createAsyncThunk<\n  ExtendedFile[],\n  void,\n  {state: RootState}\n>('courses/getRecentMaterial', async (_, {getState}) => {\n  let res: ExtendedFile[] = [];\n  const findFiles = (\n    items: MaterialItem[],\n    course_name: string,\n    course_code: string,\n  ) => {\n    const _res: ExtendedFile[] = [];\n    items.forEach(item => {\n      if (item.type == 'file') {\n        _res.push({...item, course_code, course_name});\n      } else {\n        _res.push(...findFiles(item.children, course_name, course_code));\n      }\n    });\n    return _res;\n  };\n  getState().courses.courses.forEach(course => {\n    res.push(\n      ...findFiles(\n        course.extendedInfo?.material || [],\n        course.basicInfo.name,\n        course.basicInfo.code,\n      ),\n    );\n  });\n  res.sort((a, b) => b.creation_date - a.creation_date).slice(0, 50);\n  return res;\n});\n\n/**\n * Utility function to get index of {@link CourseState} from store\n * @param courseID\n * @param courses\n * @returns index (-1 if not found)\n */\nexport const findCourseIndexByID = (\n  courseID: string,\n  courses: CourseState[],\n): number => {\n  return courses.findIndex(\n    course => courseID == course.basicInfo.code + course.basicInfo.name,\n  );\n};\n\n/**\n * Utility function that returns updated course array\n * @param courseState The updated course\n * @param courses All courses\n * @return courses\n */\nconst getUpdatedCourses = (\n  courseState: CourseState,\n  courses: CourseState[],\n): CourseState[] => {\n  const courseID = courseState.basicInfo.code + courseState.basicInfo.name;\n  const index = findCourseIndexByID(courseID, courses);\n\n  let mutatedArray = [];\n  if (index != -1) {\n    mutatedArray = courses.map((course, _index) => {\n      if (_index != index) {\n        return course;\n      } else {\n        return courseState;\n      }\n    });\n  } else {\n    // append if not found\n    mutatedArray = [...courses];\n    mutatedArray.push(courseState);\n  }\n  return mutatedArray;\n};\n\nexport const coursesSlice = createSlice({\n  name: 'courses',\n  initialState,\n  reducers: {\n    setLoadExtendedCourseInfoStatus: (state, action: PayloadAction<Status>) => {\n      state.loadExtendedCourseInfoStatus = action.payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(loadCoursesData.pending, (state, _) => {\n        state.loadCoursesStatus = pendingStatus();\n      })\n      .addCase(loadCoursesData.fulfilled, (state, action) => {\n        state.marks = action.payload.marks;\n        state.courses = action.payload.courses;\n        state.loadCoursesStatus = successStatus();\n      })\n      .addCase(loadCoursesData.rejected, (state, action) => {\n        state.loadCoursesStatus = errorStatus(action.error);\n      })\n\n      .addCase(loadCourse.pending, (state, action) => {\n        state.courses = getUpdatedCourses(\n          {\n            ...state.courses[\n              findCourseIndexByID(\n                action.meta.arg.basicCourseInfo.code +\n                  action.meta.arg.basicCourseInfo.name,\n                state.courses,\n              )\n            ],\n            status: pendingStatus(),\n          },\n          state.courses,\n        );\n\n        state.getRecentMaterialStatus = initialStatus();\n        state.recentMaterial = [];\n      })\n      .addCase(loadCourse.fulfilled, (state, action) => {\n        state.courses = getUpdatedCourses(\n          {\n            ...state.courses[\n              findCourseIndexByID(\n                action.meta.arg.basicCourseInfo.code +\n                  action.meta.arg.basicCourseInfo.name,\n                state.courses,\n              )\n            ],\n            extendedInfo: action.payload,\n            status: successStatus(),\n          },\n          state.courses,\n        );\n      })\n      .addCase(loadCourse.rejected, (state, action) => {\n        state.courses = getUpdatedCourses(\n          {\n            ...state.courses[\n              findCourseIndexByID(\n                action.meta.arg.basicCourseInfo.code +\n                  action.meta.arg.basicCourseInfo.name,\n                state.courses,\n              )\n            ],\n            status: errorStatus(action.error),\n          },\n          state.courses,\n        );\n      })\n\n      .addCase(getRecentMaterial.pending, state => {\n        state.getRecentMaterialStatus = pendingStatus();\n      })\n      .addCase(getRecentMaterial.fulfilled, (state, action) => {\n        state.recentMaterial = action.payload;\n        state.getRecentMaterialStatus = successStatus();\n      })\n      .addCase(getRecentMaterial.rejected, (state, {error}) => {\n        state.getRecentMaterialStatus = errorStatus(error);\n      });\n  },\n});\n\nexport const {setLoadExtendedCourseInfoStatus} = coursesSlice.actions;\n\nexport default coursesSlice.reducer;\n","import {Platform} from 'react-native';\n\n/**\n * Get scaling factor for current device\n *\n * TODO compute for different screen sizes\n * @returns scaling factor\n */\nexport const getScalingFactor = () => {\n  if (Platform.OS === 'web') {\n    return 1.25;\n  }\n  return 1.15;\n};\n\nexport const p = getScalingFactor();\n","import React, {FC, useMemo} from 'react';\nimport {StyleSheet, Text as RNText, TextProps, TextStyle} from 'react-native';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport colors, {Color} from '../../colors';\nimport openURL from '../../utils/openUrl';\n\nexport type TextParams = {\n  s: number;\n  c: Color;\n  w: 'r' | 'm' | 'b'; // regular, medium, bold\n  style?: TextStyle;\n  href?: string;\n} & TextProps;\n\nconst Text: FC<TextParams> = ({\n  children,\n  s,\n  c,\n  w,\n  style = {},\n  href = '',\n  ...props\n}) => {\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      text: {\n        color: c,\n        fontSize: s,\n        fontFamily:\n          w === 'r'\n            ? 'Inter-Regular'\n            : w === 'm'\n            ? 'Inter-Medium'\n            : 'Inter-Bold',\n      },\n      textHref: href\n        ? {\n            color: colors.accent300,\n            textDecorationLine: 'underline',\n            textDecorationStyle: 'solid',\n            textDecorationColor: colors.accent300,\n          }\n        : {},\n    });\n  }, [c, s, w, href]);\n\n  const textComponent = useMemo(\n    () => (\n      <RNText\n        style={{..._styles.text, ..._styles.textHref, ...(style as Object)}}\n        {...props}>\n        {children}\n      </RNText>\n    ),\n    [_styles, children, props, style],\n  );\n\n  return href ? (\n    <TouchableOpacity onPress={() => openURL(href)}>\n      {textComponent}\n    </TouchableOpacity>\n  ) : (\n    textComponent\n  );\n};\n\nexport default Text;\n","import {Device} from 'open-polito-api/lib/device';\nimport React, {\n  createContext,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  ColorSchemeName,\n  useColorScheme,\n  useWindowDimensions,\n} from 'react-native';\nimport {useSelector} from 'react-redux';\nimport {Configuration} from '../defaultConfig';\nimport {RootState} from '../store/store';\nimport {DeviceSize} from '../types';\nimport {createDevice} from '../utils/api-utils';\nimport Logger from '../utils/Logger';\n\nexport type DeviceProviderProps = {\n  chosenTheme: string;\n\n  device: Device;\n  setDevice: React.Dispatch<React.SetStateAction<Device>>;\n\n  colorScheme: ColorSchemeName;\n  dark: boolean;\n  size: DeviceSize;\n};\n\nexport type DeviceProviderFunctionProps = {\n  chosenTheme: string;\n  colorScheme: ColorSchemeName;\n\n  children: ReactNode;\n  device: Device;\n};\n\nexport const DeviceContext = createContext<DeviceProviderProps>({\n  chosenTheme: 'system',\n\n  device: createDevice('', ''),\n  setDevice: () => {},\n\n  colorScheme: 'dark',\n  dark: true,\n\n  size: DeviceSize.normal,\n});\n\n/**\n * Returns a component with a {@link Device} instance provider.\n * Wraps all app components that need access to the Device instance.\n * @param param0 {@link DeviceProviderFunctionProps} object\n * @returns\n */\nconst DeviceProvider = ({\n  children,\n  device,\n}: {\n  children: ReactNode;\n  device: Device;\n}) => {\n  const [_device, _setDevice] = useState(device);\n\n  const config = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  /**\n   * Set request logger when config or device change\n   */\n  useEffect(() => {\n    device.request_logger = config.logging ? Logger.logRequestSync : () => {};\n  }, [config, device]);\n\n  const {width} = useWindowDimensions();\n\n  const _colorScheme = useColorScheme();\n  const _dark = useMemo<boolean>(() => {\n    return config.theme === 'system'\n      ? _colorScheme === 'dark'\n      : config.theme === 'dark';\n  }, [config.theme, _colorScheme]);\n  const size = useMemo<DeviceSize>(\n    () => (width >= 1000 ? DeviceSize.lg : DeviceSize.normal),\n    [width],\n  );\n\n  return (\n    <DeviceContext.Provider\n      value={{\n        device: _device,\n        setDevice: d => {\n          _setDevice(d);\n        },\n\n        chosenTheme: config.theme,\n        colorScheme: _colorScheme,\n        dark: _dark,\n        size,\n      }}>\n      {children}\n    </DeviceContext.Provider>\n  );\n};\n\nexport default DeviceProvider;\n","import {Notice} from 'open-polito-api/lib/course';\nimport {File} from 'open-polito-api/lib/material';\n\n/**\n * Extends the API's File type by adding some course data\n */\nexport type ExtendedFile = File & {\n  course_name: string;\n  course_code: string;\n};\n\n/**\n * Extends the API's Notice type\n */\nexport type ExtendedAlert = Notice & {\n  course_name: string;\n  course_code: string;\n};\n\nexport type DropdownItem = {\n  label: string;\n  value: string;\n};\n\nexport enum DeviceSize {\n  normal,\n  lg,\n}\n","import React from 'react';\n\nconst TablerIcon = React.lazy(() => import('./TablerIconWebLazy'));\n\nexport default TablerIcon;\n","import React, {FC, useMemo} from 'react';\nimport {\n  ActivityIndicator,\n  Pressable,\n  PressableProps,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport colors, {Color} from '../../colors';\nimport {p} from '../../scaling';\nimport PressableBase from './PressableBase';\nimport TablerIcon from './TablerIcon';\nimport Text from './Text';\n\ntype ButtonParams = {\n  text?: string;\n  icon?: string;\n  secondary?: boolean;\n  color?: Color;\n  loading?: boolean;\n  style?: ViewStyle;\n  small?: boolean;\n} & PressableProps;\n\nconst Button: FC<ButtonParams> = ({\n  text,\n  icon = '',\n  secondary = false,\n  color = '',\n  loading = false,\n  style = {},\n  small = false,\n  ...props\n}) => {\n  const _styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        flexDirection: 'row',\n        backgroundColor: color || colors.accent300,\n        borderColor: secondary ? color || colors.accent300 : 'rgba(0,0,0,0)',\n        borderWidth: secondary ? 1 * p : 0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: (small ? 30 : 40) * p,\n        paddingHorizontal: (small ? 6 : 12) * p,\n        // paddingVertical: 12 * p,\n        borderRadius: 4 * p,\n      },\n      containerSecondary: {\n        backgroundColor: 'rgba(0,0,0,0)',\n      },\n    });\n  }, [color, secondary, small]);\n\n  return (\n    <PressableBase>\n      <Pressable {...props}>\n        <View\n          style={{\n            ..._styles.container,\n            ...(secondary ? _styles.containerSecondary : {}),\n            ...(style as Object),\n          }}>\n          <>\n            {loading ? (\n              <ActivityIndicator\n                size={(small ? 10 : 18) * p}\n                color={color || (secondary ? colors.accent300 : colors.gray50)}\n                style={{marginRight: (small ? 4 : 8) * p}}\n              />\n            ) : icon ? (\n              <TablerIcon\n                name={icon}\n                color={color || (secondary ? colors.accent300 : colors.gray50)}\n                size={(small ? 14 : 18) * p}\n                style={{marginRight: (small ? 4 : 8) * p}}\n              />\n            ) : null}\n            <Text\n              s={small ? 10 : 12}\n              w=\"m\"\n              c={secondary ? color || colors.accent300 : colors.gray50}>\n              {text?.toUpperCase()}\n            </Text>\n            {props.children}\n          </>\n        </View>\n      </Pressable>\n    </PressableBase>\n  );\n};\n\nexport default Button;\n","/**\n * @file Functions to simplify interaction with open-polito-api\n */\n\nimport {Device} from 'open-polito-api/lib/device';\nimport {DeviceData} from 'open-polito-api/lib/device';\nimport {Platform} from 'react-native';\n\n/**\n * Abstracts creation of Device instance\n * @param uuid The device's UUID\n * @param token Access tokem\n * @returns Device\n */\nexport function createDevice(uuid: string, token?: string): Device {\n  const dev = new Device(uuid, 10000);\n  if (token) dev.token = token;\n  return dev;\n}\n\n/**\n * Returns device data that is sent to PoliTo servers during first login\n * @returns DeviceData object\n */\nexport function getDeviceData(): DeviceData {\n  return {\n    platform: Platform.OS,\n    version: Platform.Version + '',\n    model: 'Generic',\n    manufacturer: 'Unknown',\n  };\n}\n","export const CONFIG_SCHEMA_VERSION = 3;\n\nexport type Configuration = {\n  schemaVersion: number;\n\n  beta: boolean;\n\n  logging: boolean;\n  login: boolean;\n\n  theme: 'dark' | 'light' | 'system';\n\n  timetableOverlap: 'split' | 'priority';\n  timetablePriority: string[];\n};\n\nconst defaultConfig: Configuration = {\n  schemaVersion: CONFIG_SCHEMA_VERSION,\n\n  beta: false,\n\n  logging: false,\n  login: false,\n\n  theme: 'system',\n\n  timetableOverlap: 'split',\n  timetablePriority: [],\n};\n\nexport default defaultConfig;\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst credentialsKey = '@credentials';\n\nexport const getDocumentsPath = () => {\n  return null;\n};\n\nexport const appendFile = async (path: string, content: string) => {\n  console.warn('FILESYSTEM MODULE FOR WEB NOT IMPLEMENTED');\n};\n\nexport const getCredentials = async () => {\n  const res = await AsyncStorage.getItem(credentialsKey);\n  if (res) {\n    return JSON.parse(res);\n  }\n  return undefined;\n};\n\nexport const saveCredentials = async (username: string, password: string) => {\n  return await AsyncStorage.setItem(\n    credentialsKey,\n    JSON.stringify({\n      username,\n      password,\n    }),\n  );\n};\n\nexport const clearCredentials = async () => {\n  return await AsyncStorage.removeItem(credentialsKey);\n};\n","import moment from 'moment';\nimport {Entry} from 'open-polito-api/lib/device';\nimport Config from 'react-native-config';\nimport DeviceInfo from 'react-native-device-info';\nimport store from '../store/store';\nimport version from '../../version.json';\nimport {appendFile, getDocumentsPath} from './fs';\n\nexport type BasicDeviceInfoLogEntry = {\n  type: 'DEVICE_INFO';\n  appBuildNumber: string;\n  appBuildVariant: string;\n  appVersion: string;\n  appVersionBinary: string;\n  osApiLevel: number;\n  osName: string;\n  osVersion: string;\n  theme: 'light' | 'dark' | 'system';\n};\n\nexport type RequestLogEntry = Entry & {\n  type: 'REQUEST';\n};\n\nexport type ErrorLogEntry = Error & {\n  type: 'ERROR';\n};\n\nexport type LogEntry =\n  | BasicDeviceInfoLogEntry\n  | RequestLogEntry\n  | ErrorLogEntry;\n\nexport default class Logger {\n  public static logsDirectoryPath = getDocumentsPath();\n\n  public static logFilePath =\n    Logger.logsDirectoryPath +\n    '/' +\n    'request_log-' +\n    moment().format('YYYY-MM-DD-THHmmssSSS') +\n    '.txt';\n\n  public static hasLoggedBasicDeviceInfo: boolean = false;\n\n  /**\n   * Writes log entry to log file\n   * @param entry\n   *\n   * @remarks\n   * Uses ExternalDirectoryPath (/storage/emulated/0/Android/data/org.openpolito.app/files/) on Android,\n   * DocumentDirectoryPath on iOS\n   */\n  static async writeToFile(entry: LogEntry) {\n    await appendFile(Logger.logFilePath, JSON.stringify(entry) + '\\n').catch(\n      err => console.log(err),\n    );\n  }\n\n  /**\n   * Logs basic device info\n   */\n  static async logBasicDeviceInfo() {\n    if (Logger.hasLoggedBasicDeviceInfo) return;\n    const entry: BasicDeviceInfoLogEntry = {\n      type: 'DEVICE_INFO',\n      appBuildNumber: DeviceInfo.getBuildNumber(),\n      appBuildVariant: Config.VARIANT || '',\n      appVersion: version.version,\n      appVersionBinary: DeviceInfo.getVersion(),\n      osApiLevel: DeviceInfo.getApiLevelSync(),\n      osName: DeviceInfo.getSystemName() || DeviceInfo.getBaseOsSync(),\n      osVersion: DeviceInfo.getSystemVersion(),\n      theme: store.getState().session.config.theme,\n    };\n    await Logger.writeToFile(entry);\n    Logger.hasLoggedBasicDeviceInfo = true;\n  }\n\n  /**\n   * Logs a network request\n   *\n   * @remarks See {@link Entry}\n   * @param entry\n   */\n  static async logRequest(entry: Entry) {\n    await Logger.logBasicDeviceInfo();\n    // Don't log if debug options not enabled\n    if (!parseInt(Config.ENABLE_DEBUG_OPTIONS!, 10)) return;\n    // Don't log if login endpoint\n    if (entry.endpoint.includes('login')) return;\n    await Logger.writeToFile({\n      type: 'REQUEST',\n      ...entry,\n    });\n  }\n\n  /**\n   * Like {@link logRequest}, but called synchronously\n   * @param entry\n   */\n  static logRequestSync(entry: Entry) {\n    (async () => {\n      await Logger.logBasicDeviceInfo();\n      await Logger.logRequest(entry);\n    })();\n  }\n\n  /**\n   * Logs an error's name, message, and stack trace\n   * @param error\n   */\n  static async logError(error: Error) {\n    await Logger.logBasicDeviceInfo();\n    await Logger.writeToFile({\n      type: 'ERROR',\n      ...error,\n    });\n  }\n}\n","import React from 'react';\nimport {useFonts} from 'expo-font';\nimport App from './App';\nimport {genericPlatform} from './utils/platform';\n\nexport default function AppWeb() {\n  const [fontsLoaded] = useFonts({\n    'Inter-Regular': require('../assets/fonts/Inter-Regular.ttf'),\n    'Inter-Medium': require('../assets/fonts/Inter-Medium.ttf'),\n    'Inter-Bold': require('../assets/fonts/Inter-Bold.ttf'),\n  });\n\n  /**\n   * On web we render the app as soon as possible, without waiting for the fonts.\n   */\n  if (!fontsLoaded && genericPlatform === 'desktop') {\n    return null;\n  }\n\n  return <App />;\n}\n","import React, {FC} from 'react';\nimport {Pressable, PressableProps} from 'react-native';\n\n/**\n * Basic pressable component.\n * All pressable components shall derive from this.\n * TODO implement visual behavior on touch etc...\n * @param param0\n * @returns\n */\nconst PressableBase: FC<PressableProps> = ({children, ...props}) => {\n  return <Pressable {...props}>{children}</Pressable>;\n};\n\nexport default PressableBase;\n","/**\n * @file Manages actions and state related to exam sessions and exam bookings\n */\n\nimport {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport {Device} from 'open-polito-api/lib/device';\nimport {ExamSession, getExamSessions} from 'open-polito-api/lib/exam_sessions';\nimport {\n  errorStatus,\n  initialStatus,\n  pendingStatus,\n  shouldWaitForCooldown,\n  Status,\n  successStatus,\n} from './status';\nimport {RootState} from './store';\n\nexport type ExamsState = {\n  exams: ExamSession[];\n  getExamsStatus: Status;\n};\n\nconst initialState: ExamsState = {\n  exams: [],\n  getExamsStatus: initialStatus(),\n};\n\n/**\n * Gets exam sessions. Returns {@link ExamSession[]}\n */\nexport const getExams = createAsyncThunk<\n  ExamSession[],\n  Device,\n  {state: RootState}\n>(\n  'exams/getExams',\n  async device => {\n    const exams = await getExamSessions(device);\n    return exams;\n  },\n  {\n    condition: (_, {getState}) =>\n      !shouldWaitForCooldown(getState().exams.getExamsStatus),\n  },\n);\n\nexport const examsSlice = createSlice({\n  name: 'exams',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getExams.pending, state => {\n        state.getExamsStatus = pendingStatus();\n      })\n      .addCase(getExams.fulfilled, (state, {payload}) => {\n        state.exams = payload;\n        state.getExamsStatus = successStatus();\n      })\n      .addCase(getExams.rejected, (state, {error}) => {\n        state.getExamsStatus = errorStatus(error);\n      });\n  },\n});\n\nexport const {} = examsSlice.actions;\n\nexport default examsSlice.reducer;\n","/**\n * @file Manages actions and state related to login, logout and device registration\n */\n\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {getDeviceData} from '../utils/api-utils';\nimport {\n  AuthStatus,\n  AUTH_STATUS,\n  errorStatus,\n  initialStatus,\n  pendingStatus,\n  Status,\n  successStatus,\n} from './status';\nimport {RootState} from './store';\nimport {Device} from 'open-polito-api/lib/device';\nimport defaultConfig, {Configuration} from '../defaultConfig';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {ping} from 'open-polito-api/lib/utils';\nimport {v4 as UUIDv4} from 'uuid';\nimport {setUserInfo} from './userSlice';\nimport {clearCredentials, getCredentials, saveCredentials} from '../utils/fs';\n\nexport type ToastData = {\n  visible: boolean;\n  message: string;\n  type: 'info' | 'success' | 'warn' | 'err';\n  icon?: string;\n};\n\nexport type LoginData = {\n  user: string;\n  uuid: string;\n};\n\nexport type SessionState = {\n  authStatus: AuthStatus;\n\n  deviceRegisterStatus: Status;\n\n  loginStatus: Status;\n  loginData?: LoginData;\n\n  logoutStatus: Status;\n\n  config: Configuration;\n\n  toast: ToastData;\n};\n\nconst initialState: SessionState = {\n  authStatus: AUTH_STATUS.PENDING,\n\n  deviceRegisterStatus: initialStatus(),\n\n  loginStatus: initialStatus(),\n  loginData: undefined,\n\n  logoutStatus: initialStatus(),\n\n  config: defaultConfig,\n\n  toast: {\n    visible: false,\n    message: '',\n    type: 'info',\n    icon: '',\n  },\n};\n\n/**\n * Given {@link Device}, calls {@link Device.register}.\n *\n * @remarks\n * Call this only before logging in with password.\n */\nexport const registerDevice = createAsyncThunk<\n  void,\n  Device,\n  {state: RootState}\n>('session/registerDevice', async device => {\n  const deviceData = getDeviceData();\n  await device.register(deviceData);\n});\n\n/**\n * Logs in, with token or password.\n * If with token, fetches credentials from Keychain/AsyncStorage.\n * If with password, uses provided username and password.\n *\n * @remarks\n * When given \"password\" as login method, dispatches {@link registerDevice}.\n * Always pings PoliTo servers before logging in, to detect offline mode.\n *\n * On login success, sets Keychain credentials and dispatches {@link setUserInfo}.\n */\nexport const login = createAsyncThunk<\n  LoginData,\n  (\n    | {method: 'token'}\n    | {\n        method: 'password';\n        username: string;\n        password: string;\n      }\n  ) & {device: Device},\n  {state: RootState}\n>('session/login', async (args, {dispatch, rejectWithValue}) => {\n  try {\n    let response;\n    switch (args.method) {\n      case 'token':\n        const savedCredentials = await getCredentials();\n        if (!savedCredentials) {\n          throw new Error();\n        }\n        const {username, password} = savedCredentials;\n        const {uuid, token} = JSON.parse(password);\n        args.device.uuid = uuid;\n        response = await args.device.loginWithToken(username, token);\n        break;\n      case 'password':\n        const new_uuid = UUIDv4();\n        args.device.uuid = new_uuid;\n        await dispatch(registerDevice(args.device));\n        response = await args.device.loginWithCredentials(\n          args.username,\n          args.password,\n        );\n        break;\n    }\n    const username = 'S' + response.data.current_id;\n    dispatch(setUserInfo(response.data));\n    await saveCredentials(\n      username,\n      JSON.stringify({uuid: args.device.uuid, token: response.token}),\n    );\n    return {user: username, uuid: args.device.uuid};\n  } catch (e) {\n    // There has been an error, check if we're offline\n    try {\n      await ping();\n    } catch (e2) {\n      return rejectWithValue('offline');\n    }\n  }\n  throw new Error();\n});\n\n/**\n * Clears keychain, logs out and sets auth status as NOT_VALID.\n * Ignores whether or not the logout has been correctly sent to the server.\n */\nexport const logout = createAsyncThunk<void, Device, {state: RootState}>(\n  'session/logout',\n  async (device, {dispatch}) => {\n    await clearCredentials();\n    try {\n      await device.logout();\n    } finally {\n      dispatch(setAuthStatus(AUTH_STATUS.NOT_VALID));\n    }\n  },\n);\n\n/**\n * Updates configuration in AsyncStorage and in store.\n * Returns void.\n */\nexport const setConfig = createAsyncThunk<\n  void,\n  Configuration,\n  {state: RootState}\n>('session/setConfig', async (config, {dispatch}) => {\n  await dispatch(setConfigState(config));\n  await AsyncStorage.setItem('@config', JSON.stringify(config));\n});\n\n/**\n * Resets configuration to default\n */\nexport const resetConfig = createAsyncThunk<void, void, {state: RootState}>(\n  'session/resetConfig',\n  async (_, {dispatch}) => {\n    await dispatch(setConfig(defaultConfig));\n  },\n);\n\nexport const sessionSlice = createSlice({\n  name: 'session',\n  initialState,\n  reducers: {\n    setAuthStatus: (state, action: PayloadAction<AuthStatus>) => {\n      state.authStatus = action.payload;\n    },\n    setConfigState: (state, action: PayloadAction<Configuration>) => {\n      state.config = action.payload;\n    },\n    setToast: (state, action: PayloadAction<ToastData>) => {\n      state.toast = action.payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(registerDevice.pending, state => {\n        state.deviceRegisterStatus = pendingStatus();\n      })\n      .addCase(registerDevice.fulfilled, state => {\n        state.deviceRegisterStatus = successStatus();\n      })\n      .addCase(registerDevice.rejected, (state, action) => {\n        state.deviceRegisterStatus = errorStatus(action.error);\n      })\n\n      .addCase(login.pending, state => {\n        state.loginStatus = pendingStatus();\n        state.authStatus = AUTH_STATUS.PENDING;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loginStatus = successStatus();\n        state.authStatus = AUTH_STATUS.VALID;\n        state.loginData = {\n          user: action.payload.user,\n          uuid: action.payload.uuid,\n        };\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.authStatus =\n          action.payload === 'offline'\n            ? AUTH_STATUS.OFFLINE\n            : AUTH_STATUS.NOT_VALID;\n        state.loginStatus = errorStatus(action.error);\n      });\n  },\n});\n\nexport const {setAuthStatus, setConfigState, setToast} = sessionSlice.actions;\n\nexport default sessionSlice.reducer;\n","/**\n * @file Functions and types for async thunk status management, and for minimizing Redux boilerplate\n */\n\nimport {SerializedError} from '@reduxjs/toolkit';\n\n/**\n * Status codes to be used in store thunks.\n * Storing whole strings for status codes is useless.\n */\nexport const STATUS = {\n  IDLE: 0, // Action not called yet.\n  PENDING: 1, // Action pending\n  SUCCESS: 2, // Action completed\n  ERROR: 3, // Action returned error\n};\n\nexport type StatusCode =\n  | typeof STATUS.IDLE\n  | typeof STATUS.PENDING\n  | typeof STATUS.SUCCESS\n  | typeof STATUS.ERROR;\n\n/**\n * Status to use in store.\n */\nexport type Status = {\n  code: StatusCode;\n  lastUpdated: number; // For rate limiter. UNIX millis, otherwise 0 when never fetched or if rate limiter not needed\n  error: SerializedError | null; // Error returned by async thunk. null when initialized\n\n  // From @reduxjs/toolkit:\n  // interface SerializedError {\n  //   name?: string\n  //   message?: string\n  //   code?: string\n  //   stack?: string\n  // }\n};\n\n/**\n * Initial status to use in store\n */\nexport const initialStatus = (): Status => {\n  return {\n    code: STATUS.IDLE,\n    lastUpdated: 0,\n    error: null,\n  };\n};\n\n/**\n * Success status\n * @returns success status\n */\nexport const successStatus = (): Status => {\n  return {\n    code: STATUS.SUCCESS,\n    lastUpdated: Date.now(),\n    error: null,\n  };\n};\n\n/**\n * Pending status\n * @returns pending status\n */\nexport const pendingStatus = (): Status => {\n  return {\n    code: STATUS.PENDING,\n    lastUpdated: Date.now(),\n    error: null,\n  };\n};\n\n/**\n * Error status\n * @param error SerializedError generated by async thunk\n * @returns error status\n */\nexport const errorStatus = (error: SerializedError): Status => {\n  return {\n    code: STATUS.ERROR,\n    lastUpdated: Date.now(),\n    error: {...error, stack: ''}, // Don't record stack for now\n  };\n};\n\n/**\n * Auth status codes. These determine app routing.\n *\n * @remarks\n * PENDING    Still authenticating. Show Splash screen.\n * VALID      Access granted. Show {@link AppStack}.\n * NOT_VALID  Access denied. Show Login screen.\n * OFFLINE    Can't connect. Act accordingly.\n * RETRY      Retrying connection (e.g. after OFFLINE).\n */\nexport const AUTH_STATUS = {\n  PENDING: 0,\n  VALID: 1,\n  NOT_VALID: 2,\n  OFFLINE: 3,\n  RETRY: 4,\n};\n\n/**\n * Auth status type\n */\nexport type AuthStatus =\n  | typeof AUTH_STATUS.PENDING\n  | typeof AUTH_STATUS.VALID\n  | typeof AUTH_STATUS.NOT_VALID\n  | typeof AUTH_STATUS.OFFLINE\n  | typeof AUTH_STATUS.RETRY;\n\n/**\n * Returns true if the cooldown period (rate limiting) has not passed yet.\n * @param status\n * @param customTimeoutSeconds Custom interval (in seconds)\n * @returns boolean\n */\nexport const shouldWaitForCooldown = (\n  status: Status | undefined,\n  customTimeoutSeconds?: number,\n): boolean => {\n  // If status is undefined, or if error, skip rate limiter\n  if (!status || status.code === STATUS.ERROR) return false;\n  return (\n    Date.now() - status.lastUpdated < (customTimeoutSeconds || 2 * 60) * 1000\n  );\n};\n","import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\n\nexport interface ModalContextProps {\n  modal: ReactNode;\n  visible: boolean;\n  setModal: (modal: ReactNode) => any;\n  showModal: () => any;\n  hideModal: () => any;\n}\n\nexport const ModalContext = createContext<ModalContextProps>({\n  modal: null,\n  visible: false,\n  setModal: () => {},\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nexport const ModalProvivder = ({children}: {children: ReactNode}) => {\n  const [modal, setModal] = useState<ReactNode>(null);\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const showModal = useCallback(() => setVisible(true), []);\n  const hideModal = useCallback(() => {\n    setVisible(false);\n    setTimeout(() => setModal(null), 300); // We give time for layout animations before deleting modal contents\n  }, []);\n\n  useEffect(() => {\n    if (modal) {\n      setVisible(true);\n    }\n  }, [modal]);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modal,\n        visible,\n        setModal,\n        showModal,\n        hideModal,\n      }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n","import React, {Suspense, useEffect} from 'react';\nimport {Provider} from 'react-redux';\nimport Router from './routes/Router';\n\nimport i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport EN from './locales/en';\nimport IT from './locales/it';\nimport * as RNLocalize from 'react-native-localize';\n\nimport 'moment/locale/it';\n\nimport store from './store/store';\nimport moment from 'moment';\nimport {Device} from 'open-polito-api/lib/device';\nimport DeviceProvider from './context/Device';\nimport {\n  RenderHTMLConfigProvider,\n  TRenderEngineProvider,\n} from 'react-native-render-html';\nimport Toast from './ui/Toast';\nimport {ModalProvivder} from './context/ModalProvider';\nimport ModalComponent from './components/modals/ModalComponent';\nimport Fallback from './ui/Fallback';\n\nlet lng = '';\nif (RNLocalize.getLocales()[0].languageCode === 'it') {\n  lng = 'it';\n} else {\n  lng = 'en';\n}\n\ni18n.use(initReactI18next).init({\n  resources: {\n    en: {translation: EN},\n    it: {translation: IT},\n  },\n  lng: lng,\n  fallbackLng: 'en',\n  interpolation: {escapeValue: false},\n  debug: false,\n});\n\nmoment.locale(lng);\n\n// Device instance to pass to Context API for global use\nconst defaultDevice = new Device('', 10000, () => {});\n\nexport default function App() {\n  useEffect(() => {\n    RNLocalize.addEventListener('change', setNewLocale);\n    return () => {\n      RNLocalize.removeEventListener('change', setNewLocale);\n    };\n  }, []);\n\n  const setNewLocale = () => {\n    if (RNLocalize.getLocales()[0].languageCode === 'it') {\n      i18n.changeLanguage('it');\n      moment.locale('it');\n    } else {\n      i18n.changeLanguage('en');\n      moment.locale('en');\n    }\n  };\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <Provider store={store}>\n        <DeviceProvider device={defaultDevice}>\n          <ModalProvivder>\n            <TRenderEngineProvider\n              tagsStyles={{\n                p: {\n                  marginTop: 0,\n                },\n              }}>\n              <RenderHTMLConfigProvider>\n                <Router />\n                <Toast />\n                <ModalComponent />\n              </RenderHTMLConfigProvider>\n            </TRenderEngineProvider>\n          </ModalProvivder>\n        </DeviceProvider>\n      </Provider>\n    </Suspense>\n  );\n}\n","import React, {useContext, useEffect, useState} from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {View} from 'react-native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport colors from '../colors';\nimport {useTranslation} from 'react-i18next';\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n  SessionState,\n  setAuthStatus,\n  setConfig,\n  setConfigState,\n} from '../store/sessionSlice';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport defaultConfig, {\n  Configuration,\n  CONFIG_SCHEMA_VERSION,\n} from '../defaultConfig';\nimport {AUTH_STATUS} from '../store/status';\nimport {AppDispatch, RootState} from '../store/store';\nimport {\n  checkForUpdates,\n  ReleaseJsonEntry,\n  updateCleanup,\n} from '../utils/updater';\nimport {ModalContext} from '../context/ModalProvider';\nimport BaseActionConfirmModal from '../components/modals/BaseActionConfirmModal';\nimport Text from '../ui/core/Text';\nimport {p} from '../scaling';\nimport {DeviceContext} from '../context/Device';\nimport {getLocales} from 'react-native-localize';\nimport Updater from '../screens/Updater';\nimport {RenderHTMLSource} from 'react-native-render-html';\n\n/**\n * Types for React Navigation\n */\nexport type AuthStackParamList = {\n  Login: undefined;\n};\n\nexport type AppStackParamList = {\n  HomeRouter: undefined;\n  Search: undefined;\n  Course: undefined;\n  Video: undefined;\n};\n\nexport type UpdaterState = {\n  checked: boolean;\n  acceptedUpdate: boolean;\n  releaseData?: ReleaseJsonEntry;\n};\n\n/**\n * Stack navigators\n */\nconst AuthStack = createNativeStackNavigator<AuthStackParamList>();\nconst AppStack = createNativeStackNavigator<AppStackParamList>();\n\nconst Search = React.lazy(() => import('../screens/Search'));\nconst Course = React.lazy(() => import('../screens/Course'));\nconst Video = React.lazy(() => import('../screens/Video'));\nconst LoginScreen = React.lazy(() => import('../screens/LoginScreen'));\nconst HomeRouter = React.lazy(() => import('../routes/HomeRouter'));\n\n/**\n * Main routing component. Manages login and access to {@link AuthStack} and {@link AppStack}.\n */\nexport default function Router() {\n  const {t} = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n  const {setModal} = useContext(ModalContext);\n  const {dark} = useContext(DeviceContext);\n\n  // Update checking-related stuff\n  const [updaterState, setUpdaterState] = useState<UpdaterState>({\n    checked: false,\n    acceptedUpdate: false,\n  });\n\n  /**\n   * Check for updates and cleanup\n   */\n  useEffect(() => {\n    if (!updaterState.checked) {\n      checkForUpdates().then(data =>\n        setUpdaterState(prev => ({...prev, releaseData: data, checked: true})),\n      );\n    }\n    updateCleanup();\n  }, [updaterState.checked]);\n\n  // Show modal if update available\n  useEffect(() => {\n    if (updaterState.releaseData) {\n      const locale = getLocales()[0].languageCode;\n      let notes = updaterState.releaseData.notes.find(\n        n => n.language === locale,\n      );\n\n      setModal(\n        <BaseActionConfirmModal\n          title={t('newUpdateModalTitle')}\n          icon=\"download\"\n          accentColor={'#2dba2a'}\n          onConfirm={() =>\n            setUpdaterState(prev => ({\n              ...prev,\n              acceptedUpdate: true,\n            }))\n          }>\n          <Text s={12 * p} w=\"m\" c={dark ? colors.gray100 : colors.gray800}>\n            {t('newUpdateModalText') + '\\n\\n' + t('newUpdateModalNotes') + '\\n'}\n          </Text>\n          {updaterState.releaseData.format === 'text'\n            ? (notes?.content || []).map(note => (\n                <Text\n                  s={12 * p}\n                  w=\"r\"\n                  c={dark ? colors.gray100 : colors.gray800}>\n                  {`  • ${note}`}\n                </Text>\n              ))\n            : (notes?.content || []).map(note => (\n                <RenderHTMLSource source={{html: note}} />\n              ))}\n        </BaseActionConfirmModal>,\n      );\n    }\n  }, [updaterState.releaseData, dark, setModal, t]);\n\n  const {authStatus} = useSelector<RootState, SessionState>(\n    state => state.session,\n  );\n\n  // Logging-related stuff\n  const {logging, login} = useSelector<RootState, Configuration>(\n    state => state.session.config,\n  );\n\n  const [message, setMessage] = useState(<View></View>);\n\n  const [setupDone, setSetupDone] = useState(false);\n  // Initial setup\n  useEffect(() => {\n    (async () => {\n      // If login is set to false (first load or never logged in),\n      // set auth status as not valid, so that we'll skip to the login section.\n      // This saves data on web.\n      if (!login) {\n        setAuthStatus(AUTH_STATUS.NOT_VALID);\n      }\n\n      // Set config in store\n      let loadedConfig = (JSON.parse(\n        (await AsyncStorage.getItem('@config')) || '{}',\n      ) || defaultConfig) as Configuration;\n\n      /**\n       * Check for old schema and/or new default settings items.\n       */\n      if (\n        !loadedConfig.schemaVersion ||\n        loadedConfig.schemaVersion !== CONFIG_SCHEMA_VERSION\n      ) {\n        const currentSettingsKeys = Object.keys(loadedConfig);\n        const defaultSettingsKeys = Object.keys(defaultConfig);\n\n        // Delete settings that have been deleted in default config\n        const toDelete = currentSettingsKeys.filter(\n          k => !defaultSettingsKeys.includes(k),\n        );\n        toDelete.forEach(k => delete (loadedConfig as any)[k]);\n\n        // Add missing new settings with their default value\n        dispatch(\n          setConfig({\n            ...loadedConfig,\n            ...defaultConfig,\n          }),\n        );\n      } else {\n        dispatch(setConfigState(loadedConfig));\n      }\n\n      // Setup complete\n      setSetupDone(true);\n    })();\n\n    return () => {\n      // Cleanup\n    };\n  }, []);\n\n  // If loggingEnabled changes, set whether to show top message\n  useEffect(() => {\n    logging\n      ? setMessage(buildMessage({text: t('Logging enabled'), type: 'warn'}))\n      : setMessage(<View></View>);\n  }, [logging, t]);\n\n  // Returns message component\n  const buildMessage = ({text = '', type = 'warn'}) => {\n    return (\n      <View\n        style={{\n          backgroundColor: type == 'warn' ? colors.orange : colors.black,\n          paddingVertical: 4,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Text s={10 * p} w=\"m\" c={colors.white}>\n          {text}\n        </Text>\n      </View>\n    );\n  };\n\n  if (!setupDone) {\n    return null;\n  }\n\n  if (updaterState.acceptedUpdate) {\n    return <Updater releaseData={updaterState.releaseData!} />;\n  }\n\n  if (authStatus !== AUTH_STATUS.NOT_VALID) {\n    return (\n      <NavigationContainer>\n        <AppStack.Navigator\n          screenOptions={{\n            headerShown: false,\n          }}>\n          <AppStack.Screen name=\"HomeRouter\" component={HomeRouter} />\n          <AppStack.Screen name=\"Search\" component={Search} />\n          <AppStack.Screen name=\"Course\" component={Course} />\n          <AppStack.Screen name=\"Video\" component={Video} />\n        </AppStack.Navigator>\n      </NavigationContainer>\n    );\n  }\n\n  return (\n    <NavigationContainer>\n      <AuthStack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}>\n        <AuthStack.Screen name=\"Login\" component={LoginScreen} />\n      </AuthStack.Navigator>\n    </NavigationContainer>\n  );\n}\n","export * from './updater.common';\n\nconst updateCleanup = async () => {};\nconst getUpdateDestinationFilePath = async () => {};\nconst checkFileMatchesSHA256 = async () => {};\n\nexport {updateCleanup, getUpdateDestinationFilePath, checkFileMatchesSHA256};\n","import {Platform} from 'react-native';\nimport Config from 'react-native-config';\nimport version from '../../version.json';\n\n/**\n * Structure of one array item found in \"release.json\",\n * found in the root directory of the repo.\n */\nexport type ReleaseJsonEntry = {\n  type: 'release' | 'beta' | 'dev';\n  tag: string;\n  versionCode: number;\n  format: 'text' | 'html';\n  notes: {\n    language: 'it' | 'en';\n    content: string[];\n  }[];\n};\n\n/**\n * Structure of one array item found in \"assets.json\",\n * found for each GitHub release.\n */\nexport type AssetsJsonEntry = {\n  os: string;\n  arch: string;\n  name: string;\n  sha256: string;\n};\n\n/**\n * Structure of the portion we need from GitHub's response json\n * when fetching release data.\n */\nexport type PartialGitHubReleaseResponse = {\n  assets: {\n    name: string;\n    browser_download_url: string;\n    size: number; // in bytes\n  }[];\n};\n\nexport const isGitHubOnline = async (): Promise<boolean> => {\n  const statusCode = (await fetch('https://api.github.com')).status;\n  return statusCode === 200;\n};\n\n/**\n * Returns the release.json contents\n * @returns\n */\nexport const fetchReleaseJson = async (): Promise<ReleaseJsonEntry[]> => {\n  return (await (\n    await fetch(\n      'https://raw.githubusercontent.com/open-polito/open-polito/master/release.json',\n    )\n  ).json()) as ReleaseJsonEntry[];\n};\n\n/**\n * Return release data by tag\n * @param tag The release tag\n */\nexport const fetchReleaseByTag = async (\n  tag: string,\n): Promise<PartialGitHubReleaseResponse> => {\n  return (await (\n    await fetch(\n      `https://api.github.com/repos/open-polito/open-polito/releases/tags/${tag}`,\n      {\n        headers: {Accept: 'application/vnd.github+json'},\n      },\n    )\n  ).json()) as PartialGitHubReleaseResponse;\n};\n\n/**\n * Check for updates, if and only if the following are all true:\n * - The OS is Android\n * - The app was not installed from PLAY_STORE (see {@link version})\n * - The device is online (can reach GitHub API)\n */\nexport const checkForUpdates = async (): Promise<\n  ReleaseJsonEntry | undefined\n> => {\n  if (Platform.OS === 'android' && !['PLAY_STORE'].includes(version.from)) {\n    (async () => {\n      const reachable = await isGitHubOnline();\n      if (!reachable) {\n        return undefined;\n      }\n      try {\n        const releaseData = (await fetchReleaseJson()).find(\n          r => r.type === Config.VARIANT && r.versionCode > version.versionCode,\n        );\n        return releaseData;\n      } catch (e) {}\n    })();\n  }\n  return undefined;\n};\n"],"sourceRoot":""}